     A(com.crashlytics.android.v p1)
    {
        this.a = p1;
        return;
    }
    public final synthetic Object call()
    {
        com.crashlytics.android.v.f(this.a).createNewFile();
        com.crashlytics.android.internal.v.a().b().a("Crashlytics", "Initialization marker file created.");
        return 0;
    }
     B(com.crashlytics.android.v p1)
    {
        this.a = p1;
        return;
    }
    private Boolean a()
    {
        v0 = com.crashlytics.android.v.f(this.a).delete();
        com.crashlytics.android.internal.v.a().b().a("Crashlytics", new StringBuilder("Initialization marker file removed: ").append(v0).toString());
        return Boolean.valueOf(v0);
    }
    public final synthetic Object call()
    {
        this.a();
        return this;
    }
     C(com.crashlytics.android.v p1)
    {
        this.a = p1;
        return;
    }
    public final synthetic Object call()
    {
        return Boolean.valueOf(com.crashlytics.android.v.f(this.a).exists());
    }
    public CrashTest()
    {
        return;
    }
    public void crashAsyncTask(long p5)
    {
        v0 = new com.crashlytics.android.j(this, p5);
        v1 = new Void[1];
        v1[0] = 0;
        v0.execute(v1);
        return;
    }
    public void indexOutOfBounds()
    {
        v0 = new int[2];
        com.crashlytics.android.internal.v.a().b().a("Crashlytics", new StringBuilder("Out of bounds value: ").append(v0[10]).toString());
        return;
    }
    public void stackOverflow()
    {
        this.stackOverflow();
        return;
    }
    public void throwFiveChainedExceptions()
    {
        throw new RuntimeException("1");
    }
    public void throwRuntimeException(String p2)
    {
        throw new RuntimeException(p2);
    }
     CrashlyticsMissingDependencyException(String p2, String p3)
    {
        this(com.crashlytics.android.CrashlyticsMissingDependencyException.a(p2, p3));
        return;
    }
    private static String a(String p6, String p7)
    {
        v1 = new StringBuilder();
        v1.append("\x0aThis app relies on Crashlytics. Configure your build environment here: \x0a");
        v0 = new StringBuilder();
        v3 = new Object[2];
        v3[0] = java.net.URLEncoder.encode(p6, "UTF-8");
        v3[1] = java.net.URLEncoder.encode(p7, "UTF-8");
        v1.append(v0.append(String.format("https://crashlytics.com/register/%s/android/%s", v3)).append("\x0a").toString());
        return v1.toString();
    }
     E(com.crashlytics.android.v p1)
    {
        this.a = p1;
        return;
    }
    public final void run()
    {
        this.a.a(com.crashlytics.android.v.a(this.a, com.crashlytics.android.f.a));
        return;
    }
     F(com.crashlytics.android.v p1, String p2)
    {
        this.a = p2;
        return;
    }
    public final boolean accept(java.io.File p2, String p3)
    {
        return p3.startsWith(this.a);
    }
     G(com.crashlytics.android.v p1, Runnable p2)
    {
        this.a = p2;
        return;
    }
    public final void run()
    {
        this.a.run();
        return;
    }
     H()
    {
        return;
    }
    public final synthetic int compare(Object p3, Object p4)
    {
        return p4.getName().compareTo(p3.getName());
    }
     I(com.crashlytics.android.v p1, java.util.concurrent.Callable p2)
    {
        this.a = p2;
        return;
    }
    public final Object call()
    {
        return this.a.call();
    }
     J()
    {
        return;
    }
    public final synthetic int compare(Object p3, Object p4)
    {
        return p3.getName().compareTo(p4.getName());
    }
     K()
    {
        return;
    }
    public final boolean accept(java.io.File p2, String p3)
    {
        return com.crashlytics.android.v.i().matcher(p3).matches();
    }
     L(com.crashlytics.android.v p1)
    {
        this.a = p1;
        return;
    }
    public final void onReceive(android.content.Context p3, android.content.Intent p4)
    {
        com.crashlytics.android.v.a(this.a, 1);
        return;
    }
     M(com.crashlytics.android.v p1)
    {
        this.a = p1;
        return;
    }
    public final void onReceive(android.content.Context p3, android.content.Intent p4)
    {
        com.crashlytics.android.v.a(this.a, 0);
        return;
    }
     N(com.crashlytics.android.v p1, java.util.Date p2, Thread p3, Throwable p4)
    {
        this.d = p1;
        this.a = p2;
        this.b = p3;
        this.c = p4;
        return;
    }
    public final synthetic Object call()
    {
        com.crashlytics.android.v.a(this.d, this.a, this.b, this.c);
        return 0;
    }
     O(com.crashlytics.android.v p1)
    {
        this.a = p1;
        return;
    }
    public final synthetic Object call()
    {
        if(com.crashlytics.android.v.a(this.a).get() != 0) {
            v0 = Boolean.valueOf(0);
        } else {
            com.crashlytics.android.v.b(this.a);
            com.crashlytics.android.v.c(this.a);
            v0 = Boolean.valueOf(1);
        }
        return v0;
    }
     P(com.crashlytics.android.v p1, java.util.Date p2, Thread p3, Throwable p4)
    {
        this.d = p1;
        this.a = p2;
        this.b = p3;
        this.c = p4;
        return;
    }
    public final void run()
    {
        if(com.crashlytics.android.v.a(this.d).get() == 0) {
            com.crashlytics.android.v.b(this.d, this.a, this.b, this.c);
        }
        return;
    }
    private Q()
    {
        return;
    }
    synthetic Q(byte p1)
    {
        return;
    }
    public final boolean accept(java.io.File p2, String p3)
    {
        if((com.crashlytics.android.v.a.accept(p2, p3) != 0) || (com.crashlytics.android.v.i().matcher(p3).matches() == 0)) {
            v0 = 0;
        } else {
            v0 = 1;
        }
        return v0;
    }
    public R(String p1)
    {
        this.a = p1;
        return;
    }
    public final boolean accept(java.io.File p2, String p3)
    {
        if((p3.contains(this.a) == 0) || (p3.endsWith(".cls_temp") != 0)) {
            v0 = 0;
        } else {
            v0 = 1;
        }
        return v0;
    }
    public S(String p1)
    {
        this.a = p1;
        return;
    }
    public final boolean accept(java.io.File p4, String p5)
    {
        v0 = 0;
        if((p5.equals(new StringBuilder().append(this.a).append(".cls").toString()) == 0) && ((p5.contains(this.a) != 0) && (p5.endsWith(".cls_temp") == 0))) {
            v0 = 1;
        }
        return v0;
    }
    public U(String p1, com.crashlytics.android.Z p2)
    {
        this.a = p1;
        this.b = p2;
        return;
    }
    public X(android.content.Context p1, com.crashlytics.android.internal.aQ p2)
    {
        this.a = p1;
        this.b = p2;
        return;
    }
    private String a(String p3, String p4)
    {
        v0 = com.crashlytics.android.internal.ab.a(this.a, p3);
        if((v0 != 0) && (v0.length() != 0)) {
            v1 = 0;
        } else {
            v1 = 1;
        }
        if(v1 == 0) {
            p4 = v0;
        }
        return p4;
    }
    public final String a()
    {
        this.a("com.crashlytics.CrashSubmissionPromptTitle", this.b.a);
        return this;
    }
    public final String b()
    {
        this.a("com.crashlytics.CrashSubmissionPromptMessage", this.b.b);
        return this;
    }
    public final String c()
    {
        this.a("com.crashlytics.CrashSubmissionSendTitle", this.b.c);
        return this;
    }
    public final String d()
    {
        this.a("com.crashlytics.CrashSubmissionAlwaysSendTitle", this.b.g);
        return this;
    }
    public final String e()
    {
        this.a("com.crashlytics.CrashSubmissionCancelTitle", this.b.e);
        return this;
    }
    private Y(String p1, int p2, int p3, int p4)
    {
        this.a = p1;
        this.b = p2;
        this.c = p3;
        this.d = p4;
        return;
    }
    public static com.crashlytics.android.Y a(android.content.Context p6, String p7)
    {
        if(p7 == 0) {
            v0 = 0;
        } else {
            v2 = com.crashlytics.android.internal.ab.h(p6);
            com.crashlytics.android.internal.v.a().b().a("Crashlytics", new StringBuilder("App icon resource ID is ").append(v2).toString());
            v3 = new android.graphics.BitmapFactory$Options();
            v3.inJustDecodeBounds = 1;
            android.graphics.BitmapFactory.decodeResource(p6.getResources(), v2, v3);
            v0 = new com.crashlytics.android.Y(p7, v2, v3.outWidth, v3.outHeight);
        }
        return v0;
    }
    public Z(java.io.File p2)
    {
        this(p2, java.util.Collections.emptyMap());
        return;
    }
    public Z(java.io.File p5, java.util.Map p6)
    {
        this.a = p5;
        this.b = new java.util.HashMap(p6);
        if(this.a.length() == 0.0) {
            this.b.putAll(com.crashlytics.android.aa.a);
        }
        return;
    }
    public boolean a()
    {
        com.crashlytics.android.internal.v.a().b().a("Crashlytics", new StringBuilder("Removing report at ").append(this.a.getPath()).toString());
        return this.a.delete();
    }
    public String b()
    {
        return this.d().getName();
    }
    public String c()
    {
        v0 = this.b();
        return v0.substring(0, v0.lastIndexOf(46));
    }
    public java.io.File d()
    {
        return this.a;
    }
    public java.util.Map e()
    {
        return java.util.Collections.unmodifiableMap(this.b);
    }
    static aa()
    {
        com.crashlytics.android.aa.b = new com.crashlytics.android.ab();
        com.crashlytics.android.aa.a = java.util.Collections.singletonMap("X-CRASHLYTICS-INVALID-SESSION", "1");
        v0 = new short[6];
        v0 = {10, 0, 20, 0, 30, 0, 60, 0, 120, 0, 44};
        com.crashlytics.android.aa.c = v0;
        return;
    }
    public aa(com.crashlytics.android.V p3)
    {
        this.d = new Object();
        if (p3 != 0) {
            this.e = p3;
            return;
        } else {
            throw new IllegalArgumentException("createReportCall must not be null.");
        }
    }
    static synthetic Thread a(com.crashlytics.android.aa p1, Thread p2)
    {
        p1.f = 0;
        return 0;
    }
    static synthetic short[] b()
    {
        return com.crashlytics.android.aa.c;
    }
    final java.util.List a()
    {
        com.crashlytics.android.internal.v.a().b().a("Crashlytics", "Checking for crash reports...");
        v1 = this.d;
        synchronized(v1) {
            v2 = com.crashlytics.android.internal.v.a().h().listFiles(com.crashlytics.android.aa.b);
        }
        v1 = new java.util.LinkedList();
        v3 = v2.length;
        v0 = 0;
        while (v0 < v3) {
            v4 = v2[v0];
            com.crashlytics.android.internal.v.a().b().a("Crashlytics", new StringBuilder("Found crash report ").append(v4.getPath()).toString());
            v1.add(new com.crashlytics.android.Z(v4));
            v0 = (v0 + 1);
        }
        if(v1.size() == 0) {
            com.crashlytics.android.internal.v.a().b().a("Crashlytics", "No reports found.");
        }
        return v1;
    }
    public final synchronized void a(float p4)
    {
        synchronized(this) {
            if(this.f == 0) {
                this.f = new Thread(new com.crashlytics.android.ac(this, p4), "Crashlytics Report Uploader");
                this.f.start();
            }
        }
        return;
    }
    final boolean a(com.crashlytics.android.Z p8)
    {
        v0 = 0;
        v2 = this.d;
        synchronized(v2) {
            v3 = this.e.a(new com.crashlytics.android.U(com.crashlytics.android.internal.r.a(com.crashlytics.android.internal.v.a().getContext(), com.crashlytics.android.internal.v.a().f()), p8));
            v4 = com.crashlytics.android.internal.v.a().b();
            v6 = new StringBuilder("Crashlytics report upload ");
            if(v3 == 0) {
                v1 = "FAILED: ";
            } else {
                v1 = "complete: ";
            }
            v4.b("Crashlytics", v6.append(v1).append(p8.b()).toString());
            if(v3 != 0) {
                p8.a();
                v0 = 1;
            }
        }
        return v0;
    }
     ab()
    {
        return;
    }
    public final boolean accept(java.io.File p2, String p3)
    {
        if((p3.endsWith(".cls") == 0) || (p3.contains("Session") != 0)) {
            v0 = 0;
        } else {
            v0 = 1;
        }
        return v0;
    }
    static int a(int p1, int p2)
    {
        return ((p1 << 3) | p2);
    }
    public b(String p1, String p2, String p3, String p4, String p5, String p6, int p7, String p8, String p9, com.crashlytics.android.Y p10)
    {
        this.a = p1;
        this.b = p2;
        this.c = p3;
        this.d = p4;
        this.e = p5;
        this.f = p6;
        this.g = p7;
        this.h = p8;
        this.i = p9;
        this.j = p10;
        return;
    }
    public static void a(java.io.File p5, java.io.FilenameFilter p6, int p7, java.util.Comparator p8)
    {
        v2 = p5.listFiles(p6);
        if((v2 != 0) && (v2.length > p7)) {
            java.util.Arrays.sort(v2, p8);
            v1 = v2.length;
            v3 = v2.length;
            v0 = 0;
            while ((v0 < v3) && (v1 > p7)) {
                v2[v0].delete();
                v1 = (v1 - 1);
                v0 = (v0 + 1);
            }
        }
        return;
    }
    public c(String p1, boolean p2)
    {
        this.a = p1;
        this.b = p2;
        return;
    }
    public final void a(String p5, String p6)
    {
        if ((com.crashlytics.android.internal.ab.e(this.a) == 0) || (!this.b)) {
            if(this.b) {
                com.crashlytics.android.internal.v.a().b().a("Crashlytics", "Configured not to require a build ID.");
            }
            return;
        } else {
            android.util.Log.e("Crashlytics", ".");
            android.util.Log.e("Crashlytics", ".     |  | ");
            android.util.Log.e("Crashlytics", ".     |  |");
            android.util.Log.e("Crashlytics", ".     |  |");
            android.util.Log.e("Crashlytics", ".   \ |  | /");
            android.util.Log.e("Crashlytics", ".    \    /");
            android.util.Log.e("Crashlytics", ".     \  /");
            android.util.Log.e("Crashlytics", ".      \/");
            android.util.Log.e("Crashlytics", ".");
            android.util.Log.e("Crashlytics", "This app relies on Crashlytics. Configure your build environment here: ");
            v2 = new Object[2];
            v2[0] = p5;
            v2[1] = p6;
            android.util.Log.e("Crashlytics", String.format("https://crashlytics.com/register/%s/android/%s", v2));
            android.util.Log.e("Crashlytics", ".");
            android.util.Log.e("Crashlytics", ".      /\");
            android.util.Log.e("Crashlytics", ".     /  \");
            android.util.Log.e("Crashlytics", ".    /    \");
            android.util.Log.e("Crashlytics", ".   / |  | \");
            android.util.Log.e("Crashlytics", ".     |  |");
            android.util.Log.e("Crashlytics", ".     |  |");
            android.util.Log.e("Crashlytics", ".     |  |");
            android.util.Log.e("Crashlytics", ".");
            throw new com.crashlytics.android.CrashlyticsMissingDependencyException(p5, p6);
        }
    }
    static d()
    {
        v1 = new byte[0];
        new com.crashlytics.android.d(v1);
        return;
    }
    private d(byte[] p2)
    {
        this.b = 0;
        this.a = p2;
        return;
    }
    public static com.crashlytics.android.d a(String p3)
    {
        return new com.crashlytics.android.d(p3.getBytes("UTF-8"));
    }
    public static com.crashlytics.android.d a(byte[] p2, int p3, int p4)
    {
        v0 = new byte[p4];
        System.arraycopy(p2, 0, v0, 0, p4);
        return new com.crashlytics.android.d(v0);
    }
    public final int a()
    {
        return this.a.length;
    }
    public final void a(byte[] p2, int p3, int p4, int p5)
    {
        System.arraycopy(this.a, p3, p2, p4, p5);
        return;
    }
    public final java.io.InputStream b()
    {
        return new java.io.ByteArrayInputStream(this.a);
    }
    public final boolean equals(Object p9)
    {
        v0 = 1;
        if(p9 != this) {
            if((p9 instanceof com.crashlytics.android.d) != 0) {
                v3 = this.a.length;
                if(v3 == p9.a.length) {
                    v2 = 0;
                    while (v2 < v3) {
                        if(this.a[v2] == p9.a[v2]) {
                            v2 = (v2 + 1);
                        } else {
                            v0 = 0;
                        }
                    }
                } else {
                    v0 = 0;
                }
            } else {
                v0 = 0;
            }
        }
        return v0;
    }
    public final int hashCode()
    {
        v0 = this.b;
        if(v0 == 0) {
            v2 = this.a.length;
            v1 = 0;
            v0 = v2;
            while (v1 < v2) {
                v3 = (this.a[v1] + (v0 * 31));
                v1 = (v1 + 1);
                v0 = v3;
            }
            if(v0 == 0) {
                v0 = 1;
            }
            this.b = v0;
        }
        return v0;
    }
    static e()
    {
        com.crashlytics.android.e.a = new java.util.concurrent.atomic.AtomicLong(0.0);
        return;
    }
    public e(com.crashlytics.android.internal.ao p13)
    {
        v0 = new byte[10];
        v1 = new java.util.Date().getTime();
        v3 = (v1 / 1000.0);
        v1 = (v1 * 1000.0);
        v5 = java.nio.ByteBuffer.allocate(4);
        v5.putInt(((int) v3));
        v5.order(java.nio.ByteOrder.BIG_ENDIAN);
        v5.position(0);
        v3 = v5.array();
        v0[0] = v3[0];
        v0[1] = v3[1];
        v0[2] = v3[2];
        v0[3] = v3[3];
        v1 = com.crashlytics.android.e.a(v1);
        v0[4] = v1[0];
        v0[5] = v1[1];
        v1 = com.crashlytics.android.e.a(com.crashlytics.android.e.a.incrementAndGet());
        v0[6] = v1[0];
        v0[7] = v1[1];
        v1 = com.crashlytics.android.e.a(((long) Integer.valueOf(android.os.Process.myPid()).shortValue()));
        v0[8] = v1[0];
        v0[9] = v1[1];
        v1 = com.crashlytics.android.internal.ab.a(p13.b());
        v0 = com.crashlytics.android.internal.ab.a(v0);
        v4 = new Object[4];
        v4[0] = v0.substring(0, 12);
        v4[1] = v0.substring(12, 16);
        v4[2] = v0.subSequence(16, 20);
        v4[3] = v1.substring(0, 12);
        com.crashlytics.android.e.b = String.format(java.util.Locale.US, "%s-%s-%s-%s", v4).toUpperCase(java.util.Locale.US);
        return;
    }
    private static byte[] a(long p2)
    {
        v0 = java.nio.ByteBuffer.allocate(2);
        v0.putShort(((short) ((int) p2)));
        v0.order(java.nio.ByteOrder.BIG_ENDIAN);
        v0.position(0);
        return v0.array();
    }
    public final String toString()
    {
        return com.crashlytics.android.e.b;
    }
    static f()
    {
        com.crashlytics.android.f.a = new com.crashlytics.android.g();
        return;
    }
    public f(java.io.File p4, String p5)
    {
        this(new java.io.File(p4, new StringBuilder().append(p5).append(".cls_temp").toString()));
        this.d = 0;
        this.b = new StringBuilder().append(p4).append(java.io.File.separator).append(p5).toString();
        this.c = new java.io.File(new StringBuilder().append(this.b).append(".cls_temp").toString());
        return;
    }
    public final void a()
    {
        if(!this.d) {
            this.d = 1;
            super.flush();
            super.close();
        }
        return;
    }
    public final synchronized void close()
    {
        synchronized(this) {
            if(!this.d) {
                this.d = 1;
                super.flush();
                super.close();
                v1 = new java.io.File(new StringBuilder().append(this.b).append(".cls").toString());
                if(this.c.renameTo(v1) == 0) {
                    v0 = "";
                    if(v1.exists() == 0) {
                        if(this.c.exists() == 0) {
                            v0 = " (source does not exist)";
                        }
                    } else {
                        v0 = " (target already exists)";
                    }
                    throw new java.io.IOException(new StringBuilder("Could not rename temp file: ").append(this.c).append(" -> ").append(v1).append(v0).toString());
                } else {
                    this.c = 0;
                }
            }
        }
        return;
    }
     g()
    {
        return;
    }
    public final boolean accept(java.io.File p2, String p3)
    {
        return p3.endsWith(".cls_temp");
    }
    private h(java.io.OutputStream p2, byte[] p3)
    {
        this.d = p2;
        this.a = p3;
        this.c = 0;
        this.b = p3.length;
        return;
    }
    public static int a(int p1)
    {
        return com.crashlytics.android.h.c(com.crashlytics.android.ae.a(p1, 0));
    }
    public static com.crashlytics.android.h a(java.io.OutputStream p2)
    {
        v1 = new byte[4096];
        return new com.crashlytics.android.h(p2, v1);
    }
    private void a()
    {
        if (this.d != 0) {
            this.d.write(this.a, 0, this.c);
            this.c = 0;
            return;
        } else {
            throw new com.crashlytics.android.i();
        }
    }
    private void a(long p5)
    {
        while ((-128.0 & p5) != 0.0) {
            this.d(((((int) p5) & 127) | 128));
            p5 = (p5 >> 7);
        }
        this.d(((int) p5));
        return;
    }
    public static int b(int p1, float p2)
    {
        return (com.crashlytics.android.h.a(1) + 4);
    }
    public static int b(int p6, long p7)
    {
        v1 = com.crashlytics.android.h.a(p6);
        if((-128.0 & p7) != 0.0) {
            if((-16384.0 & p7) != 0.0) {
                if((-2097152.0 & p7) != 0.0) {
                    if((-268435456.0 & p7) != 0.0) {
                        if((nan & p7) != 0.0) {
                            if((nan & p7) != 0.0) {
                                if((nan & p7) != 0.0) {
                                    if((-5.48612406879e+303 & p7) != 0.0) {
                                        if((-0.0 & p7) != 0.0) {
                                            v0 = 10;
                                        } else {
                                            v0 = 9;
                                        }
                                    } else {
                                        v0 = 8;
                                    }
                                } else {
                                    v0 = 7;
                                }
                            } else {
                                v0 = 6;
                            }
                        } else {
                            v0 = 5;
                        }
                    } else {
                        v0 = 4;
                    }
                } else {
                    v0 = 3;
                }
            } else {
                v0 = 2;
            }
        } else {
            v0 = 1;
        }
        return (v0 + v1);
    }
    public static int b(int p3, com.crashlytics.android.d p4)
    {
        return com.crashlytics.android.h.a(p3);
    }
    public static int b(int p1, boolean p2)
    {
        return (com.crashlytics.android.h.a(p1) + 1);
    }
    public static int c(int p1)
    {
        if((p1 & -128) != 0) {
            if((p1 & -16384) != 0) {
                if((nan & p1) != 0) {
                    if((-1.58456325029e+29 & p1) != 0) {
                        v0 = 5;
                    } else {
                        v0 = 4;
                    }
                } else {
                    v0 = 3;
                }
            } else {
                v0 = 2;
            }
        } else {
            v0 = 1;
        }
        return v0;
    }
    public static int d(int p2, int p3)
    {
        return com.crashlytics.android.h.a(p2);
    }
    private void d(int p5)
    {
        v0 = ((byte) p5);
        if(this.c == this.b) {
            this.a();
        }
        v2 = this.c;
        this.c = (v2 + 1);
        this.a[v2] = v0;
        return;
    }
    private static int e(int p2)
    {
        return ((p2 << 1) ^ (p2 >> 31));
    }
    public static int e(int p2, int p3)
    {
        v1 = com.crashlytics.android.h.a(p2);
        if(p3 < 0) {
            v0 = 10;
        } else {
            v0 = com.crashlytics.android.h.c(p3);
        }
        return (v0 + v1);
    }
    public static int f(int p2, int p3)
    {
        return com.crashlytics.android.h.a(2);
    }
    public final void a(int p3, float p4)
    {
        this.g(1, 5);
        v0 = Float.floatToRawIntBits(p4);
        this.d((v0 & 255));
        this.d(((v0 >> 8) & 255));
        this.d(((v0 >> 16) & 255));
        this.d((v0 >> 24));
        return;
    }
    public final void a(int p2, int p3)
    {
        this.g(p2, 0);
        this.b(p3);
        return;
    }
    public final void a(int p2, long p3)
    {
        this.g(p2, 0);
        this.a(p3);
        return;
    }
    public final void a(int p9, com.crashlytics.android.d p10)
    {
        this.g(p9, 2);
        this.b(p10.a());
        v0 = p10.a();
        if((this.b - this.c) < v0) {
            v1 = (this.b - this.c);
            p10.a(this.a, 0, this.c, v1);
            v2 = (v1 + 0);
            v0 = (v0 - v1);
            this.c = this.b;
            this.a();
            if(v0 > this.b) {
                v1 = p10.b();
                if(((long) v2) != v1.skip(((long) v2))) {
                    throw new IllegalStateException("Skip failed.");
                }
                while (v0 > 0) {
                    v2 = Math.min(v0, this.b);
                    v3 = v1.read(this.a, 0, v2);
                    if(v3 == v2) {
                        this.d.write(this.a, 0, v3);
                        v0 = (v0 - v3);
                    } else {
                        throw new IllegalStateException("Read failed.");
                    }
                }
            } else {
                p10.a(this.a, v2, 0, v0);
                this.c = v0;
            }
        } else {
            p10.a(this.a, 0, this.c, v0);
            this.c = (v0 + this.c);
        }
        return;
    }
    public final void a(int p3, String p4)
    {
        this.g(1, 2);
        v0 = p4.getBytes("UTF-8");
        this.b(v0.length);
        this.a(v0);
        return;
    }
    public final void a(int p2, boolean p3)
    {
        v0 = 0;
        this.g(p2, 0);
        if(p3) {
            v0 = 1;
        }
        this.d(v0);
        return;
    }
    public final void a(byte[] p6)
    {
        v0 = p6.length;
        if((this.b - this.c) < v0) {
            v1 = (this.b - this.c);
            System.arraycopy(p6, 0, this.a, this.c, v1);
            v2 = (v1 + 0);
            v0 = (v0 - v1);
            this.c = this.b;
            this.a();
            if(v0 > this.b) {
                this.d.write(p6, v2, v0);
            } else {
                System.arraycopy(p6, v2, this.a, 0, v0);
                this.c = v0;
            }
        } else {
            System.arraycopy(p6, 0, this.a, this.c, v0);
            this.c = (v0 + this.c);
        }
        return;
    }
    public final void b(int p2)
    {
        while ((p2 & -128) != 0) {
            this.d(((p2 & 127) | 128));
            p2 = (p2 >> 7);
        }
        this.d(p2);
        return;
    }
    public final void b(int p3, int p4)
    {
        this.g(p3, 0);
        if(p4 < 0) {
            this.a(((long) p4));
        } else {
            this.b(p4);
        }
        return;
    }
    public final void c(int p3, int p4)
    {
        this.g(2, 0);
        this.b(com.crashlytics.android.h.e(p4));
        return;
    }
    public final void flush()
    {
        if(this.d != 0) {
            this.a();
        }
        return;
    }
    public final void g(int p2, int p3)
    {
        this.b(com.crashlytics.android.ae.a(p2, p3));
        return;
    }
     i()
    {
        this("CodedOutputStream was writing to a flat byte array and ran out of space.");
        return;
    }
     C(com.crashlytics.android.internal.B p1, com.crashlytics.android.internal.t p2)
    {
        this.b = p1;
        this.a = p2;
        return;
    }
    public final void run()
    {
        com.crashlytics.android.internal.B.a(this.b, this.a);
        return;
    }
     G(com.crashlytics.android.internal.F p1)
    {
        this.a = p1;
        return;
    }
    public final void onActivityCreated(android.app.Activity p2, android.os.Bundle p3)
    {
        this.a.a(p2);
        return;
    }
    public final void onActivityDestroyed(android.app.Activity p2)
    {
        this.a.b(p2);
        return;
    }
    public final void onActivityPaused(android.app.Activity p2)
    {
        this.a.c(p2);
        return;
    }
    public final void onActivityResumed(android.app.Activity p2)
    {
        this.a.d(p2);
        return;
    }
    public final void onActivitySaveInstanceState(android.app.Activity p2, android.os.Bundle p3)
    {
        this.a.e(p2);
        return;
    }
    public final void onActivityStarted(android.app.Activity p2)
    {
        this.a.f(p2);
        return;
    }
    public final void onActivityStopped(android.app.Activity p2)
    {
        this.a.g(p2);
        return;
    }
     K(com.crashlytics.android.internal.X p2, com.crashlytics.android.internal.ah p3, com.crashlytics.android.internal.aj p4)
    {
        this(p2, p3, p4, 100);
        return;
    }
    private K(com.crashlytics.android.internal.X p2, com.crashlytics.android.internal.ah p3, com.crashlytics.android.internal.aj p4, int p5)
    {
        this.f = new java.util.concurrent.CopyOnWriteArrayList();
        this.a = p2;
        this.d = p4;
        this.b = p3;
        this.b.a();
        this.e = 100;
        return;
    }
    private void a(String p6)
    {
        v1 = this.f.iterator();
        while (v1.hasNext() != 0) {
            v1.next().c();
        }
        return;
    }
    private static long b(String p5)
    {
        v0 = 0.0;
        v2 = p5.split("_");
        if(v2.length == 3) {
            v0 = Long.valueOf(v2[2]).longValue();
        }
        return v0;
    }
    private int e()
    {
        if(this.c != 0) {
            v0 = this.c.c;
        } else {
            v0 = 8000;
        }
        return v0;
    }
    final void a(com.crashlytics.android.internal.V p8)
    {
        v0 = this.a.a(p8);
        v1 = v0.length;
        this.e();
        if(this.d.a(v1, this) == 0) {
            v4 = new Object[3];
            v4[0] = Integer.valueOf(this.d.a());
            v4[1] = Integer.valueOf(v1);
            this.e();
            v4[2] = Integer.valueOf(this);
            com.crashlytics.android.internal.ab.a(4, String.format(java.util.Locale.US, "session analytics events file is %d bytes, new event is %d bytes, this is over flush limit of %d, rolling it over", v4));
            this.a();
        }
        this.d.a(v0);
        return;
    }
    final void a(com.crashlytics.android.internal.aK p1)
    {
        this.c = p1;
        return;
    }
    final void a(com.crashlytics.android.internal.ak p2)
    {
        if(p2 != 0) {
            this.f.add(p2);
        }
        return;
    }
    final void a(java.util.List p2)
    {
        this.d.a(p2);
        return;
    }
    final boolean a()
    {
        v1 = 1;
        v0 = 0;
        if(this.d.b() != 0) {
            v1 = 0;
        } else {
            v0 = java.util.UUID.randomUUID();
            v3 = new StringBuilder();
            v3.append("sa");
            v3.append("_");
            v3.append(v0.toString());
            v3.append("_");
            v3.append(this.b.a());
            v3.append(".tap");
            v0 = v3.toString();
            this.d.a(v0);
            v6 = new Object[1];
            v6[0] = v0;
            com.crashlytics.android.internal.ab.a(4, String.format(java.util.Locale.US, "generated new to-send analytics file %s", v6));
            this.b.a();
        }
        this.a(v0);
        return v1;
    }
    final java.util.List b()
    {
        return this.d.a(1);
    }
    final void c()
    {
        this.d.a(this.d.c());
        this.d.d();
        return;
    }
    final void d()
    {
        v0 = this.d.c();
        if(v0.size() > this.e) {
            v1 = (v0.size() - this.e);
            v4 = new Object[3];
            v4[0] = Integer.valueOf(v0.size());
            v4[1] = Integer.valueOf(this.e);
            v4[2] = Integer.valueOf(v1);
            com.crashlytics.android.internal.ab.c(String.format(java.util.Locale.US, "Found %d files in session analytics roll over directory, this is greater than %d, deleting %d oldest files", v4));
            v2 = new java.util.TreeSet(new com.crashlytics.android.internal.L(this));
            v3 = v0.iterator();
            while (v3.hasNext() != 0) {
                v0 = v3.next();
                v2.add(new com.crashlytics.android.internal.M(this, v0, com.crashlytics.android.internal.K.b(v0.getName())));
            }
            v3 = new java.util.ArrayList();
            v2 = v2.iterator();
            while (v2.hasNext() != 0) {
                v3.add(v2.next().a);
                if(v3.size() == v1) {
                    break;
                }
            }
            this.d.a(v3);
        }
        return;
    }
     L(com.crashlytics.android.internal.K p1)
    {
        return;
    }
    public final synthetic bridge int compare(Object p5, Object p6)
    {
        return ((int) (p5.b - p6.b));
    }
    public M(com.crashlytics.android.internal.K p1, java.io.File p2, long p3)
    {
        this.a = p2;
        this.b = p3;
        return;
    }
     P(com.crashlytics.android.internal.O p1, String p2)
    {
        this.b = p1;
        this.a = p2;
        return;
    }
    public final void run()
    {
        this.b.a.a(com.crashlytics.android.internal.V.a(com.crashlytics.android.internal.O.a(this.b), com.crashlytics.android.internal.O.b(this.b), com.crashlytics.android.internal.O.c(this.b), com.crashlytics.android.internal.O.d(this.b), com.crashlytics.android.internal.O.e(this.b), com.crashlytics.android.internal.O.f(this.b), com.crashlytics.android.internal.O.g(this.b), com.crashlytics.android.internal.O.h(this.b), com.crashlytics.android.internal.W.i, java.util.Collections.singletonMap("sessionId", this.a)));
        return;
    }
     Q(com.crashlytics.android.internal.O p1, com.crashlytics.android.internal.V p2, boolean p3)
    {
        this.c = p1;
        this.a = p2;
        this.b = p3;
        return;
    }
    public final void run()
    {
        this.c.a.a(this.a);
        if(this.b) {
            this.c.a.d();
        }
        return;
    }
     R(com.crashlytics.android.internal.O p1, com.crashlytics.android.internal.aK p2, String p3)
    {
        this.c = p1;
        this.a = p2;
        this.b = p3;
        return;
    }
    public final void run()
    {
        this.c.a.a(this.a, this.b);
        return;
    }
     S(com.crashlytics.android.internal.O p1)
    {
        this.a = p1;
        return;
    }
    public final void run()
    {
        this.a.a.a();
        return;
    }
     T(com.crashlytics.android.internal.O p1)
    {
        this.a = p1;
        return;
    }
    public final void run()
    {
        this.a.a = new com.crashlytics.android.internal.I();
        this.a.a.b();
        return;
    }
    private V(String p1, String p2, String p3, String p4, String p5, String p6, String p7, String p8, long p9, com.crashlytics.android.internal.W p11, java.util.Map p12)
    {
        this.a = p1;
        this.b = p2;
        this.c = p3;
        this.d = p4;
        this.e = p5;
        this.f = p6;
        this.g = p7;
        this.h = p8;
        this.i = p9;
        this.j = p11;
        this.k = p12;
        return;
    }
    public static final com.crashlytics.android.internal.V a(String p13, String p14, String p15, String p16, String p17, String p18, String p19, String p20, com.crashlytics.android.internal.W p21, java.util.Map p22)
    {
        return new com.crashlytics.android.internal.V(p13, p14, p15, p16, p17, p18, p19, p20, System.currentTimeMillis(), v10, p21, p22);
    }
    public final String toString()
    {
        if(this.l == 0) {
            v0 = new StringBuilder();
            v0.append("[");
            v0.append(this.getClass().getSimpleName());
            v0.append(": appBundleId=");
            v0.append(this.a);
            v0.append(", executionId=");
            v0.append(this.b);
            v0.append(", installationId=");
            v0.append(this.c);
            v0.append(", androidId=");
            v0.append(this.d);
            v0.append(", osVersion=");
            v0.append(this.e);
            v0.append(", deviceModel=");
            v0.append(this.f);
            v0.append(", appVersionCode=");
            v0.append(this.g);
            v0.append(", appVersionName=");
            v0.append(this.h);
            v0.append(", timestamp=");
            v0.append(this.i);
            v0.append(", type=");
            v0.append(this.j);
            v0.append(", details=");
            v0.append(this.k.toString());
            v0.append("]");
            this.l = v0.toString();
        }
        return this.l;
    }
    static W()
    {
        com.crashlytics.android.internal.W.a = new com.crashlytics.android.internal.W("CREATE", 0);
        com.crashlytics.android.internal.W.b = new com.crashlytics.android.internal.W("START", 1);
        com.crashlytics.android.internal.W.c = new com.crashlytics.android.internal.W("RESUME", 2);
        com.crashlytics.android.internal.W.d = new com.crashlytics.android.internal.W("SAVE_INSTANCE_STATE", 3);
        com.crashlytics.android.internal.W.e = new com.crashlytics.android.internal.W("PAUSE", 4);
        com.crashlytics.android.internal.W.f = new com.crashlytics.android.internal.W("STOP", 5);
        com.crashlytics.android.internal.W.g = new com.crashlytics.android.internal.W("DESTROY", 6);
        com.crashlytics.android.internal.W.h = new com.crashlytics.android.internal.W("ERROR", 7);
        com.crashlytics.android.internal.W.i = new com.crashlytics.android.internal.W("CRASH", 8);
        com.crashlytics.android.internal.W.j = new com.crashlytics.android.internal.W("INSTALL", 9);
        v0 = new com.crashlytics.android.internal.W[10];
        v0[0] = com.crashlytics.android.internal.W.a;
        v0[1] = com.crashlytics.android.internal.W.b;
        v0[2] = com.crashlytics.android.internal.W.c;
        v0[3] = com.crashlytics.android.internal.W.d;
        v0[4] = com.crashlytics.android.internal.W.e;
        v0[5] = com.crashlytics.android.internal.W.f;
        v0[6] = com.crashlytics.android.internal.W.g;
        v0[7] = com.crashlytics.android.internal.W.h;
        v0[8] = com.crashlytics.android.internal.W.i;
        v0[9] = com.crashlytics.android.internal.W.j;
        com.crashlytics.android.internal.W.k = v0;
        return;
    }
    private W(String p1, int p2)
    {
        this(p1, p2);
        return;
    }
    public static com.crashlytics.android.internal.W valueOf(String p1)
    {
        return Enum.valueOf(com.crashlytics.android.internal.W, p1);
    }
    public static com.crashlytics.android.internal.W[] values()
    {
        return com.crashlytics.android.internal.W.k.clone();
    }
     X()
    {
        return;
    }
    private static org.json.JSONObject a(java.util.Map p4)
    {
        v2 = new org.json.JSONObject();
        v3 = p4.entrySet().iterator();
        while (v3.hasNext() != 0) {
            v0 = v3.next();
            v2.put(v0.getKey(), v0.getValue());
        }
        return v2;
    }
    public final byte[] a(com.crashlytics.android.internal.V p5)
    {
        v0 = new org.json.JSONObject();
        v0.put("appBundleId", p5.a);
        v0.put("executionId", p5.b);
        v0.put("installationId", p5.c);
        v0.put("androidId", p5.d);
        v0.put("osVersion", p5.e);
        v0.put("deviceModel", p5.f);
        v0.put("appVersionCode", p5.g);
        v0.put("appVersionName", p5.h);
        v0.put("timestamp", p5.i);
        v0.put("type", p5.j.toString());
        v0.put("details", com.crashlytics.android.internal.X.a(p5.k));
        return v0.toString().getBytes("UTF-8");
    }
    public Y(com.crashlytics.android.internal.K p1, com.crashlytics.android.internal.U p2)
    {
        this.a = p1;
        this.b = p2;
        return;
    }
    public final void run()
    {
        com.crashlytics.android.internal.ab.c("Performing time based analytics file roll over.");
        if(this.a.a() == 0) {
            this.b.c();
        }
        return;
    }
    static Z()
    {
        com.crashlytics.android.internal.Z.a = new StringBuilder("Crashlytics Android SDK/").append(com.crashlytics.android.internal.v.a().getVersion()).toString();
        com.crashlytics.android.internal.Z.b = java.util.regex.Pattern.compile("http(s?)://[^\/]+", 2);
        return;
    }
    public Z(String p3, String p4, com.crashlytics.android.internal.av p5, com.crashlytics.android.internal.ax p6)
    {
        if (p4 != 0) {
            if (p5 != 0) {
                this.f = p3;
                if (com.crashlytics.android.internal.ab.e(this.f) != 0) {
                    this.c = com.crashlytics.android.internal.Z.b.matcher(p4).replaceFirst(this.f);
                    this.d = p5;
                    this.e = p6;
                    return;
                } else {
                }
            } else {
                throw new IllegalArgumentException("requestFactory must not be null.");
            }
        } else {
            throw new IllegalArgumentException("url must not be null.");
        }
    }
    protected final com.crashlytics.android.internal.ay a(java.util.Map p4)
    {
        return this.d.a(this.e, this.c, p4).a(0).a(10000).a("User-Agent", com.crashlytics.android.internal.Z.a).a("X-CRASHLYTICS-DEVELOPER-TOKEN", "bca6990fc3c15a8105800c0673517a4b579634a1");
    }
    protected final String a()
    {
        return this.c;
    }
    protected final com.crashlytics.android.internal.ay b()
    {
        return this.a(java.util.Collections.emptyMap());
    }
    static a()
    {
        com.crashlytics.android.internal.a.a = new java.util.HashMap();
        com.crashlytics.android.internal.a.b = new java.util.HashMap();
        return;
    }
    static java.util.Map a(Object p5)
    {
        v0 = p5.getClass();
        v2 = new java.util.HashMap();
        if(com.crashlytics.android.internal.a.a.containsKey(v0) == 0) {
            com.crashlytics.android.internal.a.a(v0);
        }
        v0 = com.crashlytics.android.internal.a.a.get(v0);
        if(v0.isEmpty() == 0) {
            v3 = v0.entrySet().iterator();
            while (v3.hasNext() != 0) {
                v0 = v3.next();
                v2.put(v0.getKey(), new com.crashlytics.android.internal.h(p5, v0.getValue()));
            }
        }
        return v2;
    }
    private static void a(Class p10)
    {
        v3 = new java.util.HashMap();
        v4 = new java.util.HashMap();
        v5 = p10.getDeclaredMethods();
        v6 = v5.length;
        v1 = 0;
        while (v1 < v6) {
            v7 = v5[v1];
            if(v7.isAnnotationPresent(com.crashlytics.android.internal.l) == 0) {
                if(v7.isAnnotationPresent(com.crashlytics.android.internal.k) != 0) {
                    v0 = v7.getParameterTypes();
                    if(v0.length == 0) {
                        if(v7.getReturnType() != Void) {
                            v0 = v7.getReturnType();
                            if(v0.isInterface() == 0) {
                                if(v0.equals(Void.TYPE) == 0) {
                                    if((v7.getModifiers() & 1) != 0) {
                                        if(v4.containsKey(v0) == 0) {
                                            v4.put(v0, v7);
                                        } else {
                                            throw new IllegalArgumentException(new StringBuilder("Producer for type ").append(v0).append(" has already been registered.").toString());
                                        }
                                    } else {
                                        throw new IllegalArgumentException(new StringBuilder("Method ").append(v7).append(" has @Produce annotation on ").append(v0).append(" but is not 'public'.").toString());
                                    }
                                } else {
                                    throw new IllegalArgumentException(new StringBuilder("Method ").append(v7).append(" has @Produce annotation but has no return type.").toString());
                                }
                            } else {
                                throw new IllegalArgumentException(new StringBuilder("Method ").append(v7).append(" has @Produce annotation on ").append(v0).append(" which is an interface.  Producers must return a concrete class type.").toString());
                            }
                        } else {
                            throw new IllegalArgumentException(new StringBuilder("Method ").append(v7).append(" has a return type of void.  Must declare a non-void type.").toString());
                        }
                    } else {
                        throw new IllegalArgumentException(new StringBuilder("Method ").append(v7).append("has @Produce annotation but requires ").append(v0.length).append(" arguments.  Methods must require zero arguments.").toString());
                    }
                }
            } else {
                v0 = v7.getParameterTypes();
                if(v0.length == 1) {
                    v8 = v0[0];
                    if(v8.isInterface() == 0) {
                        if((v7.getModifiers() & 1) != 0) {
                            v0 = v3.get(v8);
                            if(v0 == 0) {
                                v0 = new java.util.HashSet();
                                v3.put(v8, v0);
                            }
                            v0.add(v7);
                        } else {
                            throw new IllegalArgumentException(new StringBuilder("Method ").append(v7).append(" has @Subscribe annotation on ").append(v8).append(" but is not 'public'.").toString());
                        }
                    } else {
                        throw new IllegalArgumentException(new StringBuilder("Method ").append(v7).append(" has @Subscribe annotation on ").append(v8).append(" which is an interface.  Subscription must be on a concrete class type.").toString());
                    }
                } else {
                    throw new IllegalArgumentException(new StringBuilder("Method ").append(v7).append(" has @Subscribe annotation but requires ").append(v0.length).append(" arguments.  Methods must require a single argument.").toString());
                }
            }
            v1 = (v1 + 1);
        }
        com.crashlytics.android.internal.a.a.put(p10, v4);
        com.crashlytics.android.internal.a.b.put(p10, v3);
        return;
    }
    static java.util.Map b(Object p7)
    {
        v0 = p7.getClass();
        v2 = new java.util.HashMap();
        if(com.crashlytics.android.internal.a.b.containsKey(v0) == 0) {
            com.crashlytics.android.internal.a.a(v0);
        }
        v0 = com.crashlytics.android.internal.a.b.get(v0);
        if(v0.isEmpty() == 0) {
            v3 = v0.entrySet().iterator();
            while (v3.hasNext() != 0) {
                v0 = v3.next();
                v4 = new java.util.HashSet();
                v5 = v0.getValue().iterator();
                while (v5.hasNext() != 0) {
                    v4.add(new com.crashlytics.android.internal.g(p7, v5.next()));
                }
                v2.put(v0.getKey(), v4);
            }
        }
        return v2;
    }
    static aB()
    {
        com.crashlytics.android.internal.aB.a = new com.crashlytics.android.internal.aC();
        return;
    }
    protected aD(java.io.IOException p1)
    {
        this(p1);
        return;
    }
    public final synthetic bridge Throwable getCause()
    {
        return super.getCause();
    }
    protected aE()
    {
        return;
    }
    public Object call()
    {
        v0 = this.a();
        this.b();
        return v0;
    }
    public aF(java.io.OutputStream p2, String p3, int p4)
    {
        this(p2, p4);
        this.a = java.nio.charset.Charset.forName(com.crashlytics.android.internal.ay.b(p3)).newEncoder();
        return;
    }
    public final com.crashlytics.android.internal.aF a(String p4)
    {
        v0 = this.a.encode(java.nio.CharBuffer.wrap(p4));
        super.write(v0.array(), 0, v0.limit());
        return this;
    }
    public aH(com.crashlytics.android.internal.aI p6, com.crashlytics.android.internal.aG p7)
    {
        this.d = new java.util.LinkedList();
        this.e = java.util.Collections.synchronizedSet(new java.util.HashSet());
        this.a = com.crashlytics.android.internal.aH.a(p6);
        this.b = p6;
        this.c = -1.0;
        v1 = p7.c();
        v2 = v1.length;
        v0 = 0;
        while (v0 < v2) {
            this.d.add(com.crashlytics.android.internal.aH.a(v1[v0]));
            v0 = (v0 + 1);
        }
        return;
    }
    private boolean a(java.security.cert.X509Certificate p4)
    {
        v1 = java.security.MessageDigest.getInstance("SHA1").digest(p4.getPublicKey().getEncoded());
        v2 = this.d.iterator();
        while (v2.hasNext() != 0) {
            if(java.util.Arrays.equals(v2.next(), v1) != 0) {
                v0 = 1;
            }
            return v0;
        }
        v0 = 0;
    }
    private static byte[] a(String p7)
    {
        v1 = p7.length();
        v2 = new byte[(v1 / 2)];
        v0 = 0;
        while (v0 < v1) {
            v2[(v0 / 2)] = (Character.digit(p7.charAt(v0), 16) << 4);
            v0 = (v0 + 2);
        }
        return v2;
    }
    private static javax.net.ssl.TrustManager[] a(com.crashlytics.android.internal.aI p2)
    {
        v0 = javax.net.ssl.TrustManagerFactory.getInstance("X509");
        v0.init(p2.a);
        return v0.getTrustManagers();
    }
    public final void checkClientTrusted(java.security.cert.X509Certificate[] p3, String p4)
    {
        throw new java.security.cert.CertificateException("Client certificates not supported!");
    }
    public final void checkServerTrusted(java.security.cert.X509Certificate[] p9, String p10)
    {
        if(this.e.contains(p9[0]) == 0) {
            v3 = this.a;
            v4 = v3.length;
            v2 = 0;
            while (v2 < v4) {
                v3[v2].checkServerTrusted(p9, p10);
                v2 = (v2 + 1);
            }
            if((this.c == -1.0) || ((System.currentTimeMillis() - this.c) <= 7.68370892412e-314)) {
                v2 = com.crashlytics.android.internal.av.a(p9, this.b);
                v3 = v2.length;
                v0 = 0;
                while (v0 < v3) {
                    this.a(v2[v0]);
                    if(this == 0) {
                        v0 = (v0 + 1);
                    }
                }
                throw new java.security.cert.CertificateException("No valid pins found in chain!");
            } else {
                com.crashlytics.android.internal.v.a().b().c("Crashlytics", new StringBuilder("Certificate pins are stale, (").append((System.currentTimeMillis() - this.c)).append(" millis vs 15552000000").append(" millis) falling back to system trust.").toString());
            }
            this.e.add(p9[0]);
        }
        return;
    }
    public final java.security.cert.X509Certificate[] getAcceptedIssuers()
    {
        return 0;
    }
    public aI(java.io.InputStream p3, String p4)
    {
        v0 = com.crashlytics.android.internal.aI.a(p3, p4);
        this.b = com.crashlytics.android.internal.aI.a(v0);
        this.a = v0;
        return;
    }
    private static java.security.KeyStore a(java.io.InputStream p3, String p4)
    {
        v0 = java.security.KeyStore.getInstance("BKS");
        v1 = new java.io.BufferedInputStream(p3);
        v0.load(v1, p4.toCharArray());
        v1.close();
        return v0;
    }
    private static java.util.HashMap a(java.security.KeyStore p4)
    {
        v1 = new java.util.HashMap();
        v2 = p4.aliases();
        while (v2.hasMoreElements() != 0) {
            v0 = p4.getCertificate(v2.nextElement());
            if(v0 != 0) {
                v1.put(v0.getSubjectX500Principal(), v0);
            }
        }
        return v1;
    }
    public final boolean a(java.security.cert.X509Certificate p3)
    {
        v0 = this.b.get(p3.getSubjectX500Principal());
        if((v0 == 0) || (v0.getPublicKey().equals(p3.getPublicKey()) == 0)) {
            v0 = 0;
        } else {
            v0 = 1;
        }
        return v0;
    }
    public final java.security.cert.X509Certificate b(java.security.cert.X509Certificate p5)
    {
        v0 = this.b.get(p5.getIssuerX500Principal());
        if(v0 != 0) {
            if(v0.getSubjectX500Principal().equals(p5.getSubjectX500Principal()) == 0) {
                p5.verify(v0.getPublicKey());
            } else {
                v0 = 0;
            }
        } else {
            v0 = 0;
        }
        return v0;
    }
    public aJ(com.crashlytics.android.internal.u p3)
    {
        if (p3.getContext() != 0) {
            this.b = p3.getContext();
            this.a = p3.getClass().getName();
            return;
        } else {
            throw new IllegalStateException("Cannot get directory before context has been set. Call Sdk.start() first");
        }
    }
    public android.content.SharedPreferences a()
    {
        return this.b.getSharedPreferences(this.a, 0);
    }
    public boolean a(android.content.SharedPreferences$Editor p3)
    {
        if(android.os.Build$VERSION.SDK_INT < 9) {
            v0 = p3.commit();
        } else {
            p3.apply();
            v0 = 1;
        }
        return v0;
    }
    public android.content.SharedPreferences$Editor b()
    {
        return this.a().edit();
    }
    public aK(String p1, int p2, int p3, int p4, int p5)
    {
        this.a = p1;
        this.b = p2;
        this.c = p3;
        return;
    }
    public aL(String p1, int p2, int p3)
    {
        return;
    }
    public aM(String p1, String p2, String p3, String p4, boolean p5, com.crashlytics.android.internal.aL p6)
    {
        this.a = p2;
        this.b = p3;
        this.c = p4;
        this.d = p5;
        return;
    }
     aN()
    {
        return;
    }
    public org.json.JSONObject a()
    {
        v1 = 0;
        com.crashlytics.android.internal.v.a().b().a("Crashlytics", "Reading cached settings...");
        v0 = new java.io.File(com.crashlytics.android.internal.v.a().h(), "com.crashlytics.settings.json");
        if(v0.exists() == 0) {
            com.crashlytics.android.internal.v.a().b().a("Crashlytics", "No cached settings found.");
            v0 = 0;
        } else {
            v2 = new java.io.FileInputStream(v0);
            v0 = new org.json.JSONObject(com.crashlytics.android.internal.ab.a(v2));
            v1 = v2;
        }
        com.crashlytics.android.internal.ab.a(v1, "Error while closing settings cache file.");
        return v0;
    }
    public void a(long p6, org.json.JSONObject p8)
    {
        com.crashlytics.android.internal.v.a().b().a("Crashlytics", "Writing settings to cache file...");
        if(p8 != 0) {
            p8.put("expires_at", p6);
            v1 = new java.io.FileWriter(new java.io.File(com.crashlytics.android.internal.v.a().h(), "com.crashlytics.settings.json"));
            v1.write(p8.toString());
            v1.flush();
            com.crashlytics.android.internal.ab.a(v1, "Failed to close settings writer.");
        }
        return;
    }
    public aP(boolean p1, boolean p2, boolean p3, boolean p4)
    {
        this.a = p1;
        this.b = p3;
        this.c = p4;
        return;
    }
    public aQ(String p1, String p2, String p3, boolean p4, String p5, boolean p6, String p7)
    {
        this.a = p1;
        this.b = p2;
        this.c = p3;
        this.d = p4;
        this.e = p5;
        this.f = p6;
        this.g = p7;
        return;
    }
    public aR(int p1, int p2, int p3, int p4, int p5, boolean p6)
    {
        this.a = p3;
        return;
    }
    private aS()
    {
        this.a = new java.util.concurrent.atomic.AtomicReference();
        this.c = 0;
        return;
    }
    synthetic aS(byte p1)
    {
        return;
    }
    public static com.crashlytics.android.internal.aS a()
    {
        return com.crashlytics.android.internal.aT.a();
    }
    private static String a(String p10, String p11, android.content.Context p12)
    {
        v2 = new char[3];
        v2 = {115, 0, 108, 0, 99};
        v2 = com.crashlytics.android.internal.ab.b(1, com.crashlytics.android.internal.ab.a(new StringBuilder().append(p10).append(p11.replaceAll("\.", new StringBuffer(new String(v2)).reverse().toString())).toString()));
        v3 = new org.json.JSONObject();
        v4 = new com.crashlytics.android.internal.ao(p12);
        v3.put("APPLICATION_INSTALLATION_UUID".toLowerCase(java.util.Locale.US), v4.b());
        v5 = v4.f().entrySet().iterator();
        while (v5.hasNext() != 0) {
            v0 = v5.next();
            v3.put(v0.getKey().name().toLowerCase(java.util.Locale.US), v0.getValue());
        }
        v3.put("os_version", v4.c());
        v3.put("model", v4.d());
        v0 = "";
        if(v3.length() > 0) {
            v0 = com.crashlytics.android.internal.ab.a(v2.doFinal(v3.toString().getBytes()));
        }
        return v0;
    }
    public final synchronized com.crashlytics.android.internal.aS a(android.content.Context p14, com.crashlytics.android.internal.av p15, String p16, String p17, String p18)
    {
        synchronized(this) {
            if(!this.c) {
                if(this.b == 0) {
                    v2 = com.crashlytics.android.internal.r.a(p14, 0);
                    v1 = p14.getPackageName();
                    v5 = p14.getPackageManager().getInstallerPackageName(v1);
                    v9 = new com.crashlytics.android.internal.ah();
                    v10 = new com.crashlytics.android.internal.aY();
                    v11 = new com.crashlytics.android.internal.aN();
                    v8 = com.crashlytics.android.internal.ab.g(p14);
                    v6 = new Object[1];
                    v6[0] = v1;
                    v12 = new com.crashlytics.android.internal.aO(p18, String.format(java.util.Locale.US, "https://settings.crashlytics.com/spi/v2/platforms/android/apps/%s/settings", v6), p15);
                    v3 = com.crashlytics.android.internal.aS.a(v2, v1, p14);
                    v1 = new String[1];
                    v1[0] = com.crashlytics.android.internal.ab.i(p14);
                    this.b = new com.crashlytics.android.internal.aW(v1, v9, v10, v11, v12);
                }
                this.c = 1;
                v1 = this;
            } else {
                v1 = this;
            }
        }
        return v1;
    }
    public final Object a(com.crashlytics.android.internal.aU p2, Object p3)
    {
        v0 = this.a.get();
        if(v0 != 0) {
            p3 = p2.a(v0);
        }
        return p3;
    }
    public final com.crashlytics.android.internal.aX b()
    {
        return this.a.get();
    }
    public final synchronized boolean c()
    {
        synchronized(this) {
            v0 = this.b.a();
            this.a.set(v0);
            if(v0 == 0) {
                v0 = 0;
            } else {
                v0 = 1;
            }
        }
        return v0;
    }
    public final synchronized boolean d()
    {
        synchronized(this) {
            v0 = this.b.a(com.crashlytics.android.internal.aV.b);
            this.a.set(v0);
            if(v0 == 0) {
                com.crashlytics.android.internal.v.a().b().a("Crashlytics", "Failed to force reload of settings from Crashlytics.", 0);
            }
            if(v0 == 0) {
                v0 = 0;
            } else {
                v0 = 1;
            }
        }
        return v0;
    }
    static aT()
    {
        com.crashlytics.android.internal.aT.a = new com.crashlytics.android.internal.aS(0);
        return;
    }
    static synthetic com.crashlytics.android.internal.aS a()
    {
        return com.crashlytics.android.internal.aT.a;
    }
    static aV()
    {
        com.crashlytics.android.internal.aV.a = new com.crashlytics.android.internal.aV("USE_CACHE", 0);
        com.crashlytics.android.internal.aV.b = new com.crashlytics.android.internal.aV("SKIP_CACHE_LOOKUP", 1);
        com.crashlytics.android.internal.aV.c = new com.crashlytics.android.internal.aV("IGNORE_CACHE_EXPIRATION", 2);
        v0 = new com.crashlytics.android.internal.aV[3];
        v0[0] = com.crashlytics.android.internal.aV.a;
        v0[1] = com.crashlytics.android.internal.aV.b;
        v0[2] = com.crashlytics.android.internal.aV.c;
        com.crashlytics.android.internal.aV.d = v0;
        return;
    }
    private aV(String p1, int p2)
    {
        this(p1, p2);
        return;
    }
    public static com.crashlytics.android.internal.aV valueOf(String p1)
    {
        return Enum.valueOf(com.crashlytics.android.internal.aV, p1);
    }
    public static com.crashlytics.android.internal.aV[] values()
    {
        return com.crashlytics.android.internal.aV.d.clone();
    }
    public aW(com.crashlytics.android.internal.aZ p1, com.crashlytics.android.internal.ah p2, com.crashlytics.android.internal.aY p3, com.crashlytics.android.internal.aN p4, com.crashlytics.android.internal.ba p5)
    {
        this.a = p1;
        this.c = p2;
        this.b = p3;
        this.d = p4;
        this.e = p5;
        return;
    }
    private void a(org.json.JSONObject p5, String p6)
    {
        if(com.crashlytics.android.internal.ab.e(com.crashlytics.android.internal.v.a().getContext()) == 0) {
            p5 = this.b.a(p5);
        }
        com.crashlytics.android.internal.v.a().b().a("Crashlytics", new StringBuilder().append(p6).append(p5.toString()).toString());
        return;
    }
    private com.crashlytics.android.internal.aX b(com.crashlytics.android.internal.aV p8)
    {
        if(com.crashlytics.android.internal.aV.b.equals(p8) != 0) {
            v0 = 0;
        } else {
            v2 = this.d.a();
            if(v2 == 0) {
                com.crashlytics.android.internal.v.a().b().a("Crashlytics", "No cached settings data found.");
            } else {
                v0 = this.b.a(this.c, v2);
                if(v0 == 0) {
                    com.crashlytics.android.internal.v.a().b().a("Crashlytics", "Failed to transform cached settings data.", 0);
                    v0 = 0;
                } else {
                    this.a(v2, "Loaded cached settings: ");
                    v2 = this.c.a();
                    if(com.crashlytics.android.internal.aV.c.equals(p8) == 0) {
                        if(v0.f >= v2) {
                            v2 = 0;
                        } else {
                            v2 = 1;
                        }
                        if(v2 != 0) {
                            com.crashlytics.android.internal.v.a().b().a("Crashlytics", "Cached settings have expired.");
                        }
                    }
                    com.crashlytics.android.internal.v.a().b().a("Crashlytics", "Returning cached settings.");
                }
            }
        }
        return v0;
    }
    public com.crashlytics.android.internal.aX a()
    {
        return this.a(com.crashlytics.android.internal.aV.a);
    }
    public com.crashlytics.android.internal.aX a(com.crashlytics.android.internal.aV p7)
    {
        v1 = 0;
        if(com.crashlytics.android.internal.v.a().f() == 0) {
            this.b(p7);
            v1 = this;
        }
        if(v1 == 0) {
            v0 = this.e.a(this.a);
            if(v0 != 0) {
                v1 = this.b.a(this.c, v0);
                this.d.a(v1.f, v0);
                this.a(v0, "Loaded settings: ");
            }
        }
        v0 = v1;
        if(v0 == 0) {
            this.b(com.crashlytics.android.internal.aV.c);
            v0 = this;
        }
        return v0;
    }
    public aX(long p1, com.crashlytics.android.internal.aM p3, com.crashlytics.android.internal.aR p4, com.crashlytics.android.internal.aQ p5, com.crashlytics.android.internal.aP p6, com.crashlytics.android.internal.aK p7, int p8, int p9)
    {
        this.f = p1;
        this.a = p3;
        this.b = p4;
        this.c = p5;
        this.d = p6;
        this.e = p7;
        return;
    }
     aY()
    {
        return;
    }
    public com.crashlytics.android.internal.aX a(com.crashlytics.android.internal.ah p16, org.json.JSONObject p17)
    {
        v13 = p17.optInt("settings_version", 0);
        v14 = p17.optInt("cache_duration", 3600);
        v1 = p17.getJSONObject("app");
        v2 = v1.getString("identifier");
        v3 = v1.getString("status");
        v4 = v1.getString("url");
        v5 = v1.getString("reports_url");
        v6 = v1.optBoolean("update_required", 0);
        v7 = 0;
        if((v1.has("icon") != 0) && (v1.getJSONObject("icon").has("hash") != 0)) {
            v1 = v1.getJSONObject("icon");
            v7 = new com.crashlytics.android.internal.aL(v1.getString("hash"), v1.getInt("width"), v1.getInt("height"));
        }
        v1 = new com.crashlytics.android.internal.aM(v2, v3, v4, v5, v6, v7);
        v2 = p17.getJSONObject("session");
        v2 = new com.crashlytics.android.internal.aR(v2.optInt("log_buffer_size", 8.96831017168e-41), v2.optInt("max_chained_exception_depth", 8), v2.optInt("max_custom_exception_events", 64), v2.optInt("max_custom_key_value_pairs", 64), v2.optInt("identifier_mask", 255), v2.optBoolean("send_session_without_crash", 0));
        v3 = p17.getJSONObject("prompt");
        v3 = new com.crashlytics.android.internal.aQ(v3.optString("title", "Send Crash Report?"), v3.optString("message", "Looks like we crashed! Please help us fix the problem by sending a crash report."), v3.optString("send_button_title", "Send"), v3.optBoolean("show_cancel_button", 1), v3.optString("cancel_button_title", "Don't Send"), v3.optBoolean("show_always_send_button", 1), v3.optString("always_send_button_title", "Always Send"));
        v4 = p17.getJSONObject("features");
        v11 = new com.crashlytics.android.internal.aP(v4.optBoolean("prompt_enabled", 0), v4.optBoolean("collect_logged_exceptions", 1), v4.optBoolean("collect_reports", 1), v4.optBoolean("collect_analytics", 0));
        v4 = p17.getJSONObject("analytics");
        v4 = new com.crashlytics.android.internal.aK(v4.optString("url", "https://e.crashlytics.com/spi/v2/events"), v4.optInt("flush_interval_secs", 600), v4.optInt("max_byte_size_per_file", 8000), v4.optInt("max_file_count_per_send", 1), v4.optInt("max_pending_send_file_count", 100));
        v5 = ((long) v14);
        v7 = p17.has("expires_at");
        if(v7 == 0) {
            v7 = p16.a();
            v6 = (v7 + (v5 * 1000.0));
        } else {
            v6 = p17.getLong("expires_at");
        }
        return new com.crashlytics.android.internal.aX(v6, v7, v1, v2, v3, v11, v4, v13, v14);
    }
    public org.json.JSONObject a(org.json.JSONObject p4)
    {
        v0 = new org.json.JSONObject(p4.toString());
        v0.getJSONObject("features").remove("collect_analytics");
        v0.remove("analytics");
        return v0;
    }
    public aZ(String p1, String p2, String p3, String p4, String p5, int p6, String p7)
    {
        this.a = p1;
        this.b = p2;
        this.c = p3;
        this.d = p4;
        this.e = p5;
        this.f = p6;
        this.g = p7;
        return;
    }
    public aa()
    {
        return;
    }
    public final void run()
    {
        android.os.Process.setThreadPriority(10);
        this.a();
        return;
    }
    static ab()
    {
        com.crashlytics.android.internal.ab.b = 0;
        v0 = new char[16];
        v0 = {48, 0, 49, 0, 50, 0, 51, 0, 52, 0, 53, 0, 54, 0, 55, 0, 56, 0, 57, 0, 97, 0, 98, 0, 99, 0, 100, 0, 101, 0, 102};
        com.crashlytics.android.internal.ab.c = v0;
        com.crashlytics.android.internal.ab.d = -1.0;
        com.crashlytics.android.internal.ab.e = 0;
        com.crashlytics.android.internal.ab.a = new com.crashlytics.android.internal.ac();
        return;
    }
    public static int a(android.content.Context p3, String p4, String p5)
    {
        v1 = p3.getResources();
        v0 = p3.getApplicationContext().getApplicationInfo().icon;
        if(v0 <= 0) {
            v0 = p3.getPackageName();
        } else {
            v0 = p3.getResources().getResourcePackageName(v0);
        }
        return v1.getIdentifier(p4, p5, v0);
    }
    public static int a(boolean p5)
    {
        v0 = com.crashlytics.android.internal.ab.b(com.crashlytics.android.internal.v.a().getContext());
        if(p5) {
            if((!p5) || (((double) v0) < 99.0)) {
                if((!p5) || (((double) v0) >= 99.0)) {
                    v0 = 0;
                } else {
                    v0 = 2;
                }
            } else {
                v0 = 3;
            }
        } else {
            v0 = 1;
        }
        return v0;
    }
    public static long a(android.content.Context p2)
    {
        v1 = new android.app.ActivityManager$MemoryInfo();
        p2.getSystemService("activity").getMemoryInfo(v1);
        return v1.availMem;
    }
    private static long a(String p4, String p5, int p6)
    {
        return (Long.parseLong(p4.split(p5)[0].trim()) * ((long) p6));
    }
    public static android.app.ActivityManager$RunningAppProcessInfo a(String p4, android.content.Context p5)
    {
        v0 = p5.getSystemService("activity").getRunningAppProcesses();
        if(v0 == 0) {
            v0 = 0;
        } else {
            v2 = v0.iterator();
            while (v2.hasNext() != 0) {
                v0 = v2.next();
                if(v0.processName.equals(p4) != 0) {
                }
            }
        }
        return v0;
    }
    public static android.content.SharedPreferences a()
    {
        return com.crashlytics.android.internal.v.a().getContext().getSharedPreferences("com.crashlytics.prefs", 0);
    }
    public static String a(int p5)
    {
        if (p5 >= 0) {
            v2 = new Object[1];
            v2[0] = Integer.valueOf(p5);
            return String.format(java.util.Locale.US, "%1$10s", v2).replace(32, 48);
        } else {
            throw new IllegalArgumentException("value must be zero or greater");
        }
    }
    public static String a(android.content.Context p1, String p2)
    {
        v0 = com.crashlytics.android.internal.ab.a(p1, p2, "string");
        if(v0 <= 0) {
            v0 = "";
        } else {
            v0 = p1.getString(v0);
        }
        return v0;
    }
    private static String a(java.io.File p7, String p8)
    {
        v0 = 0;
        if(p7.exists() != 0) {
            v2 = new java.io.BufferedReader(new java.io.FileReader(p7), 1024);
            do {
                v1 = v2.readLine();
                if(v1 != 0) {
                    v1 = java.util.regex.Pattern.compile("\s*:\s*").split(v1, 2);
                }
                com.crashlytics.android.internal.ab.a(v2, "Failed to close system file reader.");
            } while((v1.length <= 1) || (v1[0].equals(p8) == 0));
            v0 = v1[1];
        }
        return v0;
    }
    public static String a(java.io.InputStream p2)
    {
        v0 = new java.util.Scanner(p2).useDelimiter("\A");
        if(v0.hasNext() == 0) {
            v0 = "";
        } else {
            v0 = v0.next();
        }
        return v0;
    }
    public static String a(String p2)
    {
        return com.crashlytics.android.internal.ab.a(p2.getBytes(), "SHA-1");
    }
    public static String a(byte[] p6)
    {
        v1 = new char[(p6.length << 1)];
        v0 = 0;
        while (v0 < p6.length) {
            v2 = (p6[v0] & 255);
            v1[(v0 << 1)] = com.crashlytics.android.internal.ab.c[(v2 >> 4)];
            v1[((v0 << 1) + 1)] = com.crashlytics.android.internal.ab.c[(v2 & 15)];
            v0 = (v0 + 1);
        }
        return new String(v1);
    }
    private static String a(byte[] p5, String p6)
    {
        v0 = java.security.MessageDigest.getInstance(p6);
        v0.update(p5);
        return com.crashlytics.android.internal.ab.a(v0.digest());
    }
    public static varargs String a(String[] p7)
    {
        if((p7 != 0) && (p7.length != 0)) {
            v2 = new java.util.ArrayList();
            v3 = p7.length;
            v0 = 0;
            while (v0 < v3) {
                v4 = p7[v0];
                if(v4 != 0) {
                    v2.add(v4.replace("-", "").toLowerCase(java.util.Locale.US));
                }
                v0 = (v0 + 1);
            }
            java.util.Collections.sort(v2);
            v3 = new StringBuilder();
            v2 = v2.iterator();
            while (v2.hasNext() != 0) {
                v3.append(v2.next());
            }
            v0 = v3.toString();
            if(v0.length() <= 0) {
                v0 = 0;
            } else {
                v0 = com.crashlytics.android.internal.ab.a(v0);
            }
        } else {
            v0 = 0;
        }
        return v0;
    }
    public static void a(int p3, String p4)
    {
        if(com.crashlytics.android.internal.ab.e(com.crashlytics.android.internal.v.a().getContext()) != 0) {
            com.crashlytics.android.internal.v.a().b().a(4, "Crashlytics", p4);
        }
        return;
    }
    public static void a(java.io.Closeable p3, String p4)
    {
        if(p3 != 0) {
            p3.close();
        }
        return;
    }
    public static void a(java.io.Flushable p3, String p4)
    {
        if(p3 != 0) {
            p3.flush();
        }
        return;
    }
    public static void a(java.io.InputStream p2, java.io.OutputStream p3, byte[] p4)
    {
        while(true) {
            v0 = p2.read(p4);
            if(v0 != 15) {
                p3.write(p4, 0, v0);
            }
        }
        return;
    }
    public static boolean a(android.content.Context p2, String p3, boolean p4)
    {
        if(p2 != 0) {
            v0 = p2.getResources();
            if(v0 != 0) {
                v1 = com.crashlytics.android.internal.ab.a(p2, p3, "bool");
                if(v1 <= 0) {
                    v0 = com.crashlytics.android.internal.ab.a(p2, p3, "string");
                    if(v0 > 0) {
                        p4 = Boolean.parseBoolean(p2.getString(v0));
                    }
                } else {
                    p4 = v0.getBoolean(v1);
                }
            }
        }
        return p4;
    }
    public static float b(android.content.Context p4)
    {
        v0 = p4.registerReceiver(0, new android.content.IntentFilter("android.intent.action.BATTERY_CHANGED"));
        return (v0.getIntExtra("level", 15) / ((float) v0.getIntExtra("scale", 15)));
    }
    public static int b()
    {
        return com.crashlytics.android.internal.ad.a().ordinal();
    }
    public static long b(String p7)
    {
        v0 = new android.os.StatFs(p7);
        v1 = ((long) v0.getBlockSize());
        return ((((long) v0.getBlockCount()) * v1) - (v1 * ((long) v0.getAvailableBlocks())));
    }
    public static String b(int p1)
    {
        switch(p1) {
            case 2:
                v0 = "V";
                break;
            case 3:
                v0 = "D";
                break;
            case 4:
                v0 = "I";
                break;
            case 5:
                v0 = "W";
                break;
            case 6:
                v0 = "E";
                break;
            case 7:
                v0 = "A";
                break;
            default:
                v0 = "?";
        }
        return v0;
    }
    private static String b(java.io.InputStream p4)
    {
        v0 = java.security.MessageDigest.getInstance("SHA-1");
        v1 = new byte[1024];
        while(true) {
            v2 = p4.read(v1);
            if(v2 != 15) {
                v0.update(v1, 0, v2);
            }
        }
        return com.crashlytics.android.internal.ab.a(v0.digest());
    }
    public static javax.crypto.Cipher b(int p5, String p6)
    {
        if (p6.length() >= 32) {
            v0 = new javax.crypto.spec.SecretKeySpec(p6.getBytes(), 0, 32, "AES/ECB/PKCS7Padding");
            v1 = javax.crypto.Cipher.getInstance("AES/ECB/PKCS7Padding");
            v1.init(1, v0);
            return v1;
        } else {
            throw new java.security.InvalidKeyException("Key must be at least 32 bytes.");
        }
    }
    public static synchronized long c()
    {
        synchronized(com.crashlytics.android.internal.ab) {
            if(com.crashlytics.android.internal.ab.d == -1.0) {
                v0 = com.crashlytics.android.internal.ab.a(new java.io.File("/proc/meminfo"), "MemTotal");
                if(android.text.TextUtils.isEmpty(v0) != 0) {
                    v0 = 0.0;
                } else {
                    v4 = v0.toUpperCase(java.util.Locale.US);
                    if(v4.endsWith("KB") == 0) {
                        if(v4.endsWith("MB") == 0) {
                            if(v4.endsWith("GB") == 0) {
                                com.crashlytics.android.internal.v.a().b().a("Crashlytics", new StringBuilder("Unexpected meminfo format while computing RAM: ").append(v4).toString());
                                v0 = 0.0;
                            } else {
                                v0 = com.crashlytics.android.internal.ab.a(v4, "GB", 2.0);
                            }
                        } else {
                            v0 = com.crashlytics.android.internal.ab.a(v4, "MB", 1.46936793853e-39);
                        }
                    } else {
                        v0 = com.crashlytics.android.internal.ab.a(v4, "KB", 1024);
                    }
                }
                com.crashlytics.android.internal.ab.d = v0;
            }
        }
        return com.crashlytics.android.internal.ab.d;
    }
    public static void c(String p2)
    {
        if(com.crashlytics.android.internal.ab.e(com.crashlytics.android.internal.v.a().getContext()) != 0) {
            com.crashlytics.android.internal.v.a().b().a("Crashlytics", p2);
        }
        return;
    }
    public static boolean c(android.content.Context p3)
    {
        if(com.crashlytics.android.internal.ab.d() == 0) {
            if(p3.getSystemService("sensor").getDefaultSensor(8) == 0) {
                v0 = 0;
            } else {
                v0 = 1;
            }
        } else {
            v0 = 0;
        }
        return v0;
    }
    public static void d(String p2)
    {
        if(com.crashlytics.android.internal.ab.e(com.crashlytics.android.internal.v.a().getContext()) != 0) {
            com.crashlytics.android.internal.v.a().b().d("Crashlytics", p2);
        }
        return;
    }
    public static boolean d()
    {
        v0 = android.provider.Settings$Secure.getString(com.crashlytics.android.internal.v.a().getContext().getContentResolver(), "android_id");
        if(("sdk".equals(android.os.Build.PRODUCT) == 0) && (("google_sdk".equals(android.os.Build.PRODUCT) == 0) && (v0 != 0))) {
            v0 = 0;
        } else {
            v0 = 1;
        }
        return v0;
    }
    public static boolean d(android.content.Context p2)
    {
        v0 = 0;
        if(com.crashlytics.android.internal.ab.e == 0) {
            if(com.crashlytics.android.internal.ab.a(p2, "com.crashlytics.SilenceCrashlyticsLogCat", 0) == 0) {
                v0 = 1;
            }
            com.crashlytics.android.internal.ab.e = Boolean.valueOf(v0);
        }
        return com.crashlytics.android.internal.ab.e.booleanValue();
    }
    public static boolean e()
    {
        v0 = 1;
        v1 = com.crashlytics.android.internal.ab.d();
        v2 = android.os.Build.TAGS;
        if(((v1 != 0) || ((v2 == 0) || (v2.contains("test-keys") == 0))) && (new java.io.File("/system/app/Superuser.apk").exists() == 0)) {
            v2 = new java.io.File("/system/xbin/su");
            if((v1 != 0) || (v2.exists() == 0)) {
                v0 = 0;
            }
        }
        return v0;
    }
    public static boolean e(android.content.Context p2)
    {
        if(com.crashlytics.android.internal.ab.b == 0) {
            com.crashlytics.android.internal.ab.b = Boolean.valueOf(com.crashlytics.android.internal.ab.a(p2, "com.crashlytics.Trace", 0));
        }
        return com.crashlytics.android.internal.ab.b.booleanValue();
    }
    public static boolean e(String p1)
    {
        if((p1 != 0) && (p1.length() != 0)) {
            v0 = 0;
        } else {
            v0 = 1;
        }
        return v0;
    }
    public static int f()
    {
        v2 = 0;
        if(com.crashlytics.android.internal.ab.d() == 0) {
            v0 = 0;
        } else {
            v0 = 1;
        }
        if(com.crashlytics.android.internal.ab.e() != 0) {
            v0 = (v0 | 2);
        }
        if((android.os.Debug.isDebuggerConnected() != 0) || (android.os.Debug.waitingForDebugger() != 0)) {
            v2 = 1;
        }
        if(v2 != 0) {
            v0 = (v0 | 4);
        }
        return v0;
    }
    public static boolean f(android.content.Context p1)
    {
        if((p1.getApplicationInfo().flags & 2) == 0) {
            v0 = 0;
        } else {
            v0 = 1;
        }
        return v0;
    }
    public static String g(android.content.Context p6)
    {
        v0 = 0;
        v2 = p6.getResources().openRawResource(com.crashlytics.android.internal.ab.h(p6));
        v1 = com.crashlytics.android.internal.ab.b(v2);
        if(com.crashlytics.android.internal.ab.e(v1) == 0) {
            v0 = v1;
        }
        com.crashlytics.android.internal.ab.a(v2, "Failed to close icon input stream.");
        return v0;
    }
    public static int h(android.content.Context p1)
    {
        return p1.getApplicationContext().getApplicationInfo().icon;
    }
    public static String i(android.content.Context p5)
    {
        v0 = 0;
        v1 = com.crashlytics.android.internal.ab.a(p5, "com.crashlytics.android.build_id", "string");
        if(v1 != 0) {
            v0 = p5.getResources().getString(v1);
            com.crashlytics.android.internal.v.a().b().a("Crashlytics", new StringBuilder("Build ID is: ").append(v0).toString());
        }
        return v0;
    }
     ac()
    {
        return;
    }
    public final synthetic int compare(Object p5, Object p6)
    {
        return p5.lastModified();
    }
    static ad()
    {
        com.crashlytics.android.internal.ad.a = new com.crashlytics.android.internal.ad("X86_32", 0);
        com.crashlytics.android.internal.ad.b = new com.crashlytics.android.internal.ad("X86_64", 1);
        com.crashlytics.android.internal.ad.c = new com.crashlytics.android.internal.ad("ARM_UNKNOWN", 2);
        com.crashlytics.android.internal.ad.d = new com.crashlytics.android.internal.ad("PPC", 3);
        com.crashlytics.android.internal.ad.e = new com.crashlytics.android.internal.ad("PPC64", 4);
        com.crashlytics.android.internal.ad.f = new com.crashlytics.android.internal.ad("ARMV6", 5);
        com.crashlytics.android.internal.ad.g = new com.crashlytics.android.internal.ad("ARMV7", 6);
        com.crashlytics.android.internal.ad.h = new com.crashlytics.android.internal.ad("UNKNOWN", 7);
        com.crashlytics.android.internal.ad.i = new com.crashlytics.android.internal.ad("ARMV7S", 8);
        com.crashlytics.android.internal.ad.j = new com.crashlytics.android.internal.ad("ARM64", 9);
        v0 = new com.crashlytics.android.internal.ad[10];
        v0[0] = com.crashlytics.android.internal.ad.a;
        v0[1] = com.crashlytics.android.internal.ad.b;
        v0[2] = com.crashlytics.android.internal.ad.c;
        v0[3] = com.crashlytics.android.internal.ad.d;
        v0[4] = com.crashlytics.android.internal.ad.e;
        v0[5] = com.crashlytics.android.internal.ad.f;
        v0[6] = com.crashlytics.android.internal.ad.g;
        v0[7] = com.crashlytics.android.internal.ad.h;
        v0[8] = com.crashlytics.android.internal.ad.i;
        v0[9] = com.crashlytics.android.internal.ad.j;
        com.crashlytics.android.internal.ad.l = v0;
        v0 = new java.util.HashMap(4);
        com.crashlytics.android.internal.ad.k = v0;
        v0.put("armeabi-v7a", com.crashlytics.android.internal.ad.g);
        com.crashlytics.android.internal.ad.k.put("armeabi", com.crashlytics.android.internal.ad.f);
        com.crashlytics.android.internal.ad.k.put("x86", com.crashlytics.android.internal.ad.a);
        return;
    }
    private ad(String p1, int p2)
    {
        this(p1, p2);
        return;
    }
    static com.crashlytics.android.internal.ad a()
    {
        v0 = android.os.Build.CPU_ABI;
        if(android.text.TextUtils.isEmpty(v0) == 0) {
            v0 = com.crashlytics.android.internal.ad.k.get(v0.toLowerCase(java.util.Locale.US));
            if(v0 == 0) {
                v0 = com.crashlytics.android.internal.ad.h;
            }
        } else {
            com.crashlytics.android.internal.v.a().b().a("Crashlytics", "Architecture#getValue()::Build.CPU_ABI returned null or empty");
            v0 = com.crashlytics.android.internal.ad.h;
        }
        return v0;
    }
    public static com.crashlytics.android.internal.ad valueOf(String p1)
    {
        return Enum.valueOf(com.crashlytics.android.internal.ad, p1);
    }
    public static com.crashlytics.android.internal.ad[] values()
    {
        return com.crashlytics.android.internal.ad.l.clone();
    }
    public ah()
    {
        return;
    }
    public static java.util.concurrent.ExecutorService a(String p1)
    {
        v0 = java.util.concurrent.Executors.newSingleThreadExecutor(com.crashlytics.android.internal.ah.c(p1));
        com.crashlytics.android.internal.ah.a(p1, v0);
        return v0;
    }
    private static void a(String p8, java.util.concurrent.ExecutorService p9)
    {
        Runtime.getRuntime().addShutdownHook(new Thread(new com.crashlytics.android.internal.an(p8, p9, 2.0, v4, java.util.concurrent.TimeUnit.SECONDS), new StringBuilder("Crashlytics Shutdown Hook for ").append(p8).toString()));
        return;
    }
    public static java.util.concurrent.ScheduledExecutorService b(String p1)
    {
        v0 = java.util.concurrent.Executors.newSingleThreadScheduledExecutor(com.crashlytics.android.internal.ah.c(p1));
        com.crashlytics.android.internal.ah.a(p1, v0);
        return v0;
    }
    public static java.util.concurrent.ThreadFactory c(String p3)
    {
        return new com.crashlytics.android.internal.al(p3, new java.util.concurrent.atomic.AtomicLong(1.0));
    }
    public long a()
    {
        return System.currentTimeMillis();
    }
    static ai()
    {
        com.crashlytics.android.internal.ai.a = new com.crashlytics.android.internal.ai("DEVELOPER", 0, 1);
        com.crashlytics.android.internal.ai.b = new com.crashlytics.android.internal.ai("USER_SIDELOAD", 1, 2);
        com.crashlytics.android.internal.ai.c = new com.crashlytics.android.internal.ai("TEST_DISTRIBUTION", 2, 3);
        com.crashlytics.android.internal.ai.d = new com.crashlytics.android.internal.ai("APP_STORE", 3, 4);
        v0 = new com.crashlytics.android.internal.ai[4];
        v0[0] = com.crashlytics.android.internal.ai.a;
        v0[1] = com.crashlytics.android.internal.ai.b;
        v0[2] = com.crashlytics.android.internal.ai.c;
        v0[3] = com.crashlytics.android.internal.ai.d;
        com.crashlytics.android.internal.ai.f = v0;
        return;
    }
    private ai(String p1, int p2, int p3)
    {
        this(p1, p2);
        this.e = p3;
        return;
    }
    public static com.crashlytics.android.internal.ai a(String p1)
    {
        if(p1 == 0) {
            v0 = 0;
        } else {
            v0 = 1;
        }
        if(v0 == 0) {
            v0 = com.crashlytics.android.internal.ai.a;
        } else {
            v0 = com.crashlytics.android.internal.ai.d;
        }
        return v0;
    }
    public static com.crashlytics.android.internal.ai valueOf(String p1)
    {
        return Enum.valueOf(com.crashlytics.android.internal.ai, p1);
    }
    public static com.crashlytics.android.internal.ai[] values()
    {
        return com.crashlytics.android.internal.ai.f.clone();
    }
    public final int a()
    {
        return this.e;
    }
    public final String toString()
    {
        return Integer.toString(this.e);
    }
    public aj(java.io.File p4, String p5, String p6)
    {
        this.a = p4;
        this.b = p6;
        this.d = new java.io.File(p4, p5);
        this.c = new com.crashlytics.android.internal.aq(this.d);
        this.e = new java.io.File(this.a, this.b);
        if(this.e.exists() == 0) {
            this.e.mkdirs();
        }
        return;
    }
    public int a()
    {
        return this.c.a();
    }
    public java.util.List a(int p6)
    {
        v1 = new java.util.ArrayList();
        v2 = this.e.listFiles();
        v3 = v2.length;
        v0 = 0;
        while (v0 < v3) {
            v1.add(v2[v0]);
            if(v1.size() > 0) {
                break;
            }
            v0 = (v0 + 1);
        }
        return v1;
    }
    public void a(String p7)
    {
        this.c.close();
        v4 = this.d;
        v0 = new java.io.File(this.e, p7);
        v1 = new java.io.FileInputStream(v4);
        v3 = new java.util.zip.GZIPOutputStream(new java.io.FileOutputStream(v0));
        v0 = new byte[1024];
        com.crashlytics.android.internal.ab.a(v1, v3, v0);
        com.crashlytics.android.internal.ab.a(v1, "Failed to close file input stream");
        com.crashlytics.android.internal.ab.a(v3, "Failed to close gzip output stream");
        v4.delete();
        this.c = new com.crashlytics.android.internal.aq(this.d);
        return;
    }
    public void a(java.util.List p7)
    {
        v1 = p7.iterator();
        while (v1.hasNext() != 0) {
            v0 = v1.next();
            v3 = new Object[1];
            v3[0] = v0.getName();
            com.crashlytics.android.internal.ab.c(String.format("deleting sent analytics file %s", v3));
            v0.delete();
        }
        return;
    }
    public void a(byte[] p2)
    {
        this.c.a(p2);
        return;
    }
    public boolean a(int p2, int p3)
    {
        return this.c.a(p2, p3);
    }
    public boolean b()
    {
        return this.c.b();
    }
    public java.util.List c()
    {
        return java.util.Arrays.asList(this.e.listFiles());
    }
    public void d()
    {
        this.c.close();
        this.d.delete();
        return;
    }
     al(String p1, java.util.concurrent.atomic.AtomicLong p2)
    {
        this.a = p1;
        this.b = p2;
        return;
    }
    public final Thread newThread(Runnable p8)
    {
        v0 = java.util.concurrent.Executors.defaultThreadFactory().newThread(new com.crashlytics.android.internal.am(this, p8));
        v3 = new Object[1];
        v3[0] = Long.valueOf(this.b.getAndIncrement());
        v0.setName(String.format(java.util.Locale.US, this.a, v3));
        return v0;
    }
    static ao()
    {
        com.crashlytics.android.internal.ao.a = java.util.regex.Pattern.compile("[^\p{Alnum}]");
        com.crashlytics.android.internal.ao.b = java.util.regex.Pattern.quote("/");
        return;
    }
    public ao(android.content.Context p6)
    {
        this.c = new java.util.concurrent.locks.ReentrantLock();
        if (p6 != 0) {
            this.f = p6;
            this.d = com.crashlytics.android.internal.ab.a(p6, "com.crashlytics.CollectDeviceIdentifiers", 1);
            if(this.d) {
                com.crashlytics.android.internal.v.a().b().a("Crashlytics", new StringBuilder("Device ID collection disabled for ").append(p6.getPackageName()).toString());
            }
            this.e = com.crashlytics.android.internal.ab.a(p6, "com.crashlytics.CollectUserIdentifiers", 1);
            if(this.e) {
                com.crashlytics.android.internal.v.a().b().a("Crashlytics", new StringBuilder("User information collection disabled for ").append(p6.getPackageName()).toString());
            }
            return;
        } else {
            throw new IllegalArgumentException("appContext must not be null");
        }
    }
    private String a(android.content.SharedPreferences p4)
    {
        this.c.lock();
        v0 = p4.getString("crashlytics.installation.id", 0);
        if(v0 == 0) {
            v0 = com.crashlytics.android.internal.ao.b(java.util.UUID.randomUUID().toString());
            p4.edit().putString("crashlytics.installation.id", v0).commit();
        }
        this.c.unlock();
        return v0;
    }
    private static void a(java.util.Map p0, com.crashlytics.android.internal.ap p1, String p2)
    {
        if(p2 != 0) {
            p0.put(p1, p2);
        }
        return;
    }
    private boolean a(String p2)
    {
        if(this.f.checkCallingPermission(p2) != 0) {
            v0 = 0;
        } else {
            v0 = 1;
        }
        return v0;
    }
    private static String b(String p2)
    {
        if(p2 != 0) {
            v0 = com.crashlytics.android.internal.ao.a.matcher(p2).replaceAll("").toLowerCase(java.util.Locale.US);
        } else {
            v0 = 0;
        }
        return v0;
    }
    private static String c(String p2)
    {
        return p2.replaceAll(com.crashlytics.android.internal.ao.b, "");
    }
    private String i()
    {
        if((!this.d) || (android.os.Build$VERSION.SDK_INT < 9)) {
            v0 = 0;
        } else {
            v0 = com.crashlytics.android.internal.ao.b(android.os.Build.getField("SERIAL").get(0));
        }
        return v0;
    }
    public final boolean a()
    {
        return this.e;
    }
    public final String b()
    {
        v0 = com.crashlytics.android.internal.v.a().i();
        if(v0 == 0) {
            v1 = com.crashlytics.android.internal.ab.a();
            v0 = v1.getString("crashlytics.installation.id", 0);
            if(v0 == 0) {
                this.a(v1);
                v0 = this;
            }
        }
        return v0;
    }
    public final String c()
    {
        v2 = new Object[2];
        v2[0] = com.crashlytics.android.internal.ao.c(android.os.Build$VERSION.RELEASE);
        v2[1] = com.crashlytics.android.internal.ao.c(android.os.Build$VERSION.INCREMENTAL);
        return String.format(java.util.Locale.US, "%s/%s", v2);
    }
    public final String d()
    {
        v2 = new Object[2];
        v2[0] = com.crashlytics.android.internal.ao.c(android.os.Build.MANUFACTURER);
        v2[1] = com.crashlytics.android.internal.ao.c(android.os.Build.MODEL);
        return String.format(java.util.Locale.US, "%s/%s", v2);
    }
    public final String e()
    {
        v0 = "";
        if(this.d) {
            v0 = this.g();
            if(v0 == 0) {
                v1 = com.crashlytics.android.internal.ab.a();
                v0 = v1.getString("crashlytics.installation.id", 0);
                if(v0 == 0) {
                    this.a(v1);
                    v0 = this;
                }
            }
        }
        return v0;
    }
    public final java.util.Map f()
    {
        v1 = 0;
        v2 = new java.util.HashMap();
        com.crashlytics.android.internal.ao.a(v2, com.crashlytics.android.internal.ap.c, this.g());
        if(!this.d) {
            v0 = 0;
        } else {
            this.a("android.permission.READ_PHONE_STATE");
            } else {
                v0 = this.f.getSystemService("phone");
                } else {
                    v0 = com.crashlytics.android.internal.ao.b(v0.getDeviceId());
                }
            }
        }
        com.crashlytics.android.internal.ao.a(v2, com.crashlytics.android.internal.ap.d, v0);
        this.i();
        com.crashlytics.android.internal.ao.a(v2, com.crashlytics.android.internal.ap.e, this);
        if(this.d) {
            this.a("android.permission.ACCESS_WIFI_STATE");
            if(this != 0) {
                v0 = this.f.getSystemService("wifi");
                if(v0 != 0) {
                    v0 = v0.getConnectionInfo();
                    if(v0 != 0) {
                        v1 = com.crashlytics.android.internal.ao.b(v0.getMacAddress());
                    }
                }
            }
        }
        com.crashlytics.android.internal.ao.a(v2, com.crashlytics.android.internal.ap.a, v1);
        com.crashlytics.android.internal.ao.a(v2, com.crashlytics.android.internal.ap.b, this.h());
        return java.util.Collections.unmodifiableMap(v2);
    }
    public final String g()
    {
        v0 = 0;
        if(this.d) {
            v1 = android.provider.Settings$Secure.getString(this.f.getContentResolver(), "android_id");
            if("9774d56d682e549c".equals(v1) == 0) {
                v0 = com.crashlytics.android.internal.ao.b(v1);
            }
        }
        return v0;
    }
    public final String h()
    {
        if(this.d) {
            this.a("android.permission.BLUETOOTH");
            if(this != 0) {
                v0 = android.bluetooth.BluetoothAdapter.getDefaultAdapter();
                if(v0 != 0) {
                    com.crashlytics.android.internal.ao.b(v0.getAddress());
                }
            }
        }
        return 0;
    }
    static ap()
    {
        com.crashlytics.android.internal.ap.a = new com.crashlytics.android.internal.ap("WIFI_MAC_ADDRESS", 0, 1);
        com.crashlytics.android.internal.ap.b = new com.crashlytics.android.internal.ap("BLUETOOTH_MAC_ADDRESS", 1, 2);
        com.crashlytics.android.internal.ap.c = new com.crashlytics.android.internal.ap("ANDROID_ID", 2, 100);
        com.crashlytics.android.internal.ap.d = new com.crashlytics.android.internal.ap("ANDROID_DEVICE_ID", 3, 101);
        com.crashlytics.android.internal.ap.e = new com.crashlytics.android.internal.ap("ANDROID_SERIAL", 4, 102);
        v0 = new com.crashlytics.android.internal.ap[5];
        v0[0] = com.crashlytics.android.internal.ap.a;
        v0[1] = com.crashlytics.android.internal.ap.b;
        v0[2] = com.crashlytics.android.internal.ap.c;
        v0[3] = com.crashlytics.android.internal.ap.d;
        v0[4] = com.crashlytics.android.internal.ap.e;
        com.crashlytics.android.internal.ap.g = v0;
        return;
    }
    private ap(String p1, int p2, int p3)
    {
        this(p1, p2);
        this.f = p3;
        return;
    }
    public static com.crashlytics.android.internal.ap valueOf(String p1)
    {
        return Enum.valueOf(com.crashlytics.android.internal.ap, p1);
    }
    public static com.crashlytics.android.internal.ap[] values()
    {
        return com.crashlytics.android.internal.ap.g.clone();
    }
    static aq()
    {
        com.crashlytics.android.internal.aq.a = java.util.logging.Logger.getLogger(com.crashlytics.android.internal.aq.getName());
        return;
    }
    public aq(java.io.File p8)
    {
        v0 = new byte[16];
        this.g = v0;
        if(p8.exists() == 0) {
            v0 = new java.io.File(new StringBuilder().append(p8.getPath()).append(".tmp").toString());
            v1 = com.crashlytics.android.internal.aq.a(v0);
            v1.setLength(4096.0);
            v1.seek(0.0);
            v2 = new byte[16];
            v3 = new int[4];
            v3 = {0, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
            com.crashlytics.android.internal.aq.a(v2, v3);
            v1.write(v2);
            v1.close();
            if(v0.renameTo(p8) == 0) {
                throw new java.io.IOException("Rename failed!");
            }
        }
        this.b = com.crashlytics.android.internal.aq.a(p8);
        this.b.seek(0.0);
        this.b.readFully(this.g);
        this.c = com.crashlytics.android.internal.aq.a(this.g, 0);
        if (((long) this.c) <= this.b.length()) {
            this.d = com.crashlytics.android.internal.aq.a(this.g, 4);
            v0 = com.crashlytics.android.internal.aq.a(this.g, 8);
            v1 = com.crashlytics.android.internal.aq.a(this.g, 12);
            this.a(v0);
            this.e = this;
            this.a(v1);
            this.f = this;
            return;
        } else {
            throw new java.io.IOException(new StringBuilder("File is truncated. Expected length: ").append(this.c).append(", Actual length: ").append(this.b.length()).toString());
        }
    }
    static synthetic int a(com.crashlytics.android.internal.aq p1, int p2)
    {
        return p1.b(p2);
    }
    private static int a(byte[] p2, int p3)
    {
        return (((((p2[p3] & 255) << 24) + ((p2[(p3 + 1)] & 255) << 16)) + ((p2[(p3 + 2)] & 255) << 8)) + (p2[(p3 + 3)] & 255));
    }
    private com.crashlytics.android.internal.as a(int p4)
    {
        if(p4 != 0) {
            this.b.seek(((long) p4));
            v0 = new com.crashlytics.android.internal.as(p4, this.b.readInt());
        } else {
            v0 = com.crashlytics.android.internal.as.a;
        }
        return v0;
    }
    static synthetic java.io.RandomAccessFile a(com.crashlytics.android.internal.aq p1)
    {
        return p1.b;
    }
    private static java.io.RandomAccessFile a(java.io.File p2)
    {
        return new java.io.RandomAccessFile(p2, "rwd");
    }
    static synthetic Object a(Object p1, String p2)
    {
        return com.crashlytics.android.internal.aq.b(p1, p2);
    }
    private void a(int p4, int p5, int p6, int p7)
    {
        v1 = new int[4];
        v1[0] = p4;
        v1[1] = p5;
        v1[2] = p6;
        v1[3] = p7;
        com.crashlytics.android.internal.aq.a(this.g, v1);
        this.b.seek(0.0);
        this.b.write(this.g);
        return;
    }
    private void a(int p6, byte[] p7, int p8, int p9)
    {
        this.b(p6);
        if((this + p9) > this.c) {
            v1 = (this.c - this);
            this.b.seek(((long) this));
            this.b.write(p7, p8, v1);
            this.b.seek(16.0);
            this.b.write(p7, (p8 + v1), (p9 - v1));
        } else {
            this.b.seek(((long) this));
            this.b.write(p7, p8, p9);
        }
        return;
    }
    static synthetic void a(com.crashlytics.android.internal.aq p0, int p1, byte[] p2, int p3, int p4)
    {
        p0.b(p1, p2, p3, p4);
        return;
    }
    private static void a(byte[] p2, int p3, int p4)
    {
        p2[p3] = (p4 >> 24);
        p2[(p3 + 1)] = ((byte) (p4 >> 16));
        p2[(p3 + 2)] = ((byte) (p4 >> 8));
        p2[(p3 + 3)] = ((byte) p4);
        return;
    }
    private static varargs void a(byte[] p4, int[] p5)
    {
        v0 = 0;
        v2 = p5.length;
        v1 = 0;
        while (v0 < v2) {
            com.crashlytics.android.internal.aq.a(p4, v1, p5[v0]);
            v1 = (v1 + 4);
            v0 = (v0 + 1);
        }
        return;
    }
    private int b(int p3)
    {
        if(p3 >= this.c) {
            p3 = ((p3 + 16) - this.c);
        }
        return p3;
    }
    private static Object b(Object p1, String p2)
    {
        if (p1 != 0) {
            return p1;
        } else {
            throw new NullPointerException(p2);
        }
    }
    private void b(int p6, byte[] p7, int p8, int p9)
    {
        this.b(p6);
        if((this + p9) > this.c) {
            v1 = (this.c - this);
            this.b.seek(((long) this));
            this.b.readFully(p7, p8, v1);
            this.b.seek(16.0);
            this.b.readFully(p7, (p8 + v1), (p9 - v1));
        } else {
            this.b.seek(((long) this));
            this.b.readFully(p7, p8, p9);
        }
        return;
    }
    private synchronized void b(byte[] p7, int p8, int p9)
    {
        synchronized(this) {
            com.crashlytics.android.internal.aq.b(p7, "buffer");
            if (((p9 | 0) >= 0) && (p9 <= p7.length)) {
                this.c(p9);
                v1 = this.b();
                if(v1 == 0) {
                    this.b(((this.f.b + 4) + this.f.c));
                    v0 = this;
                } else {
                    v0 = 16;
                }
                v2 = new com.crashlytics.android.internal.as(v0, p9);
                com.crashlytics.android.internal.aq.a(this.g, 0, p9);
                this.a(v2.b, this.g, 0, 4);
                this.a((v2.b + 4), p7, 0, p9);
                if(v1 == 0) {
                    v0 = this.e.b;
                } else {
                    v0 = v2.b;
                }
                this.a(this.c, (this.d + 1), v0, v2.b);
                this.f = v2;
                this.d = (this.d + 1);
                if(v1 != 0) {
                    this.e = this.f;
                }
            }
            return;
        } else {
            throw new IndexOutOfBoundsException();
        }
    }
    private void c(int p9)
    {
        v2 = (p9 + 4);
        v1 = (this.c - this.a());
        if(v1 < v2) {
            v0 = this.c;
            while(true) {
                v1 = (v1 + v0);
                v6 = (v0 << 1);
                if(v1 >= v2) {
                    break;
                }
                v0 = v6;
            }
            this.d(v6);
            this.b(((this.f.b + 4) + this.f.c));
            if(this < this.e.b) {
                v0 = this.b.getChannel();
                v2 = ((long) this.c);
                v0.position(v2);
                v7 = (this - 4);
                if(v0.transferTo(16.0, v2, ((long) v7), v4, v0) != 0) {
                    throw new AssertionError("Copied insufficient number of bytes!");
                }
            }
            if(this.f.b >= this.e.b) {
                this.a(v6, this.d, this.e.b, this.f.b);
            } else {
                v0 = ((this.c + this.f.b) - 16);
                this.a(v6, this.d, this.e.b, v0);
                this.f = new com.crashlytics.android.internal.as(v0, this.f.c);
            }
            this.c = v6;
        }
        return;
    }
    private synchronized void d()
    {
        synchronized(this) {
            this.a(4096, 0, 0, 0);
            this.d = 0;
            this.e = com.crashlytics.android.internal.as.a;
            this.f = com.crashlytics.android.internal.as.a;
            if(this.c > 4096) {
                this.d(4096);
            }
            this.c = 4096;
        }
        return;
    }
    private void d(int p4)
    {
        this.b.setLength(((long) p4));
        this.b.getChannel().force(1);
        return;
    }
    public final int a()
    {
        if(this.d != 0) {
            if(this.f.b < this.e.b) {
                v0 = ((((this.f.b + 4) + this.f.c) + this.c) - this.e.b);
            } else {
                v0 = ((((this.f.b - this.e.b) + 4) + this.f.c) + 16);
            }
        } else {
            v0 = 16;
        }
        return v0;
    }
    public final synchronized void a(com.crashlytics.android.internal.au p5)
    {
        v0 = 0;
        synchronized(this) {
            v1 = this.e.b;
            while (v0 < this.d) {
                this.a(v1);
                p5.a(new com.crashlytics.android.internal.at(this, this, 0), this.c);
                this.b((this.c + (this.b + 4)));
                v1 = this;
                v0 = (v0 + 1);
            }
        }
        return;
    }
    public final void a(byte[] p3)
    {
        this.b(p3, 0, p3.length);
        return;
    }
    public final boolean a(int p2, int p3)
    {
        if(((this.a() + 4) + p2) > p3) {
            v0 = 0;
        } else {
            v0 = 1;
        }
        return v0;
    }
    public final synchronized boolean b()
    {
        synchronized(this) {
            if(this.d != 0) {
                v0 = 0;
            } else {
                v0 = 1;
            }
        }
        return v0;
    }
    public final synchronized void c()
    {
        synchronized(this) {
            if (this.b() == 0) {
                if(this.d != 1) {
                    this.b(((this.e.b + 4) + this.e.c));
                    this.b(this, this.g, 0, 4);
                    v1 = com.crashlytics.android.internal.aq.a(this.g, 0);
                    this.a(this.c, (this.d - 1), this, this.f.b);
                    this.d = (this.d - 1);
                    this.e = new com.crashlytics.android.internal.as(this, v1);
                } else {
                    this.d();
                }
            }
            return;
        } else {
            throw new java.util.NoSuchElementException();
        }
    }
    public synchronized void close()
    {
        synchronized(this) {
            this.b.close();
        }
        return;
    }
    public String toString()
    {
        v1 = new StringBuilder();
        v1.append(this.getClass().getSimpleName()).append(91);
        v1.append("fileLength=").append(this.c);
        v1.append(", size=").append(this.d);
        v1.append(", first=").append(this.e);
        v1.append(", last=").append(this.f);
        v1.append(", element lengths=[");
        this.a(new com.crashlytics.android.internal.ar(this, v1));
        v1.append("]]");
        return v1.toString();
    }
    static as()
    {
        v1 = 0;
        com.crashlytics.android.internal.as.a = new com.crashlytics.android.internal.as(v1, v1);
        return;
    }
     as(int p1, int p2)
    {
        this.b = p1;
        this.c = p2;
        return;
    }
    public final String toString()
    {
        return new StringBuilder().append(this.getClass().getSimpleName()).append("[position = ").append(this.b).append(", length = ").append(this.c).append("]").toString();
    }
    private at(com.crashlytics.android.internal.aq p2, com.crashlytics.android.internal.as p3)
    {
        this.c = p2;
        this.a = com.crashlytics.android.internal.aq.a(p2, (p3.b + 4));
        this.b = p3.c;
        return;
    }
    synthetic at(com.crashlytics.android.internal.aq p1, com.crashlytics.android.internal.as p2, byte p3)
    {
        this(p1, p2);
        return;
    }
    public final int read()
    {
        if(this.b != 0) {
            com.crashlytics.android.internal.aq.a(this.c).seek(((long) this.a));
            v0 = com.crashlytics.android.internal.aq.a(this.c).read();
            this.a = com.crashlytics.android.internal.aq.a(this.c, (this.a + 1));
            this.b = (this.b - 1);
        } else {
            v0 = 15;
        }
        return v0;
    }
    public final int read(byte[] p3, int p4, int p5)
    {
        com.crashlytics.android.internal.aq.a(p3, "buffer");
        if (((p4 | p5) >= 0) && (p5 <= (p3.length - p4))) {
            if(this.b <= 0) {
                v0 = 15;
            } else {
                if(p5 > this.b) {
                    p5 = this.b;
                }
                com.crashlytics.android.internal.aq.a(this.c, this.a, p3, p4, p5);
                this.a = com.crashlytics.android.internal.aq.a(this.c, (this.a + p5));
                this.b = (this.b - p5);
                v0 = p5;
            }
            return v0;
        } else {
            throw new ArrayIndexOutOfBoundsException();
        }
    }
    public av()
    {
        this(new com.crashlytics.android.internal.r());
        return;
    }
    public av(com.crashlytics.android.internal.q p1)
    {
        this.a = p1;
        return;
    }
    private synchronized void a()
    {
        synchronized(this) {
            this.d = 0;
            this.c = 0;
        }
        return;
    }
    private static boolean a(java.security.cert.X509Certificate p3, java.security.cert.X509Certificate p4)
    {
        v0 = 0;
        if(p3.getSubjectX500Principal().equals(p4.getIssuerX500Principal()) != 0) {
            p4.verify(p3.getPublicKey());
            v0 = 1;
        }
        return v0;
    }
    public static java.security.cert.X509Certificate[] a(java.security.cert.X509Certificate[] p6, com.crashlytics.android.internal.aI p7)
    {
        v1 = 1;
        v3 = new java.util.LinkedList();
        if(p7.a(p6[0]) == 0) {
            v0 = 0;
        } else {
            v0 = 1;
        }
        v3.add(p6[0]);
        v2 = v0;
        v0 = 1;
        while (v0 < p6.length) {
            if(p7.a(p6[v0]) != 0) {
                v2 = 1;
            }
            if(com.crashlytics.android.internal.av.a(p6[v0], p6[(v0 - 1)]) != 0) {
                v3.add(p6[v0]);
                v0 = (v0 + 1);
            }
        }
        v0 = p7.b(p6[(v0 - 1)]);
        if(v0 == 0) {
            v1 = v2;
        } else {
            v3.add(v0);
        }
        if (v1 == 0) {
            throw new java.security.cert.CertificateException("Didn't find a trust anchor in chain cleanup!");
        } else {
            v0 = new java.security.cert.X509Certificate[v3.size()];
            return v3.toArray(v0);
        }
    }
    private synchronized javax.net.ssl.SSLSocketFactory b()
    {
        synchronized(this) {
            if((this.c == 0) && (this.d)) {
                this.c();
                this.c = this;
            }
        }
        return this.c;
    }
    private synchronized javax.net.ssl.SSLSocketFactory c()
    {
        synchronized(this) {
            this.d = 1;
            v0 = this.b;
            v2 = javax.net.ssl.SSLContext.getInstance("TLS");
            v3 = new javax.net.ssl.TrustManager[1];
            v3[0] = new com.crashlytics.android.internal.aH(new com.crashlytics.android.internal.aI(v0.a(), v0.b()), v0);
            v2.init(0, v3, 0);
            v0 = v2.getSocketFactory();
            this.a.a("Crashlytics", "Custom SSL pinning enabled");
        }
        return v0;
    }
    public com.crashlytics.android.internal.ay a(com.crashlytics.android.internal.ax p2, String p3)
    {
        return this.a(p2, p3, java.util.Collections.emptyMap());
    }
    public com.crashlytics.android.internal.ay a(com.crashlytics.android.internal.ax p4, String p5, java.util.Map p6)
    {
        switch(com.crashlytics.android.internal.aw.a[p4.ordinal()]) {
            case 1:
                v1 = com.crashlytics.android.internal.ay.a(p5, p6, 1);
                break;
            case 2:
                v1 = com.crashlytics.android.internal.ay.b(p5, p6, 1);
                break;
            case 3:
                v1 = com.crashlytics.android.internal.ay.a(p5);
                break;
            case 4:
                v1 = com.crashlytics.android.internal.ay.b(p5);
                break;
            default:
                throw new IllegalArgumentException("Unsupported HTTP method!");
        }
        if(p5 != 0) {
            v0 = p5.toLowerCase().startsWith("https");
        } else {
            v0 = 0;
        }
        if((v0 != 0) && (this.b != 0)) {
            this.b();
            if(this != 0) {
                v1.a().setSSLSocketFactory(this);
            }
        }
        return v1;
    }
    public void a(com.crashlytics.android.internal.aG p2)
    {
        if(this.b != p2) {
            this.b = p2;
            this.a();
        }
        return;
    }
    static aw()
    {
        v0 = new int[com.crashlytics.android.internal.ax.values().length];
        com.crashlytics.android.internal.aw.a = v0;
        com.crashlytics.android.internal.aw.a[com.crashlytics.android.internal.ax.a.ordinal()] = 1;
        com.crashlytics.android.internal.aw.a[com.crashlytics.android.internal.ax.b.ordinal()] = 2;
        com.crashlytics.android.internal.aw.a[com.crashlytics.android.internal.ax.c.ordinal()] = 3;
        com.crashlytics.android.internal.aw.a[com.crashlytics.android.internal.ax.d.ordinal()] = 4;
        return;
    }
    static ax()
    {
        com.crashlytics.android.internal.ax.a = new com.crashlytics.android.internal.ax("GET", 0);
        com.crashlytics.android.internal.ax.b = new com.crashlytics.android.internal.ax("POST", 1);
        com.crashlytics.android.internal.ax.c = new com.crashlytics.android.internal.ax("PUT", 2);
        com.crashlytics.android.internal.ax.d = new com.crashlytics.android.internal.ax("DELETE", 3);
        v0 = new com.crashlytics.android.internal.ax[4];
        v0[0] = com.crashlytics.android.internal.ax.a;
        v0[1] = com.crashlytics.android.internal.ax.b;
        v0[2] = com.crashlytics.android.internal.ax.c;
        v0[3] = com.crashlytics.android.internal.ax.d;
        com.crashlytics.android.internal.ax.e = v0;
        return;
    }
    private ax(String p1, int p2)
    {
        this(p1, p2);
        return;
    }
    public static com.crashlytics.android.internal.ax valueOf(String p1)
    {
        return Enum.valueOf(com.crashlytics.android.internal.ax, p1);
    }
    public static com.crashlytics.android.internal.ax[] values()
    {
        return com.crashlytics.android.internal.ax.e.clone();
    }
    static ay()
    {
        com.crashlytics.android.internal.ay.a = com.crashlytics.android.internal.aB.a;
        return;
    }
    private ay(CharSequence p3, String p4)
    {
        this.b = 0;
        this.g = 1;
        this.h = 0;
        this.i = 8192;
        this.c = new java.net.URL(p3.toString());
        this.d = p4;
        return;
    }
    static synthetic int a(com.crashlytics.android.internal.ay p1)
    {
        return p1.i;
    }
    private com.crashlytics.android.internal.ay a(java.io.InputStream p7, java.io.OutputStream p8)
    {
        return new com.crashlytics.android.internal.az(this, p7, this.g, p7, p8).call();
    }
    public static com.crashlytics.android.internal.ay a(CharSequence p2)
    {
        return new com.crashlytics.android.internal.ay(p2, "PUT");
    }
    public static com.crashlytics.android.internal.ay a(CharSequence p3, java.util.Map p4, boolean p5)
    {
        return new com.crashlytics.android.internal.ay(com.crashlytics.android.internal.ay.c(com.crashlytics.android.internal.ay.a(p3, p4)), "GET");
    }
    private com.crashlytics.android.internal.ay a(String p3, String p4, String p5)
    {
        v0 = new StringBuilder();
        v0.append("form-data; name="").append(p3);
        if(p4 != 0) {
            v0.append(""; filename="").append(p4);
        }
        v0.append(34);
        this.d("Content-Disposition", v0.toString());
        if(p5 != 0) {
            this.d("Content-Type", p5);
        }
        this.d("\x0d\x0a");
        return this;
    }
    private com.crashlytics.android.internal.ay a(String p3, String p4, String p5, String p6)
    {
        this.j();
        this.a(p3, p4, 0);
        this.e.a(p6);
        return this;
    }
    private static String a(CharSequence p8, java.util.Map p9)
    {
        v0 = p8.toString();
        if((p9 != 0) && (p9.isEmpty() == 0)) {
            v1 = new StringBuilder(v0);
            if((v0.indexOf(58) + 2) == v0.lastIndexOf(47)) {
                v1.append(47);
            }
            v2 = v0.indexOf(63);
            v3 = (v1.length() - 1);
            if(v2 != 15) {
                if((v2 < v3) && (v0.charAt(v3) != 38)) {
                    v1.append(38);
                }
            } else {
                v1.append(63);
            }
            v2 = p9.entrySet().iterator();
            v0 = v2.next();
            v1.append(v0.getKey().toString());
            v1.append(61);
            v0 = v0.getValue();
            if(v0 != 0) {
                v1.append(v0);
            }
            while (v2.hasNext() != 0) {
                v1.append(38);
                v0 = v2.next();
                v1.append(v0.getKey().toString());
                v1.append(61);
                v0 = v0.getValue();
                if(v0 != 0) {
                    v1.append(v0);
                }
            }
            v0 = v1.toString();
        }
        return v0;
    }
    public static com.crashlytics.android.internal.ay b(CharSequence p2)
    {
        return new com.crashlytics.android.internal.ay(p2, "DELETE");
    }
    public static com.crashlytics.android.internal.ay b(CharSequence p3, java.util.Map p4, boolean p5)
    {
        return new com.crashlytics.android.internal.ay(com.crashlytics.android.internal.ay.c(com.crashlytics.android.internal.ay.a(p3, p4)), "POST");
    }
    private com.crashlytics.android.internal.ay b(String p2, String p3, String p4)
    {
        this.a(p2, p3, 0, p4);
        return this;
    }
    static synthetic String b(String p1)
    {
        return com.crashlytics.android.internal.ay.c(p1);
    }
    private static String c(CharSequence p6)
    {
        v4 = new java.net.URL(p6.toString());
        v2 = v4.getHost();
        v0 = v4.getPort();
        if(v0 != 15) {
            v2 = new StringBuilder().append(v2).append(58).append(Integer.toString(v0)).toString();
        }
        v0 = new java.net.URI(v4.getProtocol(), v2, v4.getPath(), v4.getQuery(), 0).toASCIIString();
        v1 = v0.indexOf(63);
        if((v1 > 0) && ((v1 + 1) < v0.length())) {
            v0 = new StringBuilder().append(v0.substring(0, (v1 + 1))).append(v0.substring((v1 + 1)).replace("+", "%2B")).toString();
        }
        return v0;
    }
    private static String c(String p1)
    {
        if((p1 == 0) || (p1.length() <= 0)) {
            p1 = "UTF-8";
        }
        return p1;
    }
    private static String c(String p9, String p10)
    {
        if((p9 != 0) && (p9.length() != 0)) {
            v1 = p9.length();
            v3 = (p9.indexOf(59) + 1);
            if((v3 != 0) && (v3 != v1)) {
                v0 = p9.indexOf(59, v3);
                if(v0 != 15) {
                    v8 = v0;
                    v0 = v3;
                    v3 = v8;
                } else {
                    v0 = v3;
                    v3 = v1;
                }
                while (v0 < v3) {
                    v4 = p9.indexOf(61, v0);
                    if((v4 != 15) && ((v4 < v3) && (p10.equals(p9.substring(v0, v4).trim()) != 0))) {
                        v0 = p9.substring((v4 + 1), v3).trim();
                        v4 = v0.length();
                        if(v4 != 0) {
                            if((v4 <= 2) || ((34 != v0.charAt(0)) || (34 != v0.charAt((v4 - 1))))) {
                                return v0;
                            } else {
                                v0 = v0.substring(1, (v4 - 1));
                            }
                        }
                    }
                    v3 = (v3 + 1);
                    v0 = p9.indexOf(59, v3);
                    if(v0 == 15) {
                        v0 = v1;
                    }
                    v8 = v0;
                    v0 = v3;
                    v3 = v8;
                }
                v0 = 0;
            } else {
                v0 = 0;
            }
        } else {
            v0 = 0;
        }
    }
    private com.crashlytics.android.internal.ay d(CharSequence p3)
    {
        this.i();
        this.e.a(p3.toString());
        return this;
    }
    private com.crashlytics.android.internal.ay d(String p3, String p4)
    {
        this.d(p3);
        return this.d(": ").d(p4).d("\x0d\x0a");
    }
    private String d(String p5)
    {
        this.h();
        v1 = this.a().getHeaderFieldInt("Content-Length", 15);
        if(v1 <= 0) {
            v0 = new java.io.ByteArrayOutputStream();
        } else {
            v0 = new java.io.ByteArrayOutputStream(v1);
        }
        this.f();
        this.a(new java.io.BufferedInputStream(this, this.i), v0);
        return v0.toString(com.crashlytics.android.internal.ay.c(p5));
    }
    private java.net.HttpURLConnection e()
    {
        v0 = com.crashlytics.android.internal.ay.a.a(this.c);
        v0.setRequestMethod(this.d);
        return v0;
    }
    private java.io.InputStream f()
    {
        if(this.b() >= 400) {
            v0 = this.a().getErrorStream();
            if(v0 == 0) {
                v0 = this.a().getInputStream();
            }
        } else {
            v0 = this.a().getInputStream();
        }
        return v0;
    }
    private com.crashlytics.android.internal.ay g()
    {
        if(this.e != 0) {
            if(this.f) {
                this.e.a("\x0d\x0a--00content0boundary00--\x0d\x0a");
            }
            if(!this.g) {
                this.e.close();
            } else {
                this.e.close();
            }
            this.e = 0;
        }
        return this;
    }
    private com.crashlytics.android.internal.ay h()
    {
        this.g();
        return this;
    }
    private com.crashlytics.android.internal.ay i()
    {
        if(this.e == 0) {
            this.a().setDoOutput(1);
            this.e = new com.crashlytics.android.internal.aF(this.a().getOutputStream(), com.crashlytics.android.internal.ay.c(this.a().getRequestProperty("Content-Type"), "charset"), this.i);
        }
        return this;
    }
    private com.crashlytics.android.internal.ay j()
    {
        if(this.f) {
            this.e.a("\x0d\x0a--00content0boundary00\x0d\x0a");
        } else {
            this.f = 1;
            this.a("Content-Type", "multipart/form-data; boundary=00content0boundary00").i();
            this.e.a("--00content0boundary00\x0d\x0a");
        }
        return this;
    }
    public final com.crashlytics.android.internal.ay a(int p3)
    {
        this.a().setConnectTimeout(10000);
        return this;
    }
    public final com.crashlytics.android.internal.ay a(String p3, Number p4)
    {
        if(p4 == 0) {
            v0 = 0;
        } else {
            v0 = p4.toString();
        }
        this.b(p3, 0, v0);
        return this;
    }
    public final com.crashlytics.android.internal.ay a(String p2, String p3)
    {
        this.a().setRequestProperty(p2, p3);
        return this;
    }
    public final com.crashlytics.android.internal.ay a(String p4, String p5, String p6, java.io.File p7)
    {
        v1 = new java.io.BufferedInputStream(new java.io.FileInputStream(p7));
        v0 = this.a(p4, p5, p6, v1);
        v1.close();
        return v0;
    }
    public final com.crashlytics.android.internal.ay a(String p3, String p4, String p5, java.io.InputStream p6)
    {
        this.j();
        this.a(p3, p4, p5);
        this.a(p6, this.e);
        return this;
    }
    public final com.crashlytics.android.internal.ay a(java.util.Map$Entry p3)
    {
        return p3.getKey();
    }
    public final com.crashlytics.android.internal.ay a(boolean p3)
    {
        this.a().setUseCaches(0);
        return this;
    }
    public final String a(String p2)
    {
        this.h();
        return this.a().getHeaderField(p2);
    }
    public final java.net.HttpURLConnection a()
    {
        if(this.b == 0) {
            this.e();
            this.b = this;
        }
        return this.b;
    }
    public final int b()
    {
        this.g();
        return this.a().getResponseCode();
    }
    public final com.crashlytics.android.internal.ay b(String p2, String p3)
    {
        this.b(p2, 0, p3);
        return this;
    }
    public final String c()
    {
        this.d(com.crashlytics.android.internal.ay.c(this.a("Content-Type"), "charset"));
        return this;
    }
    public final String d()
    {
        return this.a().getRequestMethod();
    }
    public final String toString()
    {
        return new StringBuilder().append(this.a().getRequestMethod()).append(32).append(this.a().getURL()).toString();
    }
    public b()
    {
        this("default");
        return;
    }
    public b(com.crashlytics.android.internal.m p2)
    {
        this(p2, "default");
        return;
    }
    public b(com.crashlytics.android.internal.m p2, String p3)
    {
        this(p2, p3, com.crashlytics.android.internal.i.a);
        return;
    }
    private b(com.crashlytics.android.internal.m p2, String p3, com.crashlytics.android.internal.i p4)
    {
        this.b = new java.util.concurrent.ConcurrentHashMap();
        this.c = new java.util.concurrent.ConcurrentHashMap();
        this.g = new com.crashlytics.android.internal.c(this);
        this.h = new com.crashlytics.android.internal.d(this);
        this.i = new java.util.HashMap();
        this.e = p2;
        this.d = p3;
        this.f = p4;
        return;
    }
    public b(String p2)
    {
        this(com.crashlytics.android.internal.m.b, p2);
        return;
    }
    private java.util.Set a(Class p2)
    {
        return this.b.get(p2);
    }
    private void a()
    {
        if(this.h.get().booleanValue() == 0) {
            this.h.set(Boolean.valueOf(1));
            while(true) {
                v0 = this.g.get().poll();
                if(v0 == 0) {
                } else {
                    if(v0.b.a() != 0) {
                        com.crashlytics.android.internal.b.a(v0.a, v0.b);
                    }
                }
            }
            this.h.set(Boolean.valueOf(0));
        }
        return;
    }
    private void a(com.crashlytics.android.internal.g p5, com.crashlytics.android.internal.h p6)
    {
        v0 = p6.c();
        if(v0 != 0) {
            com.crashlytics.android.internal.b.a(v0, p5);
        }
        return;
    }
    private static void a(Object p3, com.crashlytics.android.internal.g p4)
    {
        p4.a(p3);
        return;
    }
    private static void a(String p2, reflect.InvocationTargetException p3)
    {
        v0 = p3.getCause();
        if (v0 == 0) {
            throw new RuntimeException(p2);
        } else {
            throw new RuntimeException(p2, v0);
        }
    }
    public void a(Object p7)
    {
        this.e.a(this);
        v3 = this.f.a(p7);
        v4 = v3.keySet().iterator();
        while (v4.hasNext() != 0) {
            v0 = v4.next();
            v1 = v3.get(v0);
            v2 = this.c.putIfAbsent(v0, v1);
            if(v2 == 0) {
                v0 = this.b.get(v0);
                if((v0 != 0) && (v0.isEmpty() == 0)) {
                    v2 = v0.iterator();
                    while (v2.hasNext() != 0) {
                        this.a(v2.next(), v1);
                    }
                }
            } else {
                throw new IllegalArgumentException(new StringBuilder("Producer method for type ").append(v0).append(" found on type ").append(v1.a.getClass()).append(", but already registered by type ").append(v2.a.getClass()).append(".").toString());
            }
        }
        v3 = this.f.b(p7);
        v4 = v3.keySet().iterator();
        while (v4.hasNext() != 0) {
            v0 = v4.next();
            v1 = this.b.get(v0);
            if(v1 == 0) {
                v2 = new java.util.concurrent.CopyOnWriteArraySet();
                v1 = this.b.putIfAbsent(v0, v2);
                if(v1 == 0) {
                    v1 = v2;
                }
            }
            v1.addAll(v3.get(v0));
        }
        v2 = v3.entrySet().iterator();
        while (v2.hasNext() != 0) {
            v0 = v2.next();
            v1 = this.c.get(v0.getKey());
            if((v1 != 0) && (v1.a() != 0)) {
                v3 = v0.getValue().iterator();
                while (v3.hasNext() != 0) {
                    v0 = v3.next();
                    if(v1.a() != 0) {
                        if(v0.a() != 0) {
                            this.a(v0, v1);
                        }
                    }
                }
            }
        }
        return;
    }
    public void b(Object p7)
    {
        this.e.a(this);
        v3 = this.f.a(p7).entrySet().iterator();
        while (v3.hasNext() != 0) {
            v0 = v3.next();
            v1 = v0.getKey();
            v2 = this.c.get(v1);
            v0 = v0.getValue();
            if((v0 != 0) && (v0.equals(v2) != 0)) {
                this.c.remove(v1).b();
            } else {
                throw new IllegalArgumentException(new StringBuilder("Missing event producer for an annotated method. Is ").append(p7.getClass()).append(" registered?").toString());
            }
        }
        v2 = this.f.b(p7).entrySet().iterator();
        while (v2.hasNext() != 0) {
            v0 = v2.next();
            this.a(v0.getKey());
            v1 = v0.getValue();
            if((this != 0) && (this.containsAll(v1) != 0)) {
                v4 = this.iterator();
                while (v4.hasNext() != 0) {
                    v0 = v4.next();
                    if(v1.contains(v0) != 0) {
                        v0.b();
                    }
                }
                this.removeAll(v1);
            } else {
                throw new IllegalArgumentException(new StringBuilder("Missing event handler for an annotated method. Is ").append(p7.getClass()).append(" registered?").toString());
            }
        }
        return;
    }
    public void c(Object p7)
    {
        this.e.a(this);
        v3 = p7.getClass();
        v0 = this.i.get(v3);
        if(v0 == 0) {
            v4 = new java.util.LinkedList();
            v1 = new java.util.HashSet();
            v4.add(v3);
            while (v4.isEmpty() == 0) {
                v0 = v4.remove(0);
                v1.add(v0);
                v0 = v0.getSuperclass();
                if(v0 != 0) {
                    v4.add(v0);
                }
            }
            this.i.put(v3, v1);
            v0 = v1;
        }
        v3 = v0.iterator();
        v1 = 0;
        while (v3.hasNext() != 0) {
            this.a(v3.next());
            if((this == 0) || (this.isEmpty() != 0)) {
                v0 = v1;
            } else {
                v4 = this.iterator();
                while (v4.hasNext() != 0) {
                    this.g.get().offer(new com.crashlytics.android.internal.e(p7, v4.next()));
                }
                v0 = 1;
            }
            v1 = v0;
        }
        if((v1 == 0) && ((p7 instanceof com.crashlytics.android.internal.f) == 0)) {
            this.c(new com.crashlytics.android.internal.f(this, p7));
        }
        this.a();
        return;
    }
    public String toString()
    {
        return new StringBuilder("[Bus "").append(this.d).append(""]").toString();
    }
     c(com.crashlytics.android.internal.b p1)
    {
        return;
    }
    protected final synthetic Object initialValue()
    {
        return new java.util.concurrent.ConcurrentLinkedQueue();
    }
     d(com.crashlytics.android.internal.b p1)
    {
        return;
    }
    protected final synthetic Object initialValue()
    {
        return Boolean.valueOf(0);
    }
    public e(Object p1, com.crashlytics.android.internal.g p2)
    {
        this.a = p1;
        this.b = p2;
        return;
    }
    public f(Object p1, Object p2)
    {
        this.a = p1;
        this.b = p2;
        return;
    }
     g(Object p3, reflect.Method p4)
    {
        this.d = 1;
        if (p3 != 0) {
            if (p4 != 0) {
                this.a = p3;
                this.b = p4;
                p4.setAccessible(1);
                this.c = ((p4.hashCode() + 31) * 31);
                return;
            } else {
                throw new NullPointerException("EventHandler method cannot be null.");
            }
        } else {
            throw new NullPointerException("EventHandler target cannot be null.");
        }
    }
    public final void a(Object p5)
    {
        if (this.d) {
            v2 = new Object[1];
            v2[0] = p5;
            this.b.invoke(this.a, v2);
            return;
        } else {
            throw new IllegalStateException(new StringBuilder().append(this.toString()).append(" has been invalidated and can no longer handle events.").toString());
        }
    }
    public final boolean a()
    {
        return this.d;
    }
    public final void b()
    {
        this.d = 0;
        return;
    }
    public final boolean equals(Object p5)
    {
        v0 = 1;
        if(this != p5) {
            if(p5 != 0) {
                if(this.getClass() == p5.getClass()) {
                    if((this.b.equals(p5.b) == 0) || (this.a != p5.a)) {
                        v0 = 0;
                    }
                } else {
                    v0 = 0;
                }
            } else {
                v0 = 0;
            }
        }
        return v0;
    }
    public final int hashCode()
    {
        return this.c;
    }
    public final String toString()
    {
        return new StringBuilder("[EventHandler ").append(this.b).append("]").toString();
    }
     h(Object p3, reflect.Method p4)
    {
        this.d = 1;
        if (p3 != 0) {
            if (p4 != 0) {
                this.a = p3;
                this.b = p4;
                p4.setAccessible(1);
                this.c = ((p4.hashCode() + 31) * 31);
                return;
            } else {
                throw new NullPointerException("EventProducer method cannot be null.");
            }
        } else {
            throw new NullPointerException("EventProducer target cannot be null.");
        }
    }
    public final boolean a()
    {
        return this.d;
    }
    public final void b()
    {
        this.d = 0;
        return;
    }
    public final Object c()
    {
        if (this.d) {
            v2 = new Object[0];
            return this.b.invoke(this.a, v2);
        } else {
            throw new IllegalStateException(new StringBuilder().append(this.toString()).append(" has been invalidated and can no longer produce events.").toString());
        }
    }
    public final boolean equals(Object p5)
    {
        v0 = 1;
        if(this != p5) {
            if(p5 != 0) {
                if(this.getClass() == p5.getClass()) {
                    if((this.b.equals(p5.b) == 0) || (this.a != p5.a)) {
                        v0 = 0;
                    }
                } else {
                    v0 = 0;
                }
            } else {
                v0 = 0;
            }
        }
        return v0;
    }
    public final int hashCode()
    {
        return this.c;
    }
    public final String toString()
    {
        return new StringBuilder("[EventProducer ").append(this.b).append("]").toString();
    }
    static i()
    {
        com.crashlytics.android.internal.i.a = new com.crashlytics.android.internal.j();
        return;
    }
    static m()
    {
        com.crashlytics.android.internal.m.a = new com.crashlytics.android.internal.n();
        com.crashlytics.android.internal.m.b = new com.crashlytics.android.internal.o();
        return;
    }
    public p()
    {
        return;
    }
    protected final synchronized void a(android.content.Context p4)
    {
        synchronized(this) {
            if(!this.b) {
                if(p4 != 0) {
                    this.a = new com.crashlytics.android.internal.z(p4.getApplicationContext(), this.getName());
                    this.b = 1;
                    this.c();
                } else {
                    throw new IllegalArgumentException("context cannot be null.");
                }
            }
        }
        return;
    }
    public String getComponentPath()
    {
        return new StringBuilder(".TwitterSdk/").append(this.getName()).toString();
    }
    public final android.content.Context getContext()
    {
        return this.a;
    }
    public final String getName()
    {
        return this.getClass().getSimpleName().toLowerCase();
    }
    public final synchronized boolean isInitialized()
    {
        synchronized(this) {
        }
        return this.b;
    }
    private w(com.crashlytics.android.internal.v p1)
    {
        this.a = p1;
        return;
    }
    synthetic w(com.crashlytics.android.internal.v p1, byte p2)
    {
        this(p1);
        return;
    }
    static synthetic void a(com.crashlytics.android.internal.w p1, android.app.Application p2)
    {
        if(p2 != 0) {
            p2.registerActivityLifecycleCallbacks(new com.crashlytics.android.internal.x(p1));
        }
        return;
    }
     x(com.crashlytics.android.internal.w p1)
    {
        this.a = p1;
        return;
    }
    public final void onActivityCreated(android.app.Activity p2, android.os.Bundle p3)
    {
        com.crashlytics.android.internal.v.a(this.a.a, p2);
        return;
    }
    public final void onActivityDestroyed(android.app.Activity p1)
    {
        return;
    }
    public final void onActivityPaused(android.app.Activity p1)
    {
        return;
    }
    public final void onActivityResumed(android.app.Activity p2)
    {
        com.crashlytics.android.internal.v.a(this.a.a, p2);
        return;
    }
    public final void onActivitySaveInstanceState(android.app.Activity p1, android.os.Bundle p2)
    {
        return;
    }
    public final void onActivityStarted(android.app.Activity p2)
    {
        com.crashlytics.android.internal.v.a(this.a.a, p2);
        return;
    }
    public final void onActivityStopped(android.app.Activity p1)
    {
        return;
    }
    static y()
    {
        com.crashlytics.android.internal.y.a = new com.crashlytics.android.internal.v();
        return;
    }
    static synthetic com.crashlytics.android.internal.v a()
    {
        return com.crashlytics.android.internal.y.a;
    }
    public z(android.content.Context p3, String p4)
    {
        this(p3);
        this.a = new StringBuilder(".TwitterSdk/").append(p4).toString();
        return;
    }
    public final java.io.File getCacheDir()
    {
        return new java.io.File(super.getCacheDir(), this.a);
    }
    public final java.io.File getDatabasePath(String p4)
    {
        v0 = new java.io.File(super.getDatabasePath(p4).getParentFile(), this.a);
        v0.mkdirs();
        return new java.io.File(v0, p4);
    }
    public final java.io.File getExternalCacheDir()
    {
        return new java.io.File(super.getExternalCacheDir(), this.a);
    }
    public final java.io.File getExternalFilesDir(String p4)
    {
        return new java.io.File(super.getExternalFilesDir(p4), this.a);
    }
    public final java.io.File getFilesDir()
    {
        return new java.io.File(super.getFilesDir(), this.a);
    }
    public final android.database.sqlite.SQLiteDatabase openOrCreateDatabase(String p2, int p3, android.database.sqlite.SQLiteDatabase$CursorFactory p4)
    {
        return android.database.sqlite.SQLiteDatabase.openOrCreateDatabase(this.getDatabasePath(p2), p4);
    }
    public final android.database.sqlite.SQLiteDatabase openOrCreateDatabase(String p2, int p3, android.database.sqlite.SQLiteDatabase$CursorFactory p4, android.database.DatabaseErrorHandler p5)
    {
        return android.database.sqlite.SQLiteDatabase.openOrCreateDatabase(this.getDatabasePath(p2).getPath(), p4, p5);
    }
     j(com.crashlytics.android.CrashTest p1, long p2)
    {
        this.b = p1;
        this.a = p2;
        return;
    }
    private varargs Void a()
    {
        Thread.sleep(this.a);
        this.b.throwRuntimeException("Background thread crash");
        return 0;
    }
    protected final synthetic Object doInBackground(Object[] p2)
    {
        this.a();
        return this;
    }
     p(com.crashlytics.android.Crashlytics p1, android.app.Activity p2, com.crashlytics.android.u p3, com.crashlytics.android.X p4, com.crashlytics.android.internal.aQ p5)
    {
        this.b = p1;
        this.c = p2;
        this.a = p3;
        this.d = p4;
        this.e = p5;
        return;
    }
    public final void run()
    {
        v0 = new android.app.AlertDialog$Builder(this.c);
        v1 = new com.crashlytics.android.q(this);
        v2 = this.c.getResources().getDisplayMetrics().density;
        v3 = com.crashlytics.android.Crashlytics.a(this.b, v2, 5);
        v4 = new android.widget.TextView(this.c);
        v4.setAutoLinkMask(15);
        v4.setText(this.d.b());
        v4.setTextAppearance(this.c, 2.406109057e-38);
        v4.setPadding(v3, v3, v3, v3);
        v4.setFocusable(0);
        v3 = new android.widget.ScrollView(this.c);
        v3.setPadding(com.crashlytics.android.Crashlytics.a(this.b, v2, 14), com.crashlytics.android.Crashlytics.a(this.b, v2, 2), com.crashlytics.android.Crashlytics.a(this.b, v2, 10), com.crashlytics.android.Crashlytics.a(this.b, v2, 12));
        v3.addView(v4);
        v0.setView(v3).setTitle(this.d.a()).setCancelable(0).setNeutralButton(this.d.c(), v1);
        if(this.e.d) {
            v0.setNegativeButton(this.d.e(), new com.crashlytics.android.r(this));
        }
        if(this.e.f) {
            v0.setPositiveButton(this.d.d(), new com.crashlytics.android.s(this));
        }
        v0.show();
        return;
    }
     q(com.crashlytics.android.p p1)
    {
        this.a = p1;
        return;
    }
    public final void onClick(android.content.DialogInterface p3, int p4)
    {
        this.a.a.a(1);
        p3.dismiss();
        return;
    }
     r(com.crashlytics.android.p p1)
    {
        this.a = p1;
        return;
    }
    public final void onClick(android.content.DialogInterface p3, int p4)
    {
        this.a.a.a(0);
        p3.dismiss();
        return;
    }
     s(com.crashlytics.android.p p1)
    {
        this.a = p1;
        return;
    }
    public final void onClick(android.content.DialogInterface p3, int p4)
    {
        com.crashlytics.android.Crashlytics.a(1);
        this.a.a.a(1);
        p3.dismiss();
        return;
    }
    private u(com.crashlytics.android.Crashlytics p3)
    {
        this.a = 0;
        this.b = new java.util.concurrent.CountDownLatch(1);
        return;
    }
    synthetic u(com.crashlytics.android.Crashlytics p1, byte p2)
    {
        this(p1);
        return;
    }
    final void a(boolean p2)
    {
        this.a = p2;
        this.b.countDown();
        return;
    }
    final boolean a()
    {
        return this.a;
    }
    final void b()
    {
        this.b.await();
        return;
    }
    static v()
    {
        com.crashlytics.android.v.a = new com.crashlytics.android.w();
        com.crashlytics.android.v.b = new com.crashlytics.android.H();
        com.crashlytics.android.v.c = new com.crashlytics.android.J();
        new com.crashlytics.android.K();
        com.crashlytics.android.v.d = java.util.regex.Pattern.compile("([\d|A-Z|a-z]{12}\-[\d|A-Z|a-z]{4}\-[\d|A-Z|a-z]{4}\-[\d|A-Z|a-z]{12}).+");
        com.crashlytics.android.v.e = java.util.Collections.singletonMap("X-CRASHLYTICS-SEND-FLAGS", "1");
        com.crashlytics.android.v.f = com.crashlytics.android.d.a("0");
        return;
    }
    public v(Thread$UncaughtExceptionHandler p2, com.crashlytics.android.CrashlyticsListener p3, String p4)
    {
        this(p2, p3, com.crashlytics.android.internal.ah.a("Crashlytics Exception Handler"), p4);
        return;
    }
    private v(Thread$UncaughtExceptionHandler p7, com.crashlytics.android.CrashlyticsListener p8, java.util.concurrent.ExecutorService p9, String p10)
    {
        this.g = new java.util.concurrent.atomic.AtomicInteger(0);
        this.h = new java.util.concurrent.atomic.AtomicBoolean(0);
        this.j = p7;
        this.s = p9;
        this.m = new java.util.concurrent.atomic.AtomicBoolean(0);
        this.k = com.crashlytics.android.internal.v.a().h();
        this.l = new java.io.File(this.k, "initialization_marker");
        v2 = new Object[1];
        v2[0] = com.crashlytics.android.Crashlytics.getInstance().getVersion();
        this.n = String.format(java.util.Locale.US, "Crashlytics Android SDK/%s", v2);
        this.i = 8;
        com.crashlytics.android.internal.v.a().b().a("Crashlytics", "Checking for previous crash marker.");
        v0 = new java.io.File(com.crashlytics.android.internal.v.a().h(), "crash_marker");
        if(v0.exists() != 0) {
            v0.delete();
            if(p8 != 0) {
                p8.crashlyticsDidDetectCrashDuringPreviousExecution();
            }
        }
        this.q = com.crashlytics.android.d.a(com.crashlytics.android.Crashlytics.d());
        if(p10 != 0) {
            v0 = com.crashlytics.android.d.a(p10.replace("-", ""));
        } else {
            v0 = 0;
        }
        this.r = v0;
        this.p = new com.crashlytics.android.L(this);
        v0 = new android.content.IntentFilter("android.intent.action.ACTION_POWER_CONNECTED");
        this.o = new com.crashlytics.android.M(this);
        v1 = new android.content.IntentFilter("android.intent.action.ACTION_POWER_DISCONNECTED");
        com.crashlytics.android.Crashlytics.getInstance().getContext().registerReceiver(this.p, v0);
        com.crashlytics.android.Crashlytics.getInstance().getContext().registerReceiver(this.o, v1);
        this.h.set(1);
        return;
    }
    private static int a(float p2, int p3, boolean p4, int p5, long p6, long p8)
    {
        return (((((com.crashlytics.android.h.b(1, p2) + 0) + com.crashlytics.android.h.f(2, p3)) + com.crashlytics.android.h.b(3, p4)) + com.crashlytics.android.h.d(4, p5)) + com.crashlytics.android.h.b(5, p6));
    }
    private int a(int p7, com.crashlytics.android.d p8, com.crashlytics.android.d p9, int p10, long p11, long p13, boolean p15, java.util.Map p16, int p17, com.crashlytics.android.d p18, com.crashlytics.android.d p19)
    {
        v2 = (com.crashlytics.android.h.e(3, p7) + (com.crashlytics.android.h.b(1, p8) + 0));
        if(p9 != 0) {
            v1 = com.crashlytics.android.h.b(4, p9);
        } else {
            v1 = 0;
        }
        v1 = (((((v1 + v2) + com.crashlytics.android.h.d(5, p10)) + com.crashlytics.android.h.b(6, p11)) + com.crashlytics.android.h.b(7, p13)) + com.crashlytics.android.h.b(10, p15));
        if(p16 == 0) {
            v3 = v1;
        } else {
            v4 = p16.entrySet().iterator();
            v3 = v1;
            while (v4.hasNext() != 0) {
                v2 = v4.next();
                v2.getKey() = com.crashlytics.android.v.a(v1, v2.getValue());
                v3 = ((v1 + com.crashlytics.android.h.a(11)) + v3);
            }
        }
        v2 = (v3 + com.crashlytics.android.h.d(12, p17));
        if(p18 != 0) {
            v1 = com.crashlytics.android.h.b(13, p18);
        } else {
            v1 = 0;
        }
        v2 = (v2 + v1);
        if(p19 != 0) {
            v1 = com.crashlytics.android.h.b(14, p19);
        } else {
            v1 = 0;
        }
        return (v1 + v2);
    }
    private static int a(com.crashlytics.android.internal.ap p3, String p4)
    {
        return com.crashlytics.android.h.e(1, p3.f);
    }
    private static int a(StackTraceElement p6, boolean p7)
    {
        if(p6.isNativeMethod() == 0) {
            v0 = (com.crashlytics.android.h.b(1, 0.0) + 0);
        } else {
            v0 = (com.crashlytics.android.h.b(1, ((long) Math.max(p6.getLineNumber(), 0))) + 0);
        }
        v0 = (v0 + com.crashlytics.android.h.b(2, com.crashlytics.android.d.a(new StringBuilder().append(p6.getClassName()).append(".").append(p6.getMethodName()).toString())));
        if(p6.getFileName() != 0) {
            v0 = (v0 + com.crashlytics.android.h.b(3, com.crashlytics.android.d.a(p6.getFileName())));
        }
        if((p6.isNativeMethod() != 0) || (p6.getLineNumber() <= 0)) {
            v3 = v0;
        } else {
            v3 = (v0 + com.crashlytics.android.h.b(4, ((long) p6.getLineNumber())));
        }
        if(!p7) {
            v0 = 0;
        } else {
            v0 = 2;
        }
        return (com.crashlytics.android.h.d(5, v0) + v3);
    }
    private static int a(String p3, String p4)
    {
        v0 = com.crashlytics.android.h.b(1, com.crashlytics.android.d.a(p3));
        if(p4 == 0) {
            p4 = "";
        }
        return (v0 + com.crashlytics.android.h.b(2, com.crashlytics.android.d.a(p4)));
    }
    private int a(Thread p7, Throwable p8, java.util.Map p9)
    {
        this.b(p7, p8);
        v0 = ((this + com.crashlytics.android.h.a(1)) + 0);
        if(p9 == 0) {
            v2 = v0;
        } else {
            v4 = p9.entrySet().iterator();
            v2 = v0;
            while (v4.hasNext() != 0) {
                v1 = v4.next();
                v1.getKey() = com.crashlytics.android.v.a(v0, v1.getValue());
                v2 = ((v0 + com.crashlytics.android.h.a(2)) + v2);
            }
        }
        if(this.t != 0) {
            if(this.t.importance == 100) {
                v0 = 0;
            } else {
                v0 = 1;
            }
            v2 = (v2 + com.crashlytics.android.h.b(3, v0));
        }
        return (com.crashlytics.android.h.d(4, com.crashlytics.android.Crashlytics.getInstance().getContext().getResources().getConfiguration().orientation) + v2);
    }
    private int a(Thread p7, StackTraceElement[] p8, int p9, boolean p10)
    {
        v1 = (com.crashlytics.android.h.d(2, p9) + com.crashlytics.android.h.b(1, com.crashlytics.android.d.a(p7.getName())));
        v2 = p8.length;
        v0 = 0;
        while (v0 < v2) {
            v3 = com.crashlytics.android.v.a(p8[v0], p10);
            v1 = (v1 + (v3 + com.crashlytics.android.h.a(3)));
            v0 = (v0 + 1);
        }
        return v1;
    }
    private int a(Throwable p10, int p11)
    {
        v1 = 0;
        v0 = (com.crashlytics.android.h.b(1, com.crashlytics.android.d.a(p10.getClass().getName())) + 0);
        v2 = p10.getLocalizedMessage();
        if(v2 != 0) {
            v0 = (v0 + com.crashlytics.android.h.b(3, com.crashlytics.android.d.a(v2)));
        }
        v4 = p10.getStackTrace();
        v5 = v4.length;
        v2 = 0;
        while (v2 < v5) {
            v3 = com.crashlytics.android.v.a(v4[v2], 1);
            v2 = (v2 + 1);
            v0 = ((v3 + com.crashlytics.android.h.a(4)) + v0);
        }
        v2 = p10.getCause();
        if(v2 != 0) {
            if(p11 < 8) {
                this.a(v2, (p11 + 1));
                v0 = (v0 + (this + com.crashlytics.android.h.a(6)));
                return v0;
            }
            while (v2 != 0) {
                v2 = v2.getCause();
                v1 = (v1 + 1);
            }
            v0 = (v0 + com.crashlytics.android.h.d(7, v1));
        }
    }
    private com.crashlytics.android.d a(com.crashlytics.android.internal.aq p8)
    {
        v6 = 0;
        if(p8 != 0) {
            v1 = new int[1];
            v1[v6] = v6;
            v2 = new byte[p8.a()];
            p8.a(new com.crashlytics.android.y(this, v2, v1));
            v0 = com.crashlytics.android.d.a(v2, 0, v1[0]);
        } else {
            v0 = 0;
        }
        return v0;
    }
    private Object a(java.util.concurrent.Callable p6)
    {
        return this.s.submit(p6).get();
    }
    private static String a(java.io.File p3)
    {
        return p3.getName().substring(0, 35);
    }
    private java.util.concurrent.Future a(Runnable p4)
    {
        return this.s.submit(new com.crashlytics.android.G(this, p4));
    }
    static synthetic java.util.concurrent.atomic.AtomicBoolean a(com.crashlytics.android.v p1)
    {
        return p1.m;
    }
    private static void a(com.crashlytics.android.f p4)
    {
        if(p4 != 0) {
            p4.a();
        }
        return;
    }
    private void a(com.crashlytics.android.h p7, int p8, StackTraceElement p9, boolean p10)
    {
        v0 = 4;
        p7.g(p8, 2);
        p7.b(com.crashlytics.android.v.a(p9, p10));
        if(p9.isNativeMethod() == 0) {
            p7.a(1, 0.0);
        } else {
            p7.a(1, ((long) Math.max(p9.getLineNumber(), 0)));
        }
        p7.a(2, com.crashlytics.android.d.a(new StringBuilder().append(p9.getClassName()).append(".").append(p9.getMethodName()).toString()));
        if(p9.getFileName() != 0) {
            p7.a(3, com.crashlytics.android.d.a(p9.getFileName()));
        }
        if((p9.isNativeMethod() == 0) && (p9.getLineNumber() > 0)) {
            p7.a(4, ((long) p9.getLineNumber()));
        }
        if(!p10) {
            v0 = 0;
        }
        p7.a(5, v0);
        return;
    }
    private static void a(com.crashlytics.android.h p5, java.io.File p6)
    {
        if(p6.exists() == 0) {
            com.crashlytics.android.internal.v.a().b().a("Crashlytics", new StringBuilder("Tried to include a file that doesn't exist: ").append(p6.getName()).toString(), 0);
        } else {
            v3 = new byte[((int) p6.length())];
            v1 = new java.io.FileInputStream(p6);
            v0 = 0;
            while (v0 < v3.length) {
                v2 = v1.read(v3, v0, (v3.length - v0));
                if(v2 >= 0) {
                    v0 = (v0 + v2);
                }
            }
            com.crashlytics.android.internal.ab.a(v1, "Failed to close file input stream.");
            p5.a(v3);
        }
        return;
    }
    private void a(com.crashlytics.android.h p11, String p12)
    {
        v2 = new String[4];
        v2[0] = "SessionUser";
        v2[1] = "SessionApp";
        v2[2] = "SessionOS";
        v2[3] = "SessionDevice";
        v3 = v2.length;
        v0 = 0;
        while (v0 < v3) {
            v4 = v2[v0];
            this.a(new com.crashlytics.android.R(new StringBuilder().append(p12).append(v4).toString()));
            if(this.length != 0) {
                com.crashlytics.android.internal.v.a().b().a("Crashlytics", new StringBuilder("Collecting ").append(v4).append(" data for session ID ").append(p12).toString());
                com.crashlytics.android.v.a(p11, this[0]);
            } else {
                com.crashlytics.android.internal.v.a().b().a("Crashlytics", new StringBuilder("Can't find ").append(v4).append(" data for session ID ").append(p12).toString(), 0);
            }
            v0 = (v0 + 1);
        }
        return;
    }
    private void a(com.crashlytics.android.h p9, Thread p10, Throwable p11)
    {
        p9.g(1, 2);
        this.b(p10, p11);
        p9.b(this);
        this.a(p9, p10, this.y, 4, 1);
        v6 = 0;
        while (v6 < this.w.length) {
            this.a(p9, this.w[v6], this.x.get(v6), 0, 0);
            v6 = (v6 + 1);
        }
        this.a(p9, p11, 1, 2);
        p9.g(3, 2);
        p9.b(com.crashlytics.android.v.s());
        p9.a(1, com.crashlytics.android.v.f);
        p9.a(2, com.crashlytics.android.v.f);
        p9.a(3, 0.0);
        p9.g(4, 2);
        this.r();
        p9.b(this);
        p9.a(1, 0.0);
        p9.a(2, 0.0);
        p9.a(3, this.q);
        if(this.r != 0) {
            p9.a(4, this.r);
        }
        return;
    }
    private void a(com.crashlytics.android.h p5, Thread p6, StackTraceElement[] p7, int p8, boolean p9)
    {
        p5.g(1, 2);
        this.a(p6, p7, p8, p9);
        p5.b(this);
        p5.a(1, com.crashlytics.android.d.a(p6.getName()));
        p5.a(2, p8);
        v1 = p7.length;
        v0 = 0;
        while (v0 < v1) {
            this.a(p5, 3, p7[v0], p9);
            v0 = (v0 + 1);
        }
        return;
    }
    private void a(com.crashlytics.android.h p8, Throwable p9, int p10, int p11)
    {
        v0 = 0;
        p8.g(p11, 2);
        this.a(p9, 1);
        p8.b(this);
        p8.a(1, com.crashlytics.android.d.a(p9.getClass().getName()));
        v1 = p9.getLocalizedMessage();
        if(v1 != 0) {
            p8.a(3, com.crashlytics.android.d.a(v1));
        }
        v2 = p9.getStackTrace();
        v3 = v2.length;
        v1 = 0;
        while (v1 < v3) {
            this.a(p8, 4, v2[v1], 1);
            v1 = (v1 + 1);
        }
        v1 = p9.getCause();
        if(v1 != 0) {
            if(p10 < 8) {
                this.a(p8, v1, (p10 + 1), 6);
                return;
            }
            while (v1 != 0) {
                v1 = v1.getCause();
                v0 = (v0 + 1);
            }
            p8.a(7, v0);
        }
    }
    private void a(com.crashlytics.android.h p6, java.util.Map p7)
    {
        v4 = 2;
        v3 = p7.entrySet().iterator();
        while (v3.hasNext() != 0) {
            v0 = v3.next();
            p6.g(v4, v4);
            p6.b(com.crashlytics.android.v.a(v0.getKey(), v0.getValue()));
            p6.a(1, com.crashlytics.android.d.a(v0.getKey()));
            v0 = v0.getValue();
            if(v0 == 0) {
                v0 = "";
            }
            p6.a(2, com.crashlytics.android.d.a(v0));
        }
        return;
    }
    private void a(com.crashlytics.android.h p11, java.io.File[] p12, String p13)
    {
        java.util.Arrays.sort(p12, com.crashlytics.android.internal.ab.a);
        v2 = p12.length;
        v1 = 0;
        while (v1 < v2) {
            v0 = p12[v1];
            v3 = com.crashlytics.android.internal.v.a().b();
            v7 = new Object[2];
            v7[0] = p13;
            v7[1] = v0.getName();
            v3.a("Crashlytics", String.format(java.util.Locale.US, "Found Non Fatal for session ID %s in %s ", v7));
            com.crashlytics.android.v.a(p11, v0);
            v1 = (v1 + 1);
        }
        return;
    }
    static void a(com.crashlytics.android.internal.aq p6, int p7, long p8, String p10)
    {
        if(p6 != 0) {
            if(p10 != 0) {
                v0 = p10;
            } else {
                v0 = "null";
            }
            if(v0.length() > 16384) {
                v0 = new StringBuilder("...").append(v0.substring((v0.length() + -16384))).toString();
            }
            v0 = v0.replaceAll("\x0d", " ").replaceAll("\x0a", " ");
            v3 = new Object[2];
            v3[0] = Long.valueOf(p8);
            v3[1] = v0;
            p6.a(String.format(java.util.Locale.US, "%d %s%n", v3).getBytes("UTF-8"));
            while ((p6.b() == 0) && (p6.a() > 9.1835496158e-41)) {
                p6.c();
            }
        }
        return;
    }
    static synthetic void a(com.crashlytics.android.v p8, java.util.Date p9, Thread p10, Throwable p11)
    {
        v2 = 0;
        new java.io.File(p8.k, "crash_marker").createNewFile();
        p8 = p8.n();
        v0 = p8;
        if(v0 == 0) {
            com.crashlytics.android.internal.v.a().b().a("Crashlytics", "Tried to write a fatal exception while no session was open.", 0);
            v0 = 0;
        } else {
            com.crashlytics.android.Crashlytics.b(v0);
            v7 = new com.crashlytics.android.f(p8.k, new StringBuilder().append(v0).append("SessionCrash").toString());
            v2 = com.crashlytics.android.h.a(v7);
            p8.a(p9, v2, p10, p11, "crash", 1);
            v0 = v7;
        }
        com.crashlytics.android.internal.ab.a(v2, "Failed to flush to session begin file.");
        com.crashlytics.android.internal.ab.a(v0, "Failed to close fatal exception file output stream.");
        p8 = p8.m().l();
        com.crashlytics.android.b.a(p8.k, com.crashlytics.android.v.a, 4, com.crashlytics.android.v.c);
        if(com.crashlytics.android.Crashlytics.getInstance().j() == 0) {
            p8.p();
        }
        return;
    }
    private void a(String p5)
    {
        this.a(new com.crashlytics.android.S(p5));
        v0 = 0;
        while (v0 < this.length) {
            this[v0].delete();
            v0 = (v0 + 1);
        }
        return;
    }
    private void a(String p5, int p6)
    {
        com.crashlytics.android.b.a(this.k, new com.crashlytics.android.R(new StringBuilder().append(p5).append("SessionEvent").toString()), p6, com.crashlytics.android.v.c);
        return;
    }
    private void a(Throwable p6, java.io.OutputStream p7)
    {
        if(p7 != 0) {
            v1 = new java.io.PrintWriter(p7);
            com.crashlytics.android.v.a(p6, v1);
            com.crashlytics.android.internal.ab.a(v1, "Failed to close stack trace writer.");
        }
        return;
    }
    private static void a(Throwable p7, java.io.Writer p8)
    {
        v3 = 1;
        while (p7 != 0) {
            v0 = p7.getLocalizedMessage();
            if(v0 != 0) {
                v0 = v0.replaceAll("(\x0d\x0a|\x0a|\x0c)", " ");
            } else {
                v0 = 0;
            }
            if(v0 == 0) {
                v2 = "";
            } else {
                v2 = v0;
            }
            if(v3 == 0) {
                v0 = "Caused by: ";
            } else {
                v0 = "";
            }
            p8.write(new StringBuilder().append(v0).append(p7.getClass().getName()).append(": ").append(v2).append("\x0a").toString());
            v2 = p7.getStackTrace();
            v3 = v2.length;
            v0 = 0;
            while (v0 < v3) {
                p8.write(new StringBuilder("\x09at ").append(v2[v0].toString()).append("\x0a").toString());
                v0 = (v0 + 1);
            }
            p7 = p7.getCause();
            v3 = 0;
        }
        return;
    }
    private void a(java.util.Date p21, com.crashlytics.android.h p22, Thread p23, Throwable p24, String p25, boolean p26)
    {
        v15 = (p21.getTime() / 1000.0);
        v4 = com.crashlytics.android.internal.ab.b(com.crashlytics.android.Crashlytics.getInstance().getContext());
        v5 = com.crashlytics.android.internal.ab.a(this.v);
        v6 = com.crashlytics.android.internal.ab.c(com.crashlytics.android.Crashlytics.getInstance().getContext());
        v7 = com.crashlytics.android.Crashlytics.getInstance().getContext().getResources().getConfiguration().orientation;
        v8 = (com.crashlytics.android.internal.ab.c() - com.crashlytics.android.internal.ab.a(com.crashlytics.android.Crashlytics.getInstance().getContext()));
        v10 = com.crashlytics.android.internal.ab.b(android.os.Environment.getDataDirectory().getPath());
        this.t = com.crashlytics.android.Crashlytics.d();
        this.x = new java.util.LinkedList();
        this.y = p24.getStackTrace();
        if(!p26) {
            v12 = new Thread[0];
            this.w = v12;
        } else {
            v13 = Thread.getAllStackTraces();
            v12 = new Thread[v13.size()];
            this.w = v12;
            v17 = v13.entrySet().iterator();
            v14 = 0;
            while (v17.hasNext() != 0) {
                v12 = v17.next();
                this.w[v14] = v12.getKey();
                this.x.add(v12.getValue());
                v14 = (v14 + 1);
            }
        }
        v14 = this.a(this.u);
        if(v14 == 0) {
            com.crashlytics.android.internal.v.a().b().a("Crashlytics", "No log data to include with this event.");
        }
        com.crashlytics.android.internal.ab.a(this.u, "There was a problem closing the Crashlytics log file.");
        this.u = 0;
        if(com.crashlytics.android.internal.ab.a(com.crashlytics.android.Crashlytics.getInstance().getContext(), "com.crashlytics.CollectCustomKeys", 1) != 0) {
            v13 = com.crashlytics.android.Crashlytics.getInstance().a();
            if((v13 == 0) || (v13.size() <= 1)) {
                v12 = v13;
            } else {
                v12 = new java.util.TreeMap(v13);
            }
        } else {
            v12 = new java.util.TreeMap();
        }
        p22.g(10, 2);
        v13 = ((com.crashlytics.android.h.b(1, v15) + 0) + com.crashlytics.android.h.b(2, com.crashlytics.android.d.a(p25)));
        v17 = this.a(p23, p24, v12);
        v13 = (v13 + (v17 + com.crashlytics.android.h.a(3)));
        v17 = com.crashlytics.android.v.a(v4, v5, v6, v7, v8, v9, v10, v11);
        v13 = (v13 + (v17 + com.crashlytics.android.h.a(5)));
        if(v14 != 0) {
            v17 = com.crashlytics.android.h.b(1, v14);
            v13 = (v13 + (v17 + com.crashlytics.android.h.a(6)));
        }
        p22.b(v13);
        p22.a(1, v15);
        p22.a(2, com.crashlytics.android.d.a(p25));
        p22.g(3, 2);
        p22.b(this.a(p23, p24, v12));
        this.a(p22, p23, p24);
        if((v12 != 0) && (v12.isEmpty() == 0)) {
            this.a(p22, v12);
        }
        if(this.t != 0) {
            if(this.t.importance == 100) {
                v12 = 0;
            } else {
                v12 = 1;
            }
            p22.a(3, v12);
        }
        p22.a(4, com.crashlytics.android.Crashlytics.getInstance().getContext().getResources().getConfiguration().orientation);
        p22.g(5, 2);
        p22.b(com.crashlytics.android.v.a(v4, v5, v6, v7, v8, v9, v10, v11));
        p22.a(1, v4);
        p22.c(2, v5);
        p22.a(3, v6);
        p22.a(4, v7);
        p22.a(5, v8);
        p22.a(6, v10);
        if(v14 != 0) {
            p22.g(6, 2);
            p22.b(com.crashlytics.android.h.b(1, v14));
            p22.a(1, v14);
        }
        return;
    }
    static synthetic boolean a(com.crashlytics.android.v p0, boolean p1)
    {
        p0.v = p1;
        return p1;
    }
    static synthetic java.io.File[] a(com.crashlytics.android.v p1, java.io.FilenameFilter p2)
    {
        return p1.a(p2);
    }
    private java.io.File[] a(java.io.FilenameFilter p2)
    {
        v0 = this.k.listFiles(p2);
        if(v0 == 0) {
            v0 = new java.io.File[0];
        }
        return v0;
    }
    private int b(Thread p10, Throwable p11)
    {
        v2 = 0;
        this.a(p10, this.y, 4, 1);
        v1 = 0;
        v3 = ((this + com.crashlytics.android.h.a(1)) + 0);
        while (v1 < this.w.length) {
            this.a(this.w[v1], this.x.get(v1), v2, v2);
            v3 = (v3 + (this + com.crashlytics.android.h.a(1)));
            v1 = (v1 + 1);
        }
        this.a(p11, 1);
        v0 = ((this + com.crashlytics.android.h.a(2)) + v3);
        v1 = com.crashlytics.android.v.s();
        v0 = (v0 + (v1 + com.crashlytics.android.h.a(3)));
        this.r();
        return (v0 + (this + com.crashlytics.android.h.a(3)));
    }
    private static com.crashlytics.android.d b(String p1)
    {
        if(p1 != 0) {
            v0 = com.crashlytics.android.d.a(p1);
        } else {
            v0 = 0;
        }
        return v0;
    }
    private java.util.concurrent.Future b(java.util.concurrent.Callable p4)
    {
        return this.s.submit(new com.crashlytics.android.I(this, p4));
    }
    static synthetic void b(com.crashlytics.android.v p0)
    {
        p0.m();
        return;
    }
    static synthetic void b(com.crashlytics.android.v p9, java.util.Date p10, Thread p11, Throwable p12)
    {
        p9 = p9.n();
        v8 = p9;
        if(v8 == 0) {
            com.crashlytics.android.internal.v.a().b().a("Crashlytics", "Tried to write a non-fatal exception while no session was open.", 0);
        } else {
            com.crashlytics.android.Crashlytics.a(v8);
            com.crashlytics.android.internal.v.a().b().a("Crashlytics", new StringBuilder("Crashlytics is logging non-fatal exception "").append(p12).append("" from thread ").append(p11.getName()).toString());
            v7 = new com.crashlytics.android.f(p9.k, new StringBuilder().append(v8).append("SessionEvent").append(com.crashlytics.android.internal.ab.a(p9.g.getAndIncrement())).toString());
            v2 = com.crashlytics.android.h.a(v7);
            p9.a(p10, v2, p11, p12, "error", 0);
            com.crashlytics.android.internal.ab.a(v2, "Failed to flush to non-fatal file.");
            com.crashlytics.android.internal.ab.a(v7, "Failed to close non-fatal file output stream.");
            p9.a(v8, 64);
        }
        return;
    }
    static synthetic void c(com.crashlytics.android.v p0)
    {
        p0.l();
        return;
    }
    private void c(String p19)
    {
        v16 = new com.crashlytics.android.f;
        v16(com.crashlytics.android.internal.v.a().h(), new StringBuilder().append(p19).append("SessionDevice").toString());
        v15 = com.crashlytics.android.h.a(v16);
        v1 = new android.os.StatFs(android.os.Environment.getDataDirectory().getPath());
        v2 = com.crashlytics.android.internal.ab.b();
        v4 = com.crashlytics.android.v.b(android.os.Build.MODEL);
        v13 = com.crashlytics.android.v.b(android.os.Build.MANUFACTURER);
        v14 = com.crashlytics.android.v.b(android.os.Build.PRODUCT);
        v5 = Runtime.getRuntime().availableProcessors();
        v6 = com.crashlytics.android.internal.ab.c();
        v8 = (((long) v1.getBlockCount()) * ((long) v1.getBlockSize()));
        v10 = com.crashlytics.android.internal.ab.d();
        v1 = com.crashlytics.android.Crashlytics.getInstance().b();
        v3 = com.crashlytics.android.d.a(v1.e());
        v11 = v1.f();
        v12 = com.crashlytics.android.internal.ab.f();
        v15.g(9, 2);
        v15.b(this.a(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14));
        v15.a(1, v3);
        v15.b(3, v2);
        v15.a(4, v4);
        v15.a(5, v5);
        v15.a(6, v6);
        v15.a(7, v8);
        v15.a(10, v10);
        v4 = v11.entrySet().iterator();
        while (v4.hasNext() != 0) {
            v3 = v4.next();
            v15.g(11, 2);
            v15.b(com.crashlytics.android.v.a(v3.getKey(), v3.getValue()));
            v15.b(1, v3.getKey().f);
            v15.a(2, com.crashlytics.android.d.a(v3.getValue()));
        }
        v15.a(12, v12);
        if(v13 != 0) {
            v15.a(13, v13);
        }
        if(v14 != 0) {
            v15.a(14, v14);
        }
        com.crashlytics.android.internal.ab.a(v15, "Failed to flush session device info.");
        com.crashlytics.android.internal.ab.a(v16, "Failed to close session device file.");
        return;
    }
    static synthetic com.crashlytics.android.internal.aq d(com.crashlytics.android.v p1)
    {
        return p1.u;
    }
    static synthetic boolean e(com.crashlytics.android.v p1)
    {
        return p1.k();
    }
    static synthetic java.io.File f(com.crashlytics.android.v p1)
    {
        return p1.l;
    }
    static synthetic java.util.regex.Pattern i()
    {
        return com.crashlytics.android.v.d;
    }
    static synthetic java.util.Map j()
    {
        return com.crashlytics.android.v.e;
    }
    private boolean k()
    {
        v0 = 0;
        if(com.crashlytics.android.internal.ab.a(com.crashlytics.android.Crashlytics.getInstance().getContext(), "com.crashlytics.CollectCustomLogs", 1) != 0) {
            com.crashlytics.android.internal.ab.a(this.u, new StringBuilder("Could not close log file: ").append(this.u).toString());
            v2 = new java.io.File(com.crashlytics.android.internal.v.a().h(), new StringBuilder("crashlytics-userlog-").append(java.util.UUID.randomUUID().toString()).append(".temp").toString());
            this.u = new com.crashlytics.android.internal.aq(v2);
            v2.delete();
            v0 = 1;
        } else {
            com.crashlytics.android.internal.v.a().b().a("Crashlytics", "Preferences requested not to collect custom logs. Aborting log file creation.");
        }
        return v0;
    }
    private void l()
    {
        v0 = new java.util.Date();
        v4 = new com.crashlytics.android.e(com.crashlytics.android.Crashlytics.getInstance().b()).toString();
        com.crashlytics.android.internal.v.a().b().a("Crashlytics", new StringBuilder("Opening an new session with ID ").append(v4).toString());
        v3 = new com.crashlytics.android.f(com.crashlytics.android.internal.v.a().h(), new StringBuilder().append(v4).append("BeginSession").toString());
        v1 = com.crashlytics.android.h.a(v3);
        v1.a(1, com.crashlytics.android.d.a(this.n));
        v1.a(2, com.crashlytics.android.d.a(v4));
        v1.a(3, (v0.getTime() / 1000.0));
        com.crashlytics.android.internal.ab.a(v1, "Failed to flush to session begin file.");
        com.crashlytics.android.internal.ab.a(v3, "Failed to close begin session file.");
        v3 = new com.crashlytics.android.f(com.crashlytics.android.internal.v.a().h(), new StringBuilder().append(v4).append("SessionApp").toString());
        v1 = com.crashlytics.android.h.a(v3);
        v0 = com.crashlytics.android.d.a(com.crashlytics.android.Crashlytics.d());
        v5 = com.crashlytics.android.d.a(com.crashlytics.android.Crashlytics.g());
        v6 = com.crashlytics.android.d.a(com.crashlytics.android.Crashlytics.f());
        com.crashlytics.android.d.a(com.crashlytics.android.Crashlytics.h());
        com.crashlytics.android.d.a(com.crashlytics.android.Crashlytics.getInstance().getContext().getPackageCodePath());
        v7 = com.crashlytics.android.d.a(com.crashlytics.android.Crashlytics.getInstance().b().b());
        v8 = com.crashlytics.android.internal.ai.a(com.crashlytics.android.Crashlytics.e()).a();
        v1.g(7, 2);
        v9 = (((com.crashlytics.android.h.b(1, v0) + 0) + com.crashlytics.android.h.b(2, v5)) + com.crashlytics.android.h.b(3, v6));
        v10 = com.crashlytics.android.v.q();
        v1.b((((v9 + (v10 + com.crashlytics.android.h.a(5))) + com.crashlytics.android.h.b(6, v7)) + com.crashlytics.android.h.e(10, v8)));
        v1.a(1, v0);
        v1.a(2, v5);
        v1.a(3, v6);
        v1.g(5, 2);
        v1.b(com.crashlytics.android.v.q());
        v1.a(1, com.crashlytics.android.internal.r.a(com.crashlytics.android.Crashlytics.getInstance().getContext(), 0));
        v1.a(6, v7);
        v1.b(10, v8);
        com.crashlytics.android.internal.ab.a(v1, "Failed to flush to session app file.");
        com.crashlytics.android.internal.ab.a(v3, "Failed to close session app file.");
        v1 = new com.crashlytics.android.f(com.crashlytics.android.internal.v.a().h(), new StringBuilder().append(v4).append("SessionOS").toString());
        v2 = com.crashlytics.android.h.a(v1);
        v0 = com.crashlytics.android.d.a(android.os.Build$VERSION.RELEASE);
        v3 = com.crashlytics.android.d.a(android.os.Build$VERSION.CODENAME);
        v5 = com.crashlytics.android.internal.ab.e();
        v2.g(8, 2);
        v2.b(((((com.crashlytics.android.h.e(1, 3) + 0) + com.crashlytics.android.h.b(2, v0)) + com.crashlytics.android.h.b(3, v3)) + com.crashlytics.android.h.b(4, v5)));
        v2.b(1, 3);
        v2.a(2, v0);
        v2.a(3, v3);
        v2.a(4, v5);
        com.crashlytics.android.internal.ab.a(v2, "Failed to flush to session OS file.");
        com.crashlytics.android.internal.ab.a(v1, "Failed to close session OS file.");
        this.c(v4);
        return;
    }
    private void m()
    {
        v2 = new java.util.HashSet();
        this.o();
        java.util.Arrays.sort(this, com.crashlytics.android.v.b);
        v4 = Math.min(8, this.length);
        v1 = 0;
        while (v1 < v4) {
            v2.add(com.crashlytics.android.v.a(this[v1]));
            v1 = (v1 + 1);
        }
        v3 = this.a(new com.crashlytics.android.Q(0));
        v4 = v3.length;
        v1 = 0;
        while (v1 < v4) {
            v5 = v3[v1];
            v6 = v5.getName();
            v7 = com.crashlytics.android.v.d.matcher(v6);
            v7.matches();
            if(v2.contains(v7.group(1)) == 0) {
                com.crashlytics.android.internal.v.a().b().a("Crashlytics", new StringBuilder("Trimming open session file: ").append(v6).toString());
                v5.delete();
            }
            v1 = (v1 + 1);
        }
        this.n();
        if(this == 0) {
            com.crashlytics.android.internal.v.a().b().a("Crashlytics", "Unable to close session. Settings are not loaded.");
        } else {
            v3 = new com.crashlytics.android.f(this.k, new StringBuilder().append(this).append("SessionUser").toString());
            v2 = com.crashlytics.android.h.a(v3);
            v1 = com.crashlytics.android.Crashlytics.getInstance().m();
            v4 = com.crashlytics.android.Crashlytics.getInstance().o();
            v6 = com.crashlytics.android.Crashlytics.getInstance().n();
            if((v1 != 0) || ((v4 != 0) || (v6 != 0))) {
                if(v1 == 0) {
                    v1 = "";
                }
                v7 = com.crashlytics.android.d.a(v1);
                if(v4 != 0) {
                    v5 = com.crashlytics.android.d.a(v4);
                } else {
                    v5 = 0;
                }
                if(v6 != 0) {
                    v4 = com.crashlytics.android.d.a(v6);
                } else {
                    v4 = 0;
                }
                v1 = (com.crashlytics.android.h.b(1, v7) + 0);
                if(v5 != 0) {
                    v1 = (v1 + com.crashlytics.android.h.b(2, v5));
                }
                if(v4 != 0) {
                    v1 = (v1 + com.crashlytics.android.h.b(3, v4));
                }
                v2.g(6, 2);
                v2.b(v1);
                v2.a(1, v7);
                if(v5 != 0) {
                    v2.a(2, v5);
                }
                if(v4 != 0) {
                    v2.a(3, v4);
                }
                com.crashlytics.android.internal.ab.a(v2, "Failed to flush session user file.");
                com.crashlytics.android.internal.ab.a(v3, "Failed to close session user file.");
            } else {
                com.crashlytics.android.internal.ab.a(v2, "Failed to flush session user file.");
                com.crashlytics.android.internal.ab.a(v3, "Failed to close session user file.");
            }
            v1 = com.crashlytics.android.Crashlytics.getInstance().r();
            if(v1 == 0) {
                com.crashlytics.android.internal.v.a().b().a("Crashlytics", "No session begin files found.");
            } else {
                v8 = v1.a;
                com.crashlytics.android.internal.v.a().b().a("Crashlytics", "Closing all open sessions.");
                this.o();
                if((this != 0) && (this.length > 0)) {
                    v6 = 0;
                    while (v6 < this.length) {
                        v11 = this[v6];
                        v12 = com.crashlytics.android.v.a(v11);
                        com.crashlytics.android.internal.v.a().b().a("Crashlytics", new StringBuilder("Closing session: ").append(v12).toString());
                        com.crashlytics.android.internal.v.a().b().a("Crashlytics", new StringBuilder("Collecting session parts for ID ").append(v12).toString());
                        v13 = this.a(new com.crashlytics.android.R(new StringBuilder().append(v12).append("SessionCrash").toString()));
                        if((v13 == 0) || (v13.length <= 0)) {
                            v2 = 0;
                        } else {
                            v2 = 1;
                        }
                        v1 = com.crashlytics.android.internal.v.a().b();
                        v7 = new Object[2];
                        v7[0] = v12;
                        v7[1] = Boolean.valueOf(v2);
                        v1.a("Crashlytics", String.format(java.util.Locale.US, "Session %s has fatal exception: %s", v7));
                        v7 = this.a(new com.crashlytics.android.R(new StringBuilder().append(v12).append("SessionEvent").toString()));
                        if((v7 == 0) || (v7.length <= 0)) {
                            v1 = 0;
                        } else {
                            v1 = 1;
                        }
                        v3 = com.crashlytics.android.internal.v.a().b();
                        v15 = new Object[2];
                        v15[0] = v12;
                        v15[1] = Boolean.valueOf(v1);
                        v3.a("Crashlytics", String.format(java.util.Locale.US, "Session %s has non-fatal exceptions: %s", v15));
                        if((v2 == 0) && (v1 == 0)) {
                            com.crashlytics.android.internal.v.a().b().a("Crashlytics", new StringBuilder("No events present for session ID ").append(v12).toString());
                        } else {
                            v4 = new com.crashlytics.android.f(this.k, v12);
                            v3 = com.crashlytics.android.h.a(v4);
                            com.crashlytics.android.internal.v.a().b().a("Crashlytics", new StringBuilder("Collecting SessionStart data for session ID ").append(v12).toString());
                            com.crashlytics.android.v.a(v3, v11);
                            v3.a(4, (new java.util.Date().getTime() / 1000.0));
                            v3.a(5, v2);
                            this.a(v3, v12);
                            if(v1 != 0) {
                                if(v7.length <= v8) {
                                    v1 = v7;
                                } else {
                                    v1 = com.crashlytics.android.internal.v.a().b();
                                    v14 = new Object[1];
                                    v14[0] = Integer.valueOf(v8);
                                    v1.a("Crashlytics", String.format(java.util.Locale.US, "Trimming down to %d logged exceptions.", v14));
                                    this.a(v12, v8);
                                    v1 = this.a(new com.crashlytics.android.R(new StringBuilder().append(v12).append("SessionEvent").toString()));
                                }
                                this.a(v3, v1, v12);
                            }
                            if(v2 != 0) {
                                com.crashlytics.android.v.a(v3, v13[0]);
                            }
                            v3.a(11, 1);
                            v3.b(12, 3);
                            com.crashlytics.android.internal.ab.a(v3, "Error flushing session file stream");
                            com.crashlytics.android.internal.ab.a(v4, "Failed to close CLS file");
                        }
                        com.crashlytics.android.internal.v.a().b().a("Crashlytics", new StringBuilder("Removing session part files for ID ").append(v12).toString());
                        this.a(v12);
                        v6 = (v6 + 1);
                    }
                }
            }
        }
        return;
    }
    private String n()
    {
        this.a(new com.crashlytics.android.R("BeginSession"));
        java.util.Arrays.sort(this, com.crashlytics.android.v.b);
        if(this.length <= 0) {
            v0 = 0;
        } else {
            v0 = com.crashlytics.android.v.a(this[0]);
        }
        return v0;
    }
    private java.io.File[] o()
    {
        this.a(new com.crashlytics.android.R("BeginSession"));
        return this;
    }
    private void p()
    {
        this.a(com.crashlytics.android.v.a);
        v0 = 0;
        while (v0 < this.length) {
            v3 = this[v0];
            com.crashlytics.android.internal.v.a().b().a("Crashlytics", "Attempting to send crash report at time of crash...");
            new Thread(new com.crashlytics.android.D(this, v3), "Crashlytics Report Uploader").start();
            v0 = (v0 + 1);
        }
        return;
    }
    private static int q()
    {
        return com.crashlytics.android.Crashlytics.getInstance().getContext();
    }
    private int r()
    {
        v0 = (((com.crashlytics.android.h.b(1, 0.0) + 0) + com.crashlytics.android.h.b(2, 0.0)) + com.crashlytics.android.h.b(3, this.q));
        if(this.r != 0) {
            v0 = (v0 + com.crashlytics.android.h.b(4, this.r));
        }
        return v0;
    }
    private static int s()
    {
        return ((com.crashlytics.android.h.b(1, com.crashlytics.android.v.f) + 0) + com.crashlytics.android.h.b(2, com.crashlytics.android.v.f));
    }
    final void a(long p2, String p4)
    {
        this.b(new com.crashlytics.android.x(this, p2, p4));
        return;
    }
    final void a(Thread p3, Throwable p4)
    {
        this.a(new com.crashlytics.android.P(this, new java.util.Date(), p3, p4));
        return;
    }
    final void a(java.io.File[] p12)
    {
        v2 = new java.io.File(com.crashlytics.android.internal.v.a().h(), "invalidClsFiles");
        if(v2.exists() != 0) {
            if(v2.isDirectory() != 0) {
                v3 = v2.listFiles();
                v4 = v3.length;
                v0 = 0;
                while (v0 < v4) {
                    v3[v0].delete();
                    v0 = (v0 + 1);
                }
            }
            v2.delete();
        }
        v3 = p12.length;
        v2 = 0;
        while (v2 < v3) {
            v0 = p12[v2];
            com.crashlytics.android.internal.v.a().b().a("Crashlytics", new StringBuilder("Found invalid session part file: ").append(v0).toString());
            v0 = com.crashlytics.android.v.a(v0);
            v4 = new com.crashlytics.android.F(this, v0);
            com.crashlytics.android.internal.v.a().b().a("Crashlytics", new StringBuilder("Deleting all part files for invalid session: ").append(v0).toString());
            this.a(v4);
            v0 = 0;
            while (v0 < this.length) {
                v6 = this[v0];
                com.crashlytics.android.internal.v.a().b().a("Crashlytics", new StringBuilder("Deleting session file: ").append(v6).toString());
                v6.delete();
                v0 = (v0 + 1);
            }
            v2 = (v2 + 1);
        }
        return;
    }
    final boolean a()
    {
        return this.m.get();
    }
    final boolean b()
    {
        this.a(new com.crashlytics.android.O(this));
        return this.booleanValue();
    }
    final void c()
    {
        this.b(new com.crashlytics.android.z(this));
        return;
    }
    final void d()
    {
        this.b(new com.crashlytics.android.A(this));
        return;
    }
    final void e()
    {
        this.b(new com.crashlytics.android.B(this));
        return;
    }
    final boolean f()
    {
        this.a(new com.crashlytics.android.C(this));
        return this.booleanValue();
    }
    final boolean g()
    {
        this.o();
        if(this.length <= 0) {
            v0 = 0;
        } else {
            v0 = 1;
        }
        return v0;
    }
    final void h()
    {
        this.a(new com.crashlytics.android.E(this));
        return;
    }
    public final synchronized void uncaughtException(Thread p5, Throwable p6)
    {
        synchronized(this) {
            this.m.set(1);
            com.crashlytics.android.internal.v.a().b().a("Crashlytics", new StringBuilder("Crashlytics is handling uncaught exception "").append(p6).append("" from thread ").append(p5.getName()).toString());
            if(this.h.getAndSet(1) == 0) {
                com.crashlytics.android.internal.v.a().b().a("Crashlytics", "Unregistering power receivers.");
                com.crashlytics.android.Crashlytics.getInstance().getContext().unregisterReceiver(this.p);
                com.crashlytics.android.Crashlytics.getInstance().getContext().unregisterReceiver(this.o);
            }
            this.a(new com.crashlytics.android.N(this, new java.util.Date(), p5, p6));
            com.crashlytics.android.internal.v.a().b().a("Crashlytics", "Crashlytics completed exception processing. Invoking default exception handler.");
            this.j.uncaughtException(p5, p6);
            this.m.set(0);
        }
        return;
    }
     w()
    {
        return;
    }
    public final boolean accept(java.io.File p3, String p4)
    {
        if((p4.length() != 39) || (p4.endsWith(".cls") == 0)) {
            v0 = 0;
        } else {
            v0 = 1;
        }
        return v0;
    }
     x(com.crashlytics.android.v p1, long p2, String p4)
    {
        this.c = p1;
        this.a = p2;
        this.b = p4;
        return;
    }
    public final synthetic Object call()
    {
        if(com.crashlytics.android.v.a(this.c).get() == 0) {
            if(com.crashlytics.android.v.d(this.c) == 0) {
                com.crashlytics.android.v.e(this.c);
            }
            com.crashlytics.android.v.a(com.crashlytics.android.v.d(this.c), 9.1835496158e-41, this.a, this.b);
        }
        return 0;
    }
     z(com.crashlytics.android.v p1)
    {
        this.a = p1;
        return;
    }
    public final synthetic Object call()
    {
        if(this.a.g() == 0) {
            com.crashlytics.android.v.c(this.a);
        }
        return 0;
    }
    public AbstractWebViewActivity()
    {
        return;
    }
    public void onBackPressed()
    {
        this.finish();
        this.overridePendingTransition(1.75458095444e+38, 1.75458115726e+38);
        return;
    }
    protected final void onCreate(android.os.Bundle p7)
    {
        super.onCreate(p7);
        this.defineResources();
        this.setContentView(this.m_contentViewRes);
        v3 = this.findViewById(1.80775737593e+38);
        if(this.getBaseContext().getResources().getConfiguration().locale.equals(new java.util.Locale("hr")) == 0) {
            v3.loadUrl(this.m_engFilePath);
        } else {
            v3.loadUrl(this.m_croFilePath);
        }
        v3.setBackgroundColor(0);
        v3.setBackgroundResource(this.m_webViewBackgroundRes);
        return;
    }
    protected final void setResources(int p1, int p2, String p3, String p4)
    {
        this.m_contentViewRes = p1;
        this.m_webViewBackgroundRes = p2;
        this.m_croFilePath = p3;
        this.m_engFilePath = p4;
        return;
    }
     BranchesActivity$1(net.croz.android.croair.BranchesActivity p1, android.content.Context p2, int p3, Integer[] p4, Integer[] p5)
    {
        this.this$0 = p1;
        this.val$branchesArray = p5;
        this(p2, p3, p4);
        return;
    }
    public android.view.View getView(int p7, android.view.View p8, android.view.ViewGroup p9)
    {
        v3 = this.this$0.getLayoutInflater().inflate(1.74128948577e+38, 0);
        if(p7 == 0) {
            v3.setBackgroundResource(1.72800024818e+38);
        }
        if(p7 == (this.val$branchesArray.length - 1)) {
            v3.setBackgroundResource(1.72799821994e+38);
        }
        v3.findViewById(1.80775413075e+38).setText(this.this$0.getResources().getStringArray(this.val$branchesArray[p7].intValue())[0]);
        return v3;
    }
     BranchesActivity$2(net.croz.android.croair.BranchesActivity p1, Integer[] p2)
    {
        this.this$0 = p1;
        this.val$branchesArray = p2;
        return;
    }
    public void onItemClick(android.widget.AdapterView p4, android.view.View p5, int p6, long p7)
    {
        net.croz.android.croair.BranchesActivity.access$0(this.this$0).setDisplayedChild(1);
        this.this$0.findViewById(1.80775149404e+38).setAdapter(net.croz.android.croair.BranchesActivity.access$1(this.this$0, this.val$branchesArray[p6].intValue()));
        return;
    }
    public BranchesActivity()
    {
        return;
    }
    static synthetic android.widget.ViewFlipper access$0(net.croz.android.croair.BranchesActivity p1)
    {
        return p1.m_viewFlipper;
    }
    static synthetic android.widget.ListAdapter access$1(net.croz.android.croair.BranchesActivity p1, int p2)
    {
        return p1.setupBranchDetailsView(p2);
    }
    private net.croz.android.croair.dto.BranchDetailsListDto createBranchListItem(java.util.List p4)
    {
        v0 = new net.croz.android.croair.dto.BranchDetailsListDto();
        v1 = p4.listIterator();
        v0.setName(v1.next());
        v0.setAddress(v1.next());
        v0.setPhone(v1.next());
        v0.setFax(v1.next());
        v0.setEmail(v1.next());
        v0.setMapLocation(v1.next());
        v0.setTimeLable(v1.next());
        v0.setTime(v1.next());
        return v0;
    }
    private android.widget.ListAdapter setupBranchDetailsView(int p9)
    {
        v0 = java.util.Arrays.asList(this.getResources().getStringArray(p9));
        v2 = (v0.size() / 8);
        v1 = new java.util.ArrayList(v2);
        this.findViewById(1.80775129121e+38).setText(String.valueOf(v2));
        this.findViewById(1.80775088556e+38).setText(v0.get(0));
        v4 = 0;
        while (v4 < v2) {
            this.createBranchListItem(v0.subList(((v4 * 8) + 1), (((v4 * 8) + 8) + 1)));
            v1.add(this);
            v4 = (v4 + 1);
        }
        return new net.croz.android.croair.adapters.BranchDetailsListAdapter(this, v1);
    }
    public final void onBackPressed()
    {
        if(this.m_viewFlipper.getDisplayedChild() != 0) {
            this.m_viewFlipper.showPrevious();
        } else {
            this.finish();
            this.overridePendingTransition(1.75458095444e+38, 1.75458115726e+38);
        }
        return;
    }
    protected final void onCreate(android.os.Bundle p10)
    {
        super.onCreate(p10);
        this.setContentView(1.74129354226e+38);
        v6 = this.getResources().obtainTypedArray(1.79446144514e+38);
        v4 = new Integer[v6.length()];
        v8 = 0;
        while (v8 < v6.length()) {
            v4[v8] = Integer.valueOf(v6.getResourceId(v8, 0));
            v8 = (v8 + 1);
        }
        this.m_viewFlipper = this.findViewById(1.80778496001e+38);
        this.m_viewFlipper.addView(android.view.View.inflate(this, 1.7412888773e+38, 0), 0);
        this.m_viewFlipper.addView(android.view.View.inflate(this, 1.74128908013e+38, 0), 1);
        this.m_viewFlipper.setDisplayedChild(0);
        v7 = this.findViewById(1.80775047992e+38);
        v7.setAdapter(new net.croz.android.croair.BranchesActivity$1(this, this, 1.74128948577e+38, v4, v4));
        v7.setOnItemClickListener(new net.croz.android.croair.BranchesActivity$2(this, v4));
        return;
    }
    public BuildConfig()
    {
        return;
    }
    public ContactActivity()
    {
        return;
    }
    public final void onBackPressed()
    {
        this.finish();
        this.overridePendingTransition(1.75458095444e+38, 1.75458115726e+38);
        return;
    }
    protected final void onCreate(android.os.Bundle p2)
    {
        super.onCreate(p2);
        this.setContentView(1.7412896886e+38);
        return;
    }
     FlightStatusActivity$1$1$1(net.croz.android.croair.FlightStatusActivity$1$1 p1, android.widget.EditText p2)
    {
        this.this$2 = p1;
        this.val$flightNumberInput = p2;
        return;
    }
    public void onClick(android.content.DialogInterface p3, int p4)
    {
        this.val$flightNumberInput.setText("");
        p3.cancel();
        return;
    }
     FlightStatusActivity$1(net.croz.android.croair.FlightStatusActivity p1, android.widget.EditText p2)
    {
        this.this$0 = p1;
        this.val$flightNumberInput = p2;
        return;
    }
    static synthetic net.croz.android.croair.FlightStatusActivity access$0(net.croz.android.croair.FlightStatusActivity$1 p1)
    {
        return p1.this$0;
    }
    public void onClick(android.view.View p7)
    {
        if("".equals(this.val$flightNumberInput.getText().toString()) == 0) {
            v1 = new Void[0];
            new net.croz.android.croair.network.FlightStatusService(this.this$0, this.val$flightNumberInput.getText().toString(), net.croz.android.croair.FlightStatusActivity.access$0(this.this$0), new net.croz.android.croair.FlightStatusActivity$1$1(this, this.val$flightNumberInput)).execute(v1);
        }
        return;
    }
     FlightStatusActivity$2(net.croz.android.croair.FlightStatusActivity p1, android.widget.LinearLayout p2, android.view.animation.Animation p3, android.widget.LinearLayout p4, android.view.animation.Animation p5, android.widget.ImageButton p6, android.widget.ImageButton p7)
    {
        this.this$0 = p1;
        this.val$departureLayout = p2;
        this.val$anim_left = p3;
        this.val$arrivalLayout = p4;
        this.val$anim_right = p5;
        this.val$previousButton = p6;
        this.val$nextButton = p7;
        return;
    }
    public void onClick(android.view.View p4)
    {
        if(net.croz.android.croair.FlightStatusActivity.access$7(this.this$0) < (net.croz.android.croair.FlightStatusActivity.access$2(this.this$0).size() - 1)) {
            v0 = this.this$0;
            net.croz.android.croair.FlightStatusActivity.access$8(v0, (net.croz.android.croair.FlightStatusActivity.access$7(v0) + 1));
            this.val$departureLayout.startAnimation(this.val$anim_left);
            this.val$arrivalLayout.startAnimation(this.val$anim_right);
            net.croz.android.croair.FlightStatusActivity.access$9(this.this$0);
            net.croz.android.croair.FlightStatusActivity.access$10(this.this$0, this.val$previousButton, this.val$nextButton);
        }
        return;
    }
     FlightStatusActivity$3(net.croz.android.croair.FlightStatusActivity p1, android.widget.LinearLayout p2, android.view.animation.Animation p3, android.widget.LinearLayout p4, android.view.animation.Animation p5, android.widget.ImageButton p6, android.widget.ImageButton p7)
    {
        this.this$0 = p1;
        this.val$departureLayout = p2;
        this.val$anim_left = p3;
        this.val$arrivalLayout = p4;
        this.val$anim_right = p5;
        this.val$previousButton = p6;
        this.val$nextButton = p7;
        return;
    }
    public void onClick(android.view.View p4)
    {
        if(net.croz.android.croair.FlightStatusActivity.access$7(this.this$0) > 0) {
            v0 = this.this$0;
            net.croz.android.croair.FlightStatusActivity.access$8(v0, (net.croz.android.croair.FlightStatusActivity.access$7(v0) - 1));
            this.val$departureLayout.startAnimation(this.val$anim_left);
            this.val$arrivalLayout.startAnimation(this.val$anim_right);
            net.croz.android.croair.FlightStatusActivity.access$9(this.this$0);
            net.croz.android.croair.FlightStatusActivity.access$10(this.this$0, this.val$previousButton, this.val$nextButton);
        }
        return;
    }
     FlightStatusActivity$4(net.croz.android.croair.FlightStatusActivity p1, android.widget.Button p2, android.widget.Button p3, android.widget.Button p4, boolean p5, String p6)
    {
        this.this$0 = p1;
        this.val$yesterdayButton = p2;
        this.val$todayButton = p3;
        this.val$tomorrowButton = p4;
        this.val$p_firstScreenFlag = p5;
        this.val$p_flightNumber = p6;
        return;
    }
    public void onClick(android.view.View p5)
    {
        this.val$yesterdayButton.setBackgroundResource(1.72800775267e+38);
        this.val$todayButton.setBackgroundResource(1.7280063329e+38);
        this.val$tomorrowButton.setBackgroundResource(1.72800673855e+38);
        net.croz.android.croair.FlightStatusActivity.access$12(this.this$0, net.croz.android.croair.FlightStatusActivity.access$11(this.this$0).get(0));
        if(this.val$p_firstScreenFlag) {
            v0 = net.croz.android.croair.FlightStatusActivity.access$13(this.this$0, this.val$p_flightNumber, net.croz.android.croair.FlightStatusActivity.access$0(this.this$0));
            v1 = new Void[0];
            v0.execute(v1);
        }
        return;
    }
     FlightStatusActivity$5(net.croz.android.croair.FlightStatusActivity p1, android.widget.Button p2, android.widget.Button p3, android.widget.Button p4, boolean p5, String p6)
    {
        this.this$0 = p1;
        this.val$yesterdayButton = p2;
        this.val$todayButton = p3;
        this.val$tomorrowButton = p4;
        this.val$p_firstScreenFlag = p5;
        this.val$p_flightNumber = p6;
        return;
    }
    public void onClick(android.view.View p4)
    {
        this.val$yesterdayButton.setBackgroundResource(1.72800754985e+38);
        this.val$todayButton.setBackgroundResource(1.72800653573e+38);
        this.val$tomorrowButton.setBackgroundResource(1.72800673855e+38);
        net.croz.android.croair.FlightStatusActivity.access$12(this.this$0, net.croz.android.croair.FlightStatusActivity.access$11(this.this$0).get(1));
        if(this.val$p_firstScreenFlag) {
            v0 = net.croz.android.croair.FlightStatusActivity.access$13(this.this$0, this.val$p_flightNumber, net.croz.android.croair.FlightStatusActivity.access$0(this.this$0));
            v1 = new Void[0];
            v0.execute(v1);
        }
        return;
    }
     FlightStatusActivity$6(net.croz.android.croair.FlightStatusActivity p1, android.widget.Button p2, android.widget.Button p3, android.widget.Button p4, boolean p5, String p6)
    {
        this.this$0 = p1;
        this.val$yesterdayButton = p2;
        this.val$todayButton = p3;
        this.val$tomorrowButton = p4;
        this.val$p_firstScreenFlag = p5;
        this.val$p_flightNumber = p6;
        return;
    }
    public void onClick(android.view.View p4)
    {
        this.val$yesterdayButton.setBackgroundResource(1.72800754985e+38);
        this.val$todayButton.setBackgroundResource(1.7280063329e+38);
        this.val$tomorrowButton.setBackgroundResource(1.72800694137e+38);
        net.croz.android.croair.FlightStatusActivity.access$12(this.this$0, net.croz.android.croair.FlightStatusActivity.access$11(this.this$0).get(2));
        if(this.val$p_firstScreenFlag) {
            v0 = net.croz.android.croair.FlightStatusActivity.access$13(this.this$0, this.val$p_flightNumber, net.croz.android.croair.FlightStatusActivity.access$0(this.this$0));
            v1 = new Void[0];
            v0.execute(v1);
        }
        return;
    }
    public FlightStatusActivity()
    {
        return;
    }
    static synthetic java.util.Date access$0(net.croz.android.croair.FlightStatusActivity p1)
    {
        return p1.m_date;
    }
    static synthetic void access$1(net.croz.android.croair.FlightStatusActivity p0, java.util.List p1)
    {
        p0.m_flightStatusArray = p1;
        return;
    }
    static synthetic void access$10(net.croz.android.croair.FlightStatusActivity p0, android.widget.ImageButton p1, android.widget.ImageButton p2)
    {
        p0.setArrowButtonsFadeColor(p1, p2);
        return;
    }
    static synthetic java.util.List access$11(net.croz.android.croair.FlightStatusActivity p1)
    {
        return p1.m_dates;
    }
    static synthetic void access$12(net.croz.android.croair.FlightStatusActivity p0, java.util.Date p1)
    {
        p0.m_date = p1;
        return;
    }
    static synthetic net.croz.android.croair.network.FlightStatusService access$13(net.croz.android.croair.FlightStatusActivity p1, String p2, java.util.Date p3)
    {
        return p1.changeServiceDate(p2, p3);
    }
    static synthetic java.util.List access$2(net.croz.android.croair.FlightStatusActivity p1)
    {
        return p1.m_flightStatusArray;
    }
    static synthetic android.widget.ViewFlipper access$3(net.croz.android.croair.FlightStatusActivity p1)
    {
        return p1.m_viewFlipper;
    }
    static synthetic void access$4(net.croz.android.croair.FlightStatusActivity p0, String p1)
    {
        p0.prepareResultScreenAfterFetchingData(p1);
        return;
    }
    static synthetic void access$5(net.croz.android.croair.FlightStatusActivity p0)
    {
        p0.stepChanger();
        return;
    }
    static synthetic void access$6(net.croz.android.croair.FlightStatusActivity p0, String p1, boolean p2)
    {
        p0.setupDaysButtons(p1, p2);
        return;
    }
    static synthetic int access$7(net.croz.android.croair.FlightStatusActivity p1)
    {
        return p1.m_step;
    }
    static synthetic void access$8(net.croz.android.croair.FlightStatusActivity p0, int p1)
    {
        p0.m_step = p1;
        return;
    }
    static synthetic void access$9(net.croz.android.croair.FlightStatusActivity p0)
    {
        p0.statusDataInsertion();
        return;
    }
    private net.croz.android.croair.network.FlightStatusService changeServiceDate(String p3, java.util.Date p4)
    {
        return new net.croz.android.croair.network.FlightStatusService(this, p3, p4, new net.croz.android.croair.FlightStatusActivity$7(this, p3));
    }
    private void prepareResultScreenAfterFetchingData(String p9)
    {
        this.m_step = 0;
        v4 = this.m_flightStatusArray.size();
        v0 = this.findViewById(1.80776021547e+38);
        v2 = this.findViewById(1.80776082394e+38);
        v3 = this.findViewById(1.80776122959e+38);
        v1 = this.findViewById(1.80776143242e+38);
        v0.setText(p9);
        v2.setText(net.croz.android.croair.utils.DateFormater.formatDate(this.m_date, 0));
        v3.setText(new StringBuilder(String.valueOf((this.m_step + 1))).append("/").append(v4).toString());
        v1.setText(new StringBuilder(String.valueOf(this.m_flightStatusArray.get(0).getOrigin())).append(" - ").append(this.m_flightStatusArray.get((v4 - 1)).getDestination()).toString());
        this.statusDataInsertion();
        return;
    }
    private void setArrowButtonsFadeColor(android.widget.ImageButton p3, android.widget.ImageButton p4)
    {
        p4.setColorFilter(0);
        p3.setColorFilter(0);
        if(this.m_step == 0) {
            p3.setColorFilter(android.graphics.Color.parseColor("#99555555"));
        }
        if(this.m_step == (this.m_flightStatusArray.size() - 1)) {
            p4.setColorFilter(android.graphics.Color.parseColor("#99555555"));
        }
        return;
    }
    private void setupDaysButtons(String p8, boolean p9)
    {
        if(!p9) {
            v3 = this.findViewById(1.80776711149e+38);
            v4 = this.findViewById(1.80776731432e+38);
            v2 = this.findViewById(1.80776690867e+38);
        } else {
            v3 = this.findViewById(1.80775859288e+38);
            v4 = this.findViewById(1.8077587957e+38);
            v2 = this.findViewById(1.80775839006e+38);
        }
        v2.setBackgroundResource(1.72800754985e+38);
        v3.setBackgroundResource(1.7280063329e+38);
        v4.setBackgroundResource(1.72800673855e+38);
        if(this.m_dates.get(0).compareTo(this.m_date) != 0) {
            if(this.m_dates.get(1).compareTo(this.m_date) != 0) {
                if(this.m_dates.get(2).compareTo(this.m_date) == 0) {
                    v4.setBackgroundResource(1.72800694137e+38);
                }
            } else {
                v3.setBackgroundResource(1.72800653573e+38);
            }
        } else {
            v2.setBackgroundResource(1.72800775267e+38);
        }
        v2.setOnClickListener(new net.croz.android.croair.FlightStatusActivity$4(this, v2, v3, v4, p9, p8));
        v3.setOnClickListener(new net.croz.android.croair.FlightStatusActivity$5(this, v2, v3, v4, p9, p8));
        v4.setOnClickListener(new net.croz.android.croair.FlightStatusActivity$6(this, v2, v3, v4, p9, p8));
        return;
    }
    private void statusDataInsertion()
    {
        v8 = this.findViewById(1.80776122959e+38);
        v4 = this.findViewById(1.80776305501e+38);
        v7 = this.findViewById(1.80776366348e+38);
        v5 = this.findViewById(1.80776427195e+38);
        v0 = this.findViewById(1.80776528607e+38);
        v3 = this.findViewById(1.80776589455e+38);
        v1 = this.findViewById(1.80776650302e+38);
        v6 = this.m_flightStatusArray.get(this.m_step).getOriginExpectedTime();
        if(v6.startsWith("E") == 0) {
            this.findViewById(1.80776406913e+38).setText(this.getResources().getString(1.76787607393e+38));
            v5.setText(v6);
        } else {
            v5.setText(v6.substring(1));
            this.findViewById(1.80776406913e+38).setText(this.getResources().getString(1.76787587111e+38));
        }
        v2 = this.m_flightStatusArray.get(this.m_step).getDestinationExpectedTime();
        if(v2.startsWith("E") == 0) {
            this.findViewById(1.8077663002e+38).setText(this.getResources().getString(1.76787607393e+38));
            v1.setText(v2);
        } else {
            v1.setText(v2.substring(1));
            this.findViewById(1.8077663002e+38).setText(this.getResources().getString(1.76787587111e+38));
        }
        v8.setText(new StringBuilder(String.valueOf((this.m_step + 1))).append("/").append(this.m_flightStatusArray.size()).toString());
        v4.setText(this.m_flightStatusArray.get(this.m_step).getOrigin());
        v7.setText(this.m_flightStatusArray.get(this.m_step).getOriginPlannedTime());
        v0.setText(this.m_flightStatusArray.get(this.m_step).getDestination());
        v3.setText(this.m_flightStatusArray.get(this.m_step).getDestinationPlannedTime());
        return;
    }
    private void stepChanger()
    {
        v3 = android.view.animation.AnimationUtils.loadAnimation(this, 1.75458136008e+38);
        v5 = android.view.animation.AnimationUtils.loadAnimation(this, 1.75458156291e+38);
        v2 = this.m_viewFlipper.findViewById(1.80776224371e+38);
        v4 = this.m_viewFlipper.findViewById(1.80776447478e+38);
        this.statusDataInsertion();
        v7 = this.findViewById(1.80776183807e+38);
        v6 = this.findViewById(1.80776163524e+38);
        this.setArrowButtonsFadeColor(v6, v7);
        if(this.m_flightStatusArray.size() > 1) {
            v7.setOnClickListener(new net.croz.android.croair.FlightStatusActivity$2(this, v2, v3, v4, v5, v6, v7));
            v6.setOnClickListener(new net.croz.android.croair.FlightStatusActivity$3(this, v2, v3, v4, v5, v6, v7));
        }
        return;
    }
    public final void onBackPressed()
    {
        if(this.m_viewFlipper.getDisplayedChild() != 0) {
            this.m_viewFlipper.showPrevious();
            this.m_date = this.m_dates.get(1);
        } else {
            this.finish();
            this.overridePendingTransition(1.75458095444e+38, 1.75458115726e+38);
        }
        return;
    }
    protected final void onCreate(android.os.Bundle p13)
    {
        super.onCreate(p13);
        this.setContentView(1.74129354226e+38);
        v2 = new java.util.Date();
        this.m_dates = new java.util.ArrayList(3);
        this.m_dates.add(new java.util.Date((v2.getTime() - 86400000.0)));
        this.m_dates.add(v2);
        this.m_dates.add(new java.util.Date((v2.getTime() + 86400000.0)));
        this.m_date = v2;
        this.m_viewFlipper = this.findViewById(1.80778496001e+38);
        this.m_viewFlipper.addView(android.view.View.inflate(this, 1.74129009425e+38, 0), 0);
        this.m_viewFlipper.addView(android.view.View.inflate(this, 1.74129029707e+38, 0), 1);
        this.m_viewFlipper.setDisplayedChild(0);
        v0 = this.findViewById(1.80775818723e+38);
        this.setupDaysButtons("", 1);
        this.findViewById(1.80775940418e+38).setOnClickListener(new net.croz.android.croair.FlightStatusActivity$1(this, v0));
        return;
    }
     MainMenuActivity$1(net.croz.android.croair.MainMenuActivity p1)
    {
        this.this$0 = p1;
        return;
    }
    public void onClick(android.view.View p2)
    {
        net.croz.android.croair.MainMenuActivity.access$0(this.this$0).create().show();
        return;
    }
     MainMenuActivity$2(net.croz.android.croair.MainMenuActivity p1)
    {
        this.this$0 = p1;
        return;
    }
    public void onClick(android.view.View p5)
    {
        v0 = new android.content.Intent(this.this$0, net.croz.android.croair.SettingsActivity);
        this.this$0.finish();
        this.this$0.startActivity(v0);
        this.this$0.overridePendingTransition(1.75458095444e+38, 1.75458115726e+38);
        return;
    }
     MainMenuActivity$3(net.croz.android.croair.MainMenuActivity p1, Class p2)
    {
        this.this$0 = p1;
        this.val$p_activityClass = p2;
        return;
    }
    public void onClick(android.view.View p5)
    {
        this.this$0.startActivity(new android.content.Intent(this.this$0, this.val$p_activityClass));
        this.this$0.overridePendingTransition(1.75458095444e+38, 1.75458115726e+38);
        return;
    }
     MainMenuActivity$4(net.croz.android.croair.MainMenuActivity p1)
    {
        this.this$0 = p1;
        return;
    }
    public void onClick(android.content.DialogInterface p4, int p5)
    {
        this.this$0.startActivity(new android.content.Intent("android.intent.action.VIEW", android.net.Uri.parse("http://www.croatiaairlines.com/")));
        return;
    }
     MainMenuActivity$5(net.croz.android.croair.MainMenuActivity p1)
    {
        this.this$0 = p1;
        return;
    }
    public void onClick(android.content.DialogInterface p1, int p2)
    {
        p1.cancel();
        return;
    }
    public MainMenuActivity()
    {
        return;
    }
    static synthetic android.app.AlertDialog$Builder access$0(net.croz.android.croair.MainMenuActivity p1)
    {
        return p1.setUpWebDialog();
    }
    private void bindButtonAndActivity(int p3, Class p4)
    {
        this.findViewById(p3).setOnClickListener(new net.croz.android.croair.MainMenuActivity$3(this, p4));
        return;
    }
    private android.app.AlertDialog$Builder setUpWebDialog()
    {
        v0 = new android.app.AlertDialog$Builder(this);
        v0.setTitle(1.76789047444e+38).setMessage(1.76789067727e+38).setCancelable(0).setPositiveButton(1.7678766824e+38, new net.croz.android.croair.MainMenuActivity$4(this)).setNegativeButton(1.76787688523e+38, new net.croz.android.croair.MainMenuActivity$5(this));
        return v0;
    }
    public final void onCreate(android.os.Bundle p6)
    {
        super.onCreate(p6);
        com.crashlytics.android.Crashlytics.start(this);
        this.setContentView(1.7412904999e+38);
        this.bindButtonAndActivity(1.80776751714e+38, net.croz.android.croair.FlightStatusActivity);
        this.bindButtonAndActivity(1.80776893691e+38, net.croz.android.croair.ScheduleActivity);
        this.bindButtonAndActivity(1.80777035668e+38, net.croz.android.croair.BranchesActivity);
        this.bindButtonAndActivity(1.80776792279e+38, net.croz.android.croair.FlightCheckInActivity);
        this.bindButtonAndActivity(1.80776934256e+38, net.croz.android.croair.TransportActivity);
        this.bindButtonAndActivity(1.8077705595e+38, net.croz.android.croair.LuggageActivity);
        this.bindButtonAndActivity(1.8077697482e+38, net.croz.android.croair.ContactActivity);
        this.bindButtonAndActivity(1.80777035668e+38, net.croz.android.croair.BranchesActivity);
        this.findViewById(1.80776832844e+38).setOnClickListener(new net.croz.android.croair.MainMenuActivity$1(this));
        this.findViewById(1.80777096515e+38).setOnClickListener(new net.croz.android.croair.MainMenuActivity$2(this));
        return;
    }
    public R$anim()
    {
        return;
    }
    public R$array()
    {
        return;
    }
    public R$attr()
    {
        return;
    }
    public R$drawable()
    {
        return;
    }
    public R$id()
    {
        return;
    }
    public R$layout()
    {
        return;
    }
    public R$string()
    {
        return;
    }
    public R$style()
    {
        return;
    }
    public R()
    {
        return;
    }
     ScheduleActivity$10(net.croz.android.croair.ScheduleActivity p1, android.widget.LinearLayout p2, android.view.animation.Animation p3, android.widget.LinearLayout p4, android.view.animation.Animation p5, int p6, android.widget.Button p7, android.widget.Button p8, android.widget.ImageButton p9, android.widget.ImageButton p10)
    {
        this.this$0 = p1;
        this.val$departureLayout = p2;
        this.val$anim_left = p3;
        this.val$arrivalLayout = p4;
        this.val$anim_right = p5;
        this.val$p_position = p6;
        this.val$firstButton = p7;
        this.val$lastButton = p8;
        this.val$previousButton = p9;
        this.val$nextButton = p10;
        return;
    }
    public void onClick(android.view.View p7)
    {
        if(net.croz.android.croair.ScheduleActivity.access$8(this.this$0) > 0) {
            net.croz.android.croair.ScheduleActivity.access$9(this.this$0, 0);
            this.val$departureLayout.startAnimation(this.val$anim_left);
            this.val$arrivalLayout.startAnimation(this.val$anim_right);
            net.croz.android.croair.ScheduleActivity.access$10(this.this$0, this.val$p_position);
            net.croz.android.croair.ScheduleActivity.access$11(this.this$0, this.val$firstButton, this.val$lastButton, this.val$previousButton, this.val$nextButton, this.val$p_position);
        }
        return;
    }
     ScheduleActivity$11(net.croz.android.croair.ScheduleActivity p1, int p2, android.widget.LinearLayout p3, android.view.animation.Animation p4, android.widget.LinearLayout p5, android.view.animation.Animation p6, android.widget.Button p7, android.widget.Button p8, android.widget.ImageButton p9, android.widget.ImageButton p10)
    {
        this.this$0 = p1;
        this.val$p_position = p2;
        this.val$departureLayout = p3;
        this.val$anim_left = p4;
        this.val$arrivalLayout = p5;
        this.val$anim_right = p6;
        this.val$firstButton = p7;
        this.val$lastButton = p8;
        this.val$previousButton = p9;
        this.val$nextButton = p10;
        return;
    }
    public void onClick(android.view.View p8)
    {
        v6 = (net.croz.android.croair.ScheduleActivity.access$4(this.this$0).get(this.val$p_position).getTransfers().intValue() - 1);
        if(net.croz.android.croair.ScheduleActivity.access$8(this.this$0) < v6) {
            net.croz.android.croair.ScheduleActivity.access$9(this.this$0, v6);
            this.val$departureLayout.startAnimation(this.val$anim_left);
            this.val$arrivalLayout.startAnimation(this.val$anim_right);
            net.croz.android.croair.ScheduleActivity.access$10(this.this$0, this.val$p_position);
            net.croz.android.croair.ScheduleActivity.access$11(this.this$0, this.val$firstButton, this.val$lastButton, this.val$previousButton, this.val$nextButton, this.val$p_position);
        }
        return;
    }
     ScheduleActivity$1(net.croz.android.croair.ScheduleActivity p1, android.widget.AutoCompleteTextView p2, android.widget.AutoCompleteTextView p3)
    {
        this.this$0 = p1;
        this.val$originInput = p2;
        this.val$destinationInput = p3;
        return;
    }
    public void onClick(android.view.View p5)
    {
        this.val$originInput.performValidation();
        this.val$destinationInput.performValidation();
        if((this.val$originInput.getText().length() > 0) && (this.val$destinationInput.getText().length() > 0)) {
            net.croz.android.croair.ScheduleActivity.access$0(this.this$0, this.val$originInput.getText().toString(), this.val$destinationInput.getText().toString());
        }
        return;
    }
     ScheduleActivity$2(net.croz.android.croair.ScheduleActivity p1, android.widget.TextView p2, android.widget.TextView p3, android.widget.TextView p4)
    {
        this.this$0 = p1;
        this.val$cellDateText = p2;
        this.val$titleDate = p3;
        this.val$titleDetailsDate = p4;
        return;
    }
    public void onDateSet(android.widget.DatePicker p7, int p8, int p9, int p10)
    {
        v0 = java.util.Calendar.getInstance();
        v0.set(p8, p9, p10);
        v1 = new java.util.GregorianCalendar();
        v1.set(11, 0);
        v1.set(12, 0);
        v1.set(13, 0);
        v1.set(14, 0);
        if(v0.compareTo(v1) >= 0) {
            net.croz.android.croair.ScheduleActivity.access$1(this.this$0, v0.getTime());
            net.croz.android.croair.ScheduleActivity.access$2(this.this$0, this.val$cellDateText, v0.getTime());
            this.val$titleDate.setText(net.croz.android.croair.utils.DateFormater.formatDate(v0.getTime(), 0));
            this.val$titleDetailsDate.setText(net.croz.android.croair.utils.DateFormater.formatDate(v0.getTime(), 0));
        } else {
            android.widget.Toast.makeText(this.this$0, 1.76787911629e+38, 0).show();
        }
        return;
    }
     ScheduleActivity$3(net.croz.android.croair.ScheduleActivity p1, android.app.DatePickerDialog$OnDateSetListener p2)
    {
        this.this$0 = p1;
        this.val$odsl = p2;
        return;
    }
    public void onClick(android.view.View p8)
    {
        v6 = java.util.Calendar.getInstance();
        new android.app.DatePickerDialog(this.this$0, this.val$odsl, v6.get(1), v6.get(2), v6.get(5)).show();
        return;
    }
     ScheduleActivity$4(net.croz.android.croair.ScheduleActivity p1, java.util.List p2)
    {
        this.this$0 = p1;
        this.val$p_autocompleteList = p2;
        return;
    }
    public CharSequence fixText(CharSequence p4)
    {
        android.widget.Toast.makeText(this.this$0, 1.76787911629e+38, 0).show();
        return "";
    }
    public boolean isValid(CharSequence p4)
    {
        v0 = 0;
        if(this.val$p_autocompleteList.contains(p4.toString()) != 0) {
            v0 = 1;
        }
        return v0;
    }
     ScheduleActivity$5(net.croz.android.croair.ScheduleActivity p1, android.widget.AutoCompleteTextView p2)
    {
        this.this$0 = p1;
        this.val$p_input = p2;
        return;
    }
    public void onFocusChange(android.view.View p2, boolean p3)
    {
        this.val$p_input.performValidation();
        return;
    }
     ScheduleActivity$6$1(net.croz.android.croair.ScheduleActivity$6 p1)
    {
        this.this$1 = p1;
        return;
    }
    public void onClick(android.content.DialogInterface p1, int p2)
    {
        p1.cancel();
        return;
    }
     ScheduleActivity$7(net.croz.android.croair.ScheduleActivity p1)
    {
        this.this$0 = p1;
        return;
    }
    public void onItemClick(android.widget.AdapterView p3, android.view.View p4, int p5, long p6)
    {
        net.croz.android.croair.ScheduleActivity.access$6(this.this$0).setDisplayedChild(2);
        net.croz.android.croair.ScheduleActivity.access$7(this.this$0, p5);
        return;
    }
     ScheduleActivity$8(net.croz.android.croair.ScheduleActivity p1, int p2, android.widget.LinearLayout p3, android.view.animation.Animation p4, android.widget.LinearLayout p5, android.view.animation.Animation p6, android.widget.Button p7, android.widget.Button p8, android.widget.ImageButton p9, android.widget.ImageButton p10)
    {
        this.this$0 = p1;
        this.val$p_position = p2;
        this.val$departureLayout = p3;
        this.val$anim_left = p4;
        this.val$arrivalLayout = p5;
        this.val$anim_right = p6;
        this.val$firstButton = p7;
        this.val$lastButton = p8;
        this.val$previousButton = p9;
        this.val$nextButton = p10;
        return;
    }
    public void onClick(android.view.View p7)
    {
        if(net.croz.android.croair.ScheduleActivity.access$8(this.this$0) < (net.croz.android.croair.ScheduleActivity.access$4(this.this$0).get(this.val$p_position).getTransfers().intValue() - 1)) {
            v0 = this.this$0;
            net.croz.android.croair.ScheduleActivity.access$9(v0, (net.croz.android.croair.ScheduleActivity.access$8(v0) + 1));
            this.val$departureLayout.startAnimation(this.val$anim_left);
            this.val$arrivalLayout.startAnimation(this.val$anim_right);
            net.croz.android.croair.ScheduleActivity.access$10(this.this$0, this.val$p_position);
            net.croz.android.croair.ScheduleActivity.access$11(this.this$0, this.val$firstButton, this.val$lastButton, this.val$previousButton, this.val$nextButton, this.val$p_position);
        }
        return;
    }
     ScheduleActivity$9(net.croz.android.croair.ScheduleActivity p1, android.widget.LinearLayout p2, android.view.animation.Animation p3, android.widget.LinearLayout p4, android.view.animation.Animation p5, int p6, android.widget.Button p7, android.widget.Button p8, android.widget.ImageButton p9, android.widget.ImageButton p10)
    {
        this.this$0 = p1;
        this.val$departureLayout = p2;
        this.val$anim_left = p3;
        this.val$arrivalLayout = p4;
        this.val$anim_right = p5;
        this.val$p_position = p6;
        this.val$firstButton = p7;
        this.val$lastButton = p8;
        this.val$previousButton = p9;
        this.val$nextButton = p10;
        return;
    }
    public void onClick(android.view.View p7)
    {
        if(net.croz.android.croair.ScheduleActivity.access$8(this.this$0) > 0) {
            v0 = this.this$0;
            net.croz.android.croair.ScheduleActivity.access$9(v0, (net.croz.android.croair.ScheduleActivity.access$8(v0) - 1));
            this.val$departureLayout.startAnimation(this.val$anim_left);
            this.val$arrivalLayout.startAnimation(this.val$anim_right);
            net.croz.android.croair.ScheduleActivity.access$10(this.this$0, this.val$p_position);
            net.croz.android.croair.ScheduleActivity.access$11(this.this$0, this.val$firstButton, this.val$lastButton, this.val$previousButton, this.val$nextButton, this.val$p_position);
        }
        return;
    }
    public ScheduleActivity()
    {
        return;
    }
    static synthetic void access$0(net.croz.android.croair.ScheduleActivity p0, String p1, String p2)
    {
        p0.runNetworkService(p1, p2);
        return;
    }
    static synthetic void access$1(net.croz.android.croair.ScheduleActivity p0, java.util.Date p1)
    {
        p0.m_date = p1;
        return;
    }
    static synthetic void access$10(net.croz.android.croair.ScheduleActivity p0, int p1)
    {
        p0.detailsScreenDataInsertion(p1);
        return;
    }
    static synthetic void access$11(net.croz.android.croair.ScheduleActivity p0, android.widget.Button p1, android.widget.Button p2, android.widget.ImageButton p3, android.widget.ImageButton p4, int p5)
    {
        p0.setMenuButtonsFadeColor(p1, p2, p3, p4, p5);
        return;
    }
    static synthetic void access$2(net.croz.android.croair.ScheduleActivity p0, android.widget.TextView p1, java.util.Date p2)
    {
        p0.setupLocalizedDate(p1, p2);
        return;
    }
    static synthetic void access$3(net.croz.android.croair.ScheduleActivity p0, java.util.List p1)
    {
        p0.m_transportArray = p1;
        return;
    }
    static synthetic java.util.List access$4(net.croz.android.croair.ScheduleActivity p1)
    {
        return p1.m_transportArray;
    }
    static synthetic void access$5(net.croz.android.croair.ScheduleActivity p0, String p1, String p2)
    {
        p0.prepareResultsScreenAfterFetchingData(p1, p2);
        return;
    }
    static synthetic android.widget.ViewFlipper access$6(net.croz.android.croair.ScheduleActivity p1)
    {
        return p1.m_viewFlipper;
    }
    static synthetic void access$7(net.croz.android.croair.ScheduleActivity p0, int p1)
    {
        p0.stepChanger(p1);
        return;
    }
    static synthetic int access$8(net.croz.android.croair.ScheduleActivity p1)
    {
        return p1.m_step;
    }
    static synthetic void access$9(net.croz.android.croair.ScheduleActivity p0, int p1)
    {
        p0.m_step = p1;
        return;
    }
    private void autocompleteInputBindAdapterAndValidator(android.widget.AutoCompleteTextView p2, android.widget.ArrayAdapter p3, java.util.List p4)
    {
        p2.setAdapter(p3);
        p2.setValidator(new net.croz.android.croair.ScheduleActivity$4(this, p4));
        p2.setOnFocusChangeListener(new net.croz.android.croair.ScheduleActivity$5(this, p2));
        return;
    }
    private void detailsScreenDataInsertion(int p9)
    {
        v5 = this.m_viewFlipper.findViewById(1.80777360186e+38);
        v4 = this.m_viewFlipper.findViewById(1.80777380469e+38);
        v2 = this.m_viewFlipper.findViewById(1.80776305501e+38);
        v3 = this.m_viewFlipper.findViewById(1.80776366348e+38);
        v0 = this.m_viewFlipper.findViewById(1.80776528607e+38);
        v1 = this.m_viewFlipper.findViewById(1.80776589455e+38);
        v5.setText(new StringBuilder(String.valueOf((this.m_step + 1))).append("/").append(this.m_transportArray.get(p9).getTransfers()).toString());
        v4.setText(this.m_transportArray.get(p9).getFlightNumber().get(this.m_step));
        v2.setText(this.m_transportArray.get(p9).getDepartureAirport().get(this.m_step));
        v3.setText(this.m_transportArray.get(p9).getDepartureTime().get(this.m_step));
        v0.setText(this.m_transportArray.get(p9).getArrivalAirport().get(this.m_step));
        v1.setText(this.m_transportArray.get(p9).getArrivalTime().get(this.m_step));
        return;
    }
    private void prepareResultsScreenAfterFetchingData(String p9, String p10)
    {
        this.m_step = 0;
        v4 = this.findViewById(1.80777603575e+38);
        v3 = this.findViewById(1.80777522446e+38);
        v1 = this.findViewById(1.80777542728e+38);
        v2 = this.findViewById(1.80777197927e+38);
        v0 = this.findViewById(1.80777258774e+38);
        v5 = this.findViewById(1.80777583293e+38);
        v3.setText(p9);
        v2.setText(p9);
        v1.setText(p10);
        v0.setText(p10);
        v5.setText(Integer.toString(this.m_transportArray.size()));
        v4.setAdapter(new net.croz.android.croair.adapters.ScheduleResultsListAdapter(this, this.m_transportArray));
        this.m_viewFlipper.setDisplayedChild(1);
        v4.setOnItemClickListener(new net.croz.android.croair.ScheduleActivity$7(this));
        return;
    }
    private void runNetworkService(String p10, String p11)
    {
        v1 = new Void[0];
        new net.croz.android.croair.network.FlightScheduleService(this, net.croz.android.croair.utils.StringUtils.commaSeparatedStringToList(p10).get(1), net.croz.android.croair.utils.StringUtils.commaSeparatedStringToList(p11).get(1), this.m_date, new net.croz.android.croair.ScheduleActivity$6(this, net.croz.android.croair.utils.StringUtils.commaSeparatedStringToList(p10).get(0), net.croz.android.croair.utils.StringUtils.commaSeparatedStringToList(p11).get(0))).execute(v1);
        return;
    }
    private void setMenuButtonsFadeColor(android.widget.Button p4, android.widget.Button p5, android.widget.ImageButton p6, android.widget.ImageButton p7, int p8)
    {
        p7.setColorFilter(0);
        p6.setColorFilter(0);
        p4.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
        p5.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));
        if(this.m_step == 0) {
            p4.setTextColor(android.graphics.Color.parseColor("#99d3d3d3"));
            p4.setClickable(0);
            p6.setColorFilter(android.graphics.Color.parseColor("#99555555"));
            p6.setClickable(0);
        }
        if(this.m_step == (this.m_transportArray.get(p8).getTransfers().intValue() - 1)) {
            p5.setTextColor(android.graphics.Color.parseColor("#99d3d3d3"));
            p5.setClickable(0);
            p7.setColorFilter(android.graphics.Color.parseColor("#99555555"));
            p7.setClickable(0);
        }
        return;
    }
    private void setupDateFields()
    {
        v1 = this.findViewById(1.80777948376e+38);
        v0 = this.findViewById(1.80777988941e+38);
        v3 = this.findViewById(1.80776082394e+38);
        v4 = this.findViewById(1.80777299339e+38);
        this.setupLocalizedDate(v0, new java.util.Date());
        v3.setText(net.croz.android.croair.utils.DateFormater.formatDate(new java.util.Date(), 0));
        v4.setText(net.croz.android.croair.utils.DateFormater.formatDate(new java.util.Date(), 0));
        this.m_date = new java.util.Date();
        v1.setOnClickListener(new net.croz.android.croair.ScheduleActivity$3(this, new net.croz.android.croair.ScheduleActivity$2(this, v0, v3, v4)));
        return;
    }
    private void setupLocalizedDate(android.widget.TextView p5, java.util.Date p6)
    {
        v1 = this.getBaseContext().getResources().getConfiguration().locale;
        v0 = this.getResources().getStringArray(1.79445779431e+38);
        if((v1.equals(java.util.Locale.ENGLISH) == 0) && ((v1.equals(java.util.Locale.US) == 0) && (v1.equals(java.util.Locale.UK) == 0))) {
            p5.setText(new StringBuilder(String.valueOf(v0[p6.getDay()])).append(", ").append(net.croz.android.croair.utils.DateFormater.formatDate(p6, 0)).toString());
        } else {
            p5.setText(net.croz.android.croair.utils.DateFormater.formatDate(p6, 1));
        }
        return;
    }
    private void setupLocationInputs(android.widget.AutoCompleteTextView p5, android.widget.AutoCompleteTextView p6)
    {
        v0 = java.util.Arrays.asList(this.getResources().getStringArray(1.79445799713e+38));
        v1 = new android.widget.ArrayAdapter(this, 1.74128867448e+38, v0);
        this.autocompleteInputBindAdapterAndValidator(p5, v1, v0);
        this.autocompleteInputBindAdapterAndValidator(p6, v1, v0);
        return;
    }
    private void stepChanger(int p19)
    {
        v10 = android.view.animation.AnimationUtils.loadAnimation(this, 1.75458136008e+38);
        v12 = android.view.animation.AnimationUtils.loadAnimation(this, 1.75458156291e+38);
        v9 = this.m_viewFlipper.findViewById(1.80776224371e+38);
        v11 = this.m_viewFlipper.findViewById(1.80776447478e+38);
        this.detailsScreenDataInsertion(p19);
        v2 = this.m_viewFlipper.findViewById(1.80777421033e+38);
        v3 = this.m_viewFlipper.findViewById(1.80777502163e+38);
        v4 = this.m_viewFlipper.findViewById(1.80777441316e+38);
        v5 = this.m_viewFlipper.findViewById(1.80777481881e+38);
        this.setMenuButtonsFadeColor(v2, v3, v4, v5, p19);
        if(this.m_transportArray.get(p19).getTransfers().intValue() > 1) {
            v5.setOnClickListener(new net.croz.android.croair.ScheduleActivity$8(this, p19, v9, v10, v11, v12, v2, v3, v4, v5));
            v4.setOnClickListener(new net.croz.android.croair.ScheduleActivity$9(this, v9, v10, v11, v12, p19, v2, v3, v4, v5));
            v2.setOnClickListener(new net.croz.android.croair.ScheduleActivity$10(this, v9, v10, v11, v12, p19, v2, v3, v4, v5));
            v3.setOnClickListener(new net.croz.android.croair.ScheduleActivity$11(this, p19, v9, v10, v11, v12, v2, v3, v4, v5));
        }
        return;
    }
    public final void onBackPressed()
    {
        if(this.m_viewFlipper.getDisplayedChild() != 0) {
            this.m_viewFlipper.showPrevious();
            this.m_step = 0;
        } else {
            this.finish();
            this.overridePendingTransition(1.75458095444e+38, 1.75458115726e+38);
        }
        return;
    }
    protected final void onCreate(android.os.Bundle p9)
    {
        super.onCreate(p9);
        this.setContentView(1.74129354226e+38);
        this.m_viewFlipper = this.findViewById(1.80778496001e+38);
        this.m_viewFlipper.addView(android.view.View.inflate(this, 1.74129151402e+38, 0), 0);
        this.m_viewFlipper.addView(android.view.View.inflate(this, 1.74129110837e+38, 0), 1);
        this.m_viewFlipper.addView(android.view.View.inflate(this, 1.74129090554e+38, 0), 2);
        this.m_viewFlipper.setDisplayedChild(0);
        v1 = this.findViewById(1.80777867247e+38);
        v0 = this.findViewById(1.80777928094e+38);
        this.setupDateFields();
        this.setupLocationInputs(v1, v0);
        this.findViewById(1.80775940418e+38).setOnClickListener(new net.croz.android.croair.ScheduleActivity$1(this, v1, v0));
        return;
    }
     SettingsActivity$1$1(net.croz.android.croair.SettingsActivity$1 p1)
    {
        this.this$1 = p1;
        return;
    }
    public void onCancel(android.content.DialogInterface p3)
    {
        net.croz.android.croair.SettingsActivity.access$1(net.croz.android.croair.SettingsActivity$1.access$0(this.this$1)).setChecked(1);
        net.croz.android.croair.SettingsActivity.access$0(net.croz.android.croair.SettingsActivity$1.access$0(this.this$1)).setChecked(0);
        return;
    }
     SettingsActivity$1(net.croz.android.croair.SettingsActivity p1)
    {
        this.this$0 = p1;
        return;
    }
    static synthetic net.croz.android.croair.SettingsActivity access$0(net.croz.android.croair.SettingsActivity$1 p1)
    {
        return p1.this$0;
    }
    public void onClick(android.view.View p3)
    {
        net.croz.android.croair.SettingsActivity.access$0(this.this$0).setChecked(1);
        net.croz.android.croair.SettingsActivity.access$1(this.this$0).setChecked(0);
        net.croz.android.croair.SettingsActivity.access$2(this.this$0, "en").show().setOnCancelListener(new net.croz.android.croair.SettingsActivity$1$1(this));
        return;
    }
     SettingsActivity$2$1(net.croz.android.croair.SettingsActivity$2 p1)
    {
        this.this$1 = p1;
        return;
    }
    public void onCancel(android.content.DialogInterface p3)
    {
        net.croz.android.croair.SettingsActivity.access$0(net.croz.android.croair.SettingsActivity$2.access$0(this.this$1)).setChecked(1);
        net.croz.android.croair.SettingsActivity.access$1(net.croz.android.croair.SettingsActivity$2.access$0(this.this$1)).setChecked(0);
        return;
    }
     SettingsActivity$2(net.croz.android.croair.SettingsActivity p1)
    {
        this.this$0 = p1;
        return;
    }
    static synthetic net.croz.android.croair.SettingsActivity access$0(net.croz.android.croair.SettingsActivity$2 p1)
    {
        return p1.this$0;
    }
    public void onClick(android.view.View p3)
    {
        net.croz.android.croair.SettingsActivity.access$1(this.this$0).setChecked(1);
        net.croz.android.croair.SettingsActivity.access$0(this.this$0).setChecked(0);
        net.croz.android.croair.SettingsActivity.access$2(this.this$0, "hr").show().setOnCancelListener(new net.croz.android.croair.SettingsActivity$2$1(this));
        return;
    }
     SettingsActivity$3(net.croz.android.croair.SettingsActivity p1, String p2)
    {
        this.this$0 = p1;
        this.val$p_language = p2;
        return;
    }
    public void onClick(android.content.DialogInterface p3, int p4)
    {
        net.croz.android.croair.SettingsActivity.access$3(this.this$0, this.val$p_language);
        return;
    }
     SettingsActivity$4(net.croz.android.croair.SettingsActivity p1)
    {
        this.this$0 = p1;
        return;
    }
    public void onClick(android.content.DialogInterface p1, int p2)
    {
        p1.cancel();
        return;
    }
    public SettingsActivity()
    {
        return;
    }
    static synthetic android.widget.CheckBox access$0(net.croz.android.croair.SettingsActivity p1)
    {
        return p1.m_engCheckBox;
    }
    static synthetic android.widget.CheckBox access$1(net.croz.android.croair.SettingsActivity p1)
    {
        return p1.m_croCheckBox;
    }
    static synthetic android.app.AlertDialog$Builder access$2(net.croz.android.croair.SettingsActivity p1, String p2)
    {
        return p1.setUpAlertDialog(p2);
    }
    static synthetic void access$3(net.croz.android.croair.SettingsActivity p0, String p1)
    {
        p0.changeLanguage(p1);
        return;
    }
    private void changeLanguage(String p7)
    {
        v3 = new java.util.Locale(p7);
        java.util.Locale.setDefault(v3);
        v0 = new android.content.res.Configuration();
        v0.locale = v3;
        this.getBaseContext().getResources().updateConfiguration(v0, this.getBaseContext().getResources().getDisplayMetrics());
        v1 = this.getIntent();
        this.finish();
        this.startActivity(v1);
        return;
    }
    private android.app.AlertDialog$Builder setUpAlertDialog(String p5)
    {
        v0 = new android.app.AlertDialog$Builder(this);
        v0.setTitle(1.76789250268e+38).setMessage(1.76789270551e+38).setCancelable(0).setPositiveButton(1.7678766824e+38, new net.croz.android.croair.SettingsActivity$3(this, p5)).setNegativeButton(1.76787688523e+38, new net.croz.android.croair.SettingsActivity$4(this));
        return v0;
    }
    public final void onBackPressed()
    {
        v0 = new android.content.Intent(this, net.croz.android.croair.MainMenuActivity);
        this.finish();
        this.startActivity(v0);
        this.overridePendingTransition(1.75458095444e+38, 1.75458115726e+38);
        return;
    }
    protected final void onCreate(android.os.Bundle p7)
    {
        super.onCreate(p7);
        this.setContentView(1.74129171684e+38);
        this.m_engCheckBox = this.findViewById(1.80778090353e+38);
        this.m_croCheckBox = this.findViewById(1.80778049788e+38);
        if(this.getBaseContext().getResources().getConfiguration().locale.equals(new java.util.Locale("hr")) == 0) {
            this.m_engCheckBox.setChecked(1);
        } else {
            this.m_croCheckBox.setChecked(1);
        }
        this.findViewById(1.80778070071e+38).setOnClickListener(new net.croz.android.croair.SettingsActivity$1(this));
        this.findViewById(1.80778029506e+38).setOnClickListener(new net.croz.android.croair.SettingsActivity$2(this));
        return;
    }
     TransportActivity$1(net.croz.android.croair.TransportActivity p1, int p2)
    {
        this.this$0 = p1;
        this.val$p_viewFlipperChild = p2;
        return;
    }
    public void onClick(android.view.View p3)
    {
        net.croz.android.croair.TransportActivity.access$0(this.this$0).setDisplayedChild(this.val$p_viewFlipperChild);
        return;
    }
    public TransportActivity()
    {
        return;
    }
    static synthetic android.widget.ViewFlipper access$0(net.croz.android.croair.TransportActivity p1)
    {
        return p1.m_viewFlipper;
    }
    private void setupCellClickFeature(int p3, int p4)
    {
        this.findViewById(p3).setOnClickListener(new net.croz.android.croair.TransportActivity$1(this, p4));
        return;
    }
    public final void onBackPressed()
    {
        if(this.m_viewFlipper.getDisplayedChild() != 0) {
            this.m_viewFlipper.setDisplayedChild(0);
        } else {
            this.finish();
            this.overridePendingTransition(1.75458095444e+38, 1.75458115726e+38);
        }
        return;
    }
    protected final void onCreate(android.os.Bundle p9)
    {
        super.onCreate(p9);
        this.setContentView(1.74129354226e+38);
        this.m_viewFlipper = this.findViewById(1.80778496001e+38);
        this.m_viewFlipper.addView(android.view.View.inflate(this, 1.74129191966e+38, 0), 0);
        this.m_viewFlipper.addView(android.view.View.inflate(this, 1.74129333943e+38, 0), 1);
        this.m_viewFlipper.addView(android.view.View.inflate(this, 1.74129232531e+38, 0), 2);
        this.m_viewFlipper.addView(android.view.View.inflate(this, 1.74129293378e+38, 0), 3);
        this.m_viewFlipper.addView(android.view.View.inflate(this, 1.74129212249e+38, 0), 4);
        this.m_viewFlipper.addView(android.view.View.inflate(this, 1.74129252814e+38, 0), 5);
        this.m_viewFlipper.addView(android.view.View.inflate(this, 1.74129313661e+38, 0), 6);
        this.m_viewFlipper.addView(android.view.View.inflate(this, 1.74129273096e+38, 0), 7);
        this.m_viewFlipper.setDisplayedChild(0);
        this.setupCellClickFeature(1.807781512e+38, 1);
        this.setupCellClickFeature(1.80778171483e+38, 2);
        this.setupCellClickFeature(1.80778191765e+38, 3);
        this.setupCellClickFeature(1.80778212047e+38, 4);
        this.setupCellClickFeature(1.80778252612e+38, 5);
        this.setupCellClickFeature(1.80778293177e+38, 6);
        this.setupCellClickFeature(1.80778333742e+38, 7);
        return;
    }
     BranchDetailsListAdapter$1(net.croz.android.croair.adapters.BranchDetailsListAdapter p1, net.croz.android.croair.dto.BranchDetailsListDto p2)
    {
        this.this$0 = p1;
        this.val$currentCell = p2;
        return;
    }
    public void onClick(android.view.View p4)
    {
        net.croz.android.croair.adapters.BranchDetailsListAdapter.access$0(this.this$0).startActivity(new android.content.Intent("android.intent.action.VIEW", android.net.Uri.parse(this.val$currentCell.getMapLocation())));
        return;
    }
    protected BranchDetailsListAdapter$CellView()
    {
        return;
    }
    static synthetic void access$0(net.croz.android.croair.adapters.BranchDetailsListAdapter$CellView p0, android.widget.TextView p1)
    {
        p0.m_nameText = p1;
        return;
    }
    static synthetic void access$1(net.croz.android.croair.adapters.BranchDetailsListAdapter$CellView p0, android.widget.TextView p1)
    {
        p0.m_addressText = p1;
        return;
    }
    static synthetic android.widget.TextView access$10(net.croz.android.croair.adapters.BranchDetailsListAdapter$CellView p1)
    {
        return p1.m_faxText;
    }
    static synthetic android.widget.TextView access$11(net.croz.android.croair.adapters.BranchDetailsListAdapter$CellView p1)
    {
        return p1.m_emailText;
    }
    static synthetic android.widget.TextView access$12(net.croz.android.croair.adapters.BranchDetailsListAdapter$CellView p1)
    {
        return p1.m_timeLable;
    }
    static synthetic android.widget.TextView access$13(net.croz.android.croair.adapters.BranchDetailsListAdapter$CellView p1)
    {
        return p1.m_timeText;
    }
    static synthetic void access$2(net.croz.android.croair.adapters.BranchDetailsListAdapter$CellView p0, android.widget.TextView p1)
    {
        p0.m_phoneText = p1;
        return;
    }
    static synthetic void access$3(net.croz.android.croair.adapters.BranchDetailsListAdapter$CellView p0, android.widget.TextView p1)
    {
        p0.m_faxText = p1;
        return;
    }
    static synthetic void access$4(net.croz.android.croair.adapters.BranchDetailsListAdapter$CellView p0, android.widget.TextView p1)
    {
        p0.m_emailText = p1;
        return;
    }
    static synthetic void access$5(net.croz.android.croair.adapters.BranchDetailsListAdapter$CellView p0, android.widget.TextView p1)
    {
        p0.m_timeLable = p1;
        return;
    }
    static synthetic void access$6(net.croz.android.croair.adapters.BranchDetailsListAdapter$CellView p0, android.widget.TextView p1)
    {
        p0.m_timeText = p1;
        return;
    }
    static synthetic android.widget.TextView access$7(net.croz.android.croair.adapters.BranchDetailsListAdapter$CellView p1)
    {
        return p1.m_nameText;
    }
    static synthetic android.widget.TextView access$8(net.croz.android.croair.adapters.BranchDetailsListAdapter$CellView p1)
    {
        return p1.m_addressText;
    }
    static synthetic android.widget.TextView access$9(net.croz.android.croair.adapters.BranchDetailsListAdapter$CellView p1)
    {
        return p1.m_phoneText;
    }
    public final android.widget.TextView getAddressText()
    {
        return this.m_addressText;
    }
    public final android.widget.TextView getEmailText()
    {
        return this.m_emailText;
    }
    public final android.widget.TextView getFaxText()
    {
        return this.m_faxText;
    }
    public final android.widget.TextView getNameText()
    {
        return this.m_nameText;
    }
    public final android.widget.TextView getPhoneText()
    {
        return this.m_phoneText;
    }
    public final android.widget.TextView getTimeLable()
    {
        return this.m_timeLable;
    }
    public final android.widget.TextView getTimeText()
    {
        return this.m_timeText;
    }
    public final void setAddressText(android.widget.TextView p1)
    {
        this.m_addressText = p1;
        return;
    }
    public final void setEmailText(android.widget.TextView p1)
    {
        this.m_emailText = p1;
        return;
    }
    public final void setFaxText(android.widget.TextView p1)
    {
        this.m_faxText = p1;
        return;
    }
    public final void setNameText(android.widget.TextView p1)
    {
        this.m_nameText = p1;
        return;
    }
    public final void setPhoneText(android.widget.TextView p1)
    {
        this.m_phoneText = p1;
        return;
    }
    public final void setTimeLable(android.widget.TextView p1)
    {
        this.m_timeLable = p1;
        return;
    }
    public final void setTimeText(android.widget.TextView p1)
    {
        this.m_timeText = p1;
        return;
    }
    public BranchDetailsListAdapter(android.app.Activity p1, java.util.List p2)
    {
        this.m_activity = p1;
        this.m_list = p2;
        return;
    }
    static synthetic android.app.Activity access$0(net.croz.android.croair.adapters.BranchDetailsListAdapter p1)
    {
        return p1.m_activity;
    }
    public final int getCount()
    {
        return this.m_list.size();
    }
    public final Object getItem(int p2)
    {
        return this.m_list.get(p2);
    }
    public final long getItemId(int p3)
    {
        return 0.0;
    }
    public final android.view.View getView(int p8, android.view.View p9, android.view.ViewGroup p10)
    {
        v4 = p9;
        if(v4 != 0) {
            v0 = v4.getTag();
        } else {
            v4 = this.m_activity.getLayoutInflater().inflate(1.74128928295e+38, 0);
            v0 = new net.croz.android.croair.adapters.BranchDetailsListAdapter$CellView();
            net.croz.android.croair.adapters.BranchDetailsListAdapter$CellView.access$0(v0, v4.findViewById(1.80775189968e+38));
            net.croz.android.croair.adapters.BranchDetailsListAdapter$CellView.access$1(v0, v4.findViewById(1.80775210251e+38));
            net.croz.android.croair.adapters.BranchDetailsListAdapter$CellView.access$2(v0, v4.findViewById(1.80775250816e+38));
            net.croz.android.croair.adapters.BranchDetailsListAdapter$CellView.access$3(v0, v4.findViewById(1.80775271098e+38));
            net.croz.android.croair.adapters.BranchDetailsListAdapter$CellView.access$4(v0, v4.findViewById(1.8077529138e+38));
            net.croz.android.croair.adapters.BranchDetailsListAdapter$CellView.access$5(v0, v4.findViewById(1.80775352228e+38));
            net.croz.android.croair.adapters.BranchDetailsListAdapter$CellView.access$6(v0, v4.findViewById(1.8077537251e+38));
            v4.setTag(v0);
        }
        v1 = this.m_list.get(p8);
        net.croz.android.croair.adapters.BranchDetailsListAdapter$CellView.access$7(v0).setText(v1.getName());
        net.croz.android.croair.adapters.BranchDetailsListAdapter$CellView.access$8(v0).setText(v1.getAddress());
        net.croz.android.croair.adapters.BranchDetailsListAdapter$CellView.access$9(v0).setText(v1.getPhone());
        net.croz.android.croair.adapters.BranchDetailsListAdapter$CellView.access$10(v0).setText(v1.getFax());
        net.croz.android.croair.adapters.BranchDetailsListAdapter$CellView.access$11(v0).setText(v1.getEmail());
        net.croz.android.croair.adapters.BranchDetailsListAdapter$CellView.access$12(v0).setText(v1.getTimeLable());
        net.croz.android.croair.adapters.BranchDetailsListAdapter$CellView.access$13(v0).setText(v1.getTime());
        v4.findViewById(1.80775230533e+38).setOnClickListener(new net.croz.android.croair.adapters.BranchDetailsListAdapter$1(this, v1));
        return v4;
    }
    protected ScheduleResultsListAdapter$CellView()
    {
        return;
    }
    static synthetic void access$0(net.croz.android.croair.adapters.ScheduleResultsListAdapter$CellView p0, android.widget.TextView p1)
    {
        p0.m_transferText = p1;
        return;
    }
    static synthetic void access$1(net.croz.android.croair.adapters.ScheduleResultsListAdapter$CellView p0, android.widget.TextView p1)
    {
        p0.m_companyText = p1;
        return;
    }
    static synthetic void access$2(net.croz.android.croair.adapters.ScheduleResultsListAdapter$CellView p0, android.widget.TextView p1)
    {
        p0.m_departureTimeText = p1;
        return;
    }
    static synthetic void access$3(net.croz.android.croair.adapters.ScheduleResultsListAdapter$CellView p0, android.widget.TextView p1)
    {
        p0.m_arrivalTimeText = p1;
        return;
    }
    static synthetic android.widget.TextView access$4(net.croz.android.croair.adapters.ScheduleResultsListAdapter$CellView p1)
    {
        return p1.m_transferText;
    }
    static synthetic android.widget.TextView access$5(net.croz.android.croair.adapters.ScheduleResultsListAdapter$CellView p1)
    {
        return p1.m_companyText;
    }
    static synthetic android.widget.TextView access$6(net.croz.android.croair.adapters.ScheduleResultsListAdapter$CellView p1)
    {
        return p1.m_departureTimeText;
    }
    static synthetic android.widget.TextView access$7(net.croz.android.croair.adapters.ScheduleResultsListAdapter$CellView p1)
    {
        return p1.m_arrivalTimeText;
    }
    public final android.widget.TextView getArrivalTimeText()
    {
        return this.m_arrivalTimeText;
    }
    public final android.widget.TextView getCompanyText()
    {
        return this.m_companyText;
    }
    public final android.widget.TextView getDepartureTimeText()
    {
        return this.m_departureTimeText;
    }
    public final android.widget.TextView getTransferText()
    {
        return this.m_transferText;
    }
    public final void setArrivalTimeText(android.widget.TextView p1)
    {
        this.m_arrivalTimeText = p1;
        return;
    }
    public final void setCompanyText(android.widget.TextView p1)
    {
        this.m_companyText = p1;
        return;
    }
    public final void setDepartureTimeText(android.widget.TextView p1)
    {
        this.m_departureTimeText = p1;
        return;
    }
    public final void setTransferText(android.widget.TextView p1)
    {
        this.m_transferText = p1;
        return;
    }
    public ScheduleResultsListAdapter(android.app.Activity p1, java.util.List p2)
    {
        this.m_activity = p1;
        this.m_list = p2;
        return;
    }
    public final int getCount()
    {
        return this.m_list.size();
    }
    public final Object getItem(int p2)
    {
        return this.m_list.get(p2);
    }
    public final long getItemId(int p3)
    {
        return 0.0;
    }
    public final android.view.View getView(int p8, android.view.View p9, android.view.ViewGroup p10)
    {
        v3 = p9;
        if(v3 != 0) {
            v0 = v3.getTag();
        } else {
            v3 = this.m_activity.getLayoutInflater().inflate(1.74129131119e+38, 0);
            v0 = new net.croz.android.croair.adapters.ScheduleResultsListAdapter$CellView();
            net.croz.android.croair.adapters.ScheduleResultsListAdapter$CellView.access$0(v0, v3.findViewById(1.80777623858e+38));
            net.croz.android.croair.adapters.ScheduleResultsListAdapter$CellView.access$1(v0, v3.findViewById(1.80777664422e+38));
            net.croz.android.croair.adapters.ScheduleResultsListAdapter$CellView.access$2(v0, v3.findViewById(1.8077772527e+38));
            net.croz.android.croair.adapters.ScheduleResultsListAdapter$CellView.access$3(v0, v3.findViewById(1.80777786117e+38));
            v3.setTag(v0);
        }
        v1 = this.m_list.get(p8);
        net.croz.android.croair.adapters.ScheduleResultsListAdapter$CellView.access$4(v0).setText(String.valueOf((v1.getTransfers().intValue() - 1)));
        net.croz.android.croair.adapters.ScheduleResultsListAdapter$CellView.access$5(v0).setText(v1.getCompany());
        net.croz.android.croair.adapters.ScheduleResultsListAdapter$CellView.access$6(v0).setText(v1.getDepartureTime().get(0));
        net.croz.android.croair.adapters.ScheduleResultsListAdapter$CellView.access$7(v0).setText(v1.getArrivalTime().get((v1.getArrivalTime().size() - 1)));
        return v3;
    }
    public BranchDetailsListDto()
    {
        return;
    }
    public final String getAddress()
    {
        return this.m_address;
    }
    public final String getEmail()
    {
        return this.m_email;
    }
    public final String getFax()
    {
        return this.m_fax;
    }
    public final String getMapLocation()
    {
        return this.m_mapLocation;
    }
    public final String getName()
    {
        return this.m_name;
    }
    public final String getPhone()
    {
        return this.m_phone;
    }
    public final String getTime()
    {
        return this.m_time;
    }
    public final String getTimeLable()
    {
        return this.m_timeLable;
    }
    public final void setAddress(String p1)
    {
        this.m_address = p1;
        return;
    }
    public final void setEmail(String p1)
    {
        this.m_email = p1;
        return;
    }
    public final void setFax(String p1)
    {
        this.m_fax = p1;
        return;
    }
    public final void setMapLocation(String p1)
    {
        this.m_mapLocation = p1;
        return;
    }
    public final void setName(String p1)
    {
        this.m_name = p1;
        return;
    }
    public final void setPhone(String p1)
    {
        this.m_phone = p1;
        return;
    }
    public final void setTime(String p1)
    {
        this.m_time = p1;
        return;
    }
    public final void setTimeLable(String p1)
    {
        this.m_timeLable = p1;
        return;
    }
    public FlightStatusResultDto(String p1, String p2, String p3, String p4, String p5, String p6)
    {
        this.m_origin = p1;
        this.m_destination = p2;
        this.m_originPlannedTime = p3;
        this.m_destinationPlannedTime = p4;
        this.m_originExpectedTime = p5;
        this.m_destinationExpectedTime = p6;
        return;
    }
    public final String getDestination()
    {
        return this.m_destination;
    }
    public final String getDestinationExpectedTime()
    {
        return this.m_destinationExpectedTime;
    }
    public final String getDestinationPlannedTime()
    {
        return this.m_destinationPlannedTime;
    }
    public final String getOrigin()
    {
        return this.m_origin;
    }
    public final String getOriginExpectedTime()
    {
        return this.m_originExpectedTime;
    }
    public final String getOriginPlannedTime()
    {
        return this.m_originPlannedTime;
    }
    public ScheduleResultListDto(Integer p1, String p2, java.util.List p3, java.util.List p4, java.util.List p5, java.util.List p6, java.util.List p7)
    {
        this.m_transfers = p1;
        this.m_company = p2;
        this.m_flightNumber = p3;
        this.m_departureAirport = p4;
        this.m_arrivalAirport = p5;
        this.m_departureTime = p6;
        this.m_arrivalTime = p7;
        return;
    }
    public final java.util.List getArrivalAirport()
    {
        return this.m_arrivalAirport;
    }
    public final java.util.List getArrivalTime()
    {
        return this.m_arrivalTime;
    }
    public final String getCompany()
    {
        return this.m_company;
    }
    public final java.util.List getDepartureAirport()
    {
        return this.m_departureAirport;
    }
    public final java.util.List getDepartureTime()
    {
        return this.m_departureTime;
    }
    public final java.util.List getFlightNumber()
    {
        return this.m_flightNumber;
    }
    public final Integer getTransfers()
    {
        return this.m_transfers;
    }
    public FlightScheduleService(android.content.Context p1, String p2, String p3, java.util.Date p4, net.croz.android.croair.network.Callback p5)
    {
        this.m_context = p1;
        this.m_origin = p2;
        this.m_destination = p3;
        this.m_date = p4;
        this.m_callback = p5;
        return;
    }
    protected varargs synthetic bridge Object doInBackground(Object[] p2)
    {
        return this.doInBackground(p2);
    }
    protected varargs final java.util.List doInBackground(Void[] p16)
    {
        v12 = this.m_context.getResources();
        v10 = new java.text.SimpleDateFormat(v2, java.util.Locale.getDefault()).format(this.m_date);
        v5 = new StringBuilder("Basic ").append(android.util.Base64.encodeToString(new StringBuilder(String.valueOf(v12.getString(1.76789290833e+38))).append(":").append(v12.getString(1.76789311116e+38)).toString().getBytes(), 2)).toString();
        v6 = new java.util.HashMap();
        v11 = v12.getStringArray(1.79446164797e+38);
        v9 = (0 + 1);
        v6.put(v11[0], v10);
        v8 = (v9 + 1);
        v6.put(v11[v9], this.m_origin);
        v6.put(v11[v8], this.m_destination);
        v0 = new net.croz.android.croair.network.SoapService(v12.getString(1.76789331398e+38), v12.getString(1.7678943281e+38), v12.getString(1.7678935168e+38), v12.getString(1.76789371963e+38), v5, v6);
        v14 = new java.util.ArrayList();
        v14.addAll(new net.croz.android.croair.utils.SoapResponseXmlParser(v0.retrieveSoapResponseFromServer()).parseSchedule());
        return v14;
    }
    protected synthetic bridge void onPostExecute(Object p1)
    {
        this.onPostExecute(p1);
        return;
    }
    protected final void onPostExecute(java.util.List p2)
    {
        this.m_dialog.dismiss();
        if(p2 != 0) {
            this.m_callback.run(p2);
        } else {
            this.m_callback.onError();
        }
        return;
    }
    protected final void onPreExecute()
    {
        this.m_dialog = android.app.ProgressDialog.show(this.m_context, "", this.m_context.getResources().getString(1.76787931912e+38));
        return;
    }
    public FlightStatusService(android.content.Context p1, String p2, java.util.Date p3, net.croz.android.croair.network.Callback p4)
    {
        this.m_context = p1;
        this.m_date = p3;
        this.m_flight = p2;
        this.m_callback = p4;
        return;
    }
    protected varargs synthetic bridge Object doInBackground(Object[] p2)
    {
        return this.doInBackground(p2);
    }
    protected varargs final java.util.List doInBackground(Void[] p16)
    {
        v12 = this.m_context.getResources();
        v10 = new java.text.SimpleDateFormat(v2, java.util.Locale.getDefault()).format(this.m_date);
        v5 = new StringBuilder("Basic ").append(android.util.Base64.encodeToString(new StringBuilder(String.valueOf(v12.getString(1.76789290833e+38))).append(":").append(v12.getString(1.76789311116e+38)).toString().getBytes(), 2)).toString();
        v6 = new java.util.HashMap();
        v11 = v12.getStringArray(1.79446185079e+38);
        v6.put(v11[0], v10);
        v6.put(v11[(0 + 1)], this.m_flight);
        v0 = new net.croz.android.croair.network.SoapService(v12.getString(1.76789331398e+38), v12.getString(1.76789453092e+38), v12.getString(1.7678935168e+38), v12.getString(1.76789392245e+38), v5, v6);
        v14 = new java.util.ArrayList();
        v14.addAll(new net.croz.android.croair.utils.SoapResponseXmlParser(v0.retrieveSoapResponseFromServer()).parseFlightStatus());
        return v14;
    }
    protected synthetic bridge void onPostExecute(Object p1)
    {
        this.onPostExecute(p1);
        return;
    }
    protected final void onPostExecute(java.util.List p2)
    {
        this.m_dialog.dismiss();
        if(p2 != 0) {
            this.m_callback.run(p2);
        } else {
            this.m_callback.onError();
        }
        return;
    }
    protected final void onPreExecute()
    {
        this.m_dialog = android.app.ProgressDialog.show(this.m_context, "", this.m_context.getResources().getString(1.76787931912e+38));
        return;
    }
    public SoapService(String p1, String p2, String p3, String p4, String p5, java.util.Map p6)
    {
        this.m_soapNamespace = p1;
        this.m_soapObjectName = p2;
        this.m_soapServiceUrl = p3;
        this.m_soapServiceAction = p4;
        this.m_soapServiceAuthentication = p5;
        this.m_soapObjectProperites = p6;
        return;
    }
    private org.ksoap2.serialization.SoapSerializationEnvelope bakeSoapEnvelope()
    {
        v3 = new org.ksoap2.serialization.SoapObject(this.m_soapNamespace, this.m_soapObjectName);
        v0 = new org.ksoap2.serialization.SoapSerializationEnvelope(120);
        v0.dotNet = 1;
        v4 = this.m_soapObjectProperites.keySet().iterator();
        while (v4.hasNext() != 0) {
            v1 = v4.next();
            v3.addProperty(v1, this.m_soapObjectProperites.get(v1));
        }
        v0.setOutputSoapObject(v3);
        return v0;
    }
    public final org.ksoap2.serialization.SoapObject retrieveSoapResponseFromServer()
    {
        v1 = new org.ksoap2.transport.HttpTransportSE(this.m_soapServiceUrl);
        v0 = new java.util.ArrayList();
        v0.add(new org.ksoap2.HeaderProperty("Authorization", this.m_soapServiceAuthentication));
        this.bakeSoapEnvelope();
        v1.call(this.m_soapServiceAction, this, v0);
        return this.getResponse();
    }
    public ConnectionErrorDialog(android.content.Context p3)
    {
        this(p3);
        this.setIcon(2.49793642563e-38);
        this.setTitle(1.76787992759e+38);
        this.setMessage(1.76788013041e+38);
        this.setPositiveButton(2.42445990117e-38, 0);
        return;
    }
    private DateFormater()
    {
        return;
    }
    public static String formatDate(java.util.Date p2, boolean p3)
    {
        if(!p3) {
            v0 = android.text.format.DateFormat.format("dd.MM.yyyy.", p2).toString();
        } else {
            v0 = android.text.format.DateFormat.format("EEEE, dd.MM.yyyy.", p2).toString();
        }
        return v0;
    }
    public SoapResponseXmlParser(org.ksoap2.serialization.SoapObject p1)
    {
        junit.framework.Assert.assertNotNull(p1);
        this.m_soapObject = p1;
        return;
    }
    private String formatTime(String p5)
    {
        return new StringBuilder(String.valueOf(p5.substring(0, 2))).append(":").append(p5.substring(2, 4)).append(" h").toString();
    }
    private net.croz.android.croair.dto.FlightStatusResultDto initalizeFlightStatusResultDto(org.ksoap2.serialization.SoapObject p12)
    {
        v8 = p12.getProperty(0);
        v1 = net.croz.android.croair.utils.StringUtils.capitalizeFirstLettersInEachWord(v8.getPropertyAsString("ORIGIN_FULL"));
        this.formatTime(v8.getPropertyAsString("EST"));
        v5 = v8.getPropertyAsString("REAL");
        if((v5 != 0) && (("".equals(v5) == 0) && ("anyType{}".equals(v5) == 0))) {
            v9 = "";
            if(v5.contains("ESTIMATED TIME OF DEPARTURE") != 0) {
                v9 = "E";
            }
            v0 = new StringBuilder(String.valueOf(v9));
            this.formatTime(v5);
            v5 = v0.append(this).toString();
        } else {
            v5 = "";
        }
        v7 = p12.getProperty(1);
        v2 = net.croz.android.croair.utils.StringUtils.capitalizeFirstLettersInEachWord(v7.getPropertyAsString("DESTINATION_FULL"));
        this.formatTime(v7.getPropertyAsString("EST"));
        v6 = v7.getPropertyAsString("REAL");
        if((v6 != 0) && (("".equals(v6) == 0) && ("anyType{}".equals(v6) == 0))) {
            v9 = "";
            if(v6.contains("ESTIMATED TIME OF ARRIVAL") != 0) {
                v9 = "E";
            }
            v0 = new StringBuilder(String.valueOf(v9));
            this.formatTime(v6);
            v6 = v0.append(this).toString();
        } else {
            v6 = "";
        }
        return new net.croz.android.croair.dto.FlightStatusResultDto(v1, v2, this, this, v5, v6);
    }
    private net.croz.android.croair.dto.ScheduleResultListDto initializeScheduleResultListDto(org.ksoap2.serialization.SoapObject p20)
    {
        v17 = Integer.parseInt(p20.getPropertyAsString("LEGS"));
        v4 = new java.util.ArrayList(v17);
        v7 = new java.util.ArrayList(v17);
        v8 = new java.util.ArrayList(v17);
        v5 = new java.util.ArrayList(v17);
        v6 = new java.util.ArrayList(v17);
        v3 = net.croz.android.croair.utils.StringUtils.capitalizeFirstLettersInEachWord(p20.getPropertyAsString("MARKETINGCOMPANY_FULL").replace(">", ""));
        v15 = 0;
        while (v15 < v17) {
            v11 = p20.getPropertyAsString(((v15 * 11) + 1));
            v12 = p20.getPropertyAsString(((v15 * 11) + 4));
            if((v12 != 0) && (("".equals(v12) == 0) && ("anyType{}".equals(v12) == 0))) {
                v4.add(new StringBuilder(String.valueOf(v12)).append(v11).toString());
            } else {
                v4.add(new StringBuilder("OU").append(v11).toString());
            }
            v5.add(net.croz.android.croair.utils.StringUtils.capitalizeFirstLettersInEachWord(p20.getPropertyAsString(((v15 * 11) + 7))));
            v7.add(this.formatTime(p20.getPropertyAsString(((v15 * 11) + 8))));
            v6.add(net.croz.android.croair.utils.StringUtils.capitalizeFirstLettersInEachWord(p20.getPropertyAsString(((v15 * 11) + 10))));
            v8.add(this.formatTime(p20.getPropertyAsString(((v15 * 11) + 11))));
            v15 = (v15 + 1);
        }
        return new net.croz.android.croair.dto.ScheduleResultListDto(Integer.valueOf(v17), v3, v4, v5, v6, v7, v8);
    }
    public final java.util.List parseFlightStatus()
    {
        v1 = new java.util.ArrayList();
        v2 = this.m_soapObject.getProperty("FLIFO");
        if(v2.getPropertyCount() > 0) {
            v4 = Integer.valueOf(v2.getPropertyAsString("LEGS")).intValue();
            v0 = 0;
            while (v0 < v4) {
                this.initalizeFlightStatusResultDto(v2.getProperty((v0 + 4)));
                v1.add(this);
                v0 = (v0 + 1);
            }
        }
        return v1;
    }
    public final java.util.List parseSchedule()
    {
        v3 = new java.util.ArrayList();
        v1 = this.m_soapObject.getProperty("FLIGHTS");
        v2 = 2;
        while (v2 < v1.getPropertyCount()) {
            this.initializeScheduleResultListDto(v1.getProperty(v2));
            v3.add(this);
            v2 = (v2 + 1);
        }
        return v3;
    }
    private StringUtils()
    {
        return;
    }
    public static String capitalizeFirstLetter(String p2)
    {
        junit.framework.Assert.assertNotNull(p2);
        return new StringBuilder(String.valueOf(Character.toUpperCase(p2.charAt(0)))).append(p2.substring(1).toLowerCase()).toString();
    }
    public static String capitalizeFirstLettersInEachWord(String p6)
    {
        junit.framework.Assert.assertNotNull(p6);
        v1 = new StringBuffer();
        v0 = p6.split(" ");
        v4 = v0.length;
        v3 = 0;
        while (v3 < v4) {
            v1.append(net.croz.android.croair.utils.StringUtils.capitalizeFirstLetter(v0[v3]));
            v1.append(32);
            v3 = (v3 + 1);
        }
        return v1.toString().trim();
    }
    public static java.util.List commaSeparatedStringToList(String p6)
    {
        v1 = new java.util.ArrayList();
        if(p6 != 0) {
            v0 = p6.trim().split(",");
            v4 = v0.length;
            v3 = 0;
            while (v3 < v4) {
                v1.add(v0[v3].trim());
                v3 = (v3 + 1);
            }
        }
        return v1;
    }
    static Base64()
    {
        org.kobjects.base64.Base64.charTab = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".toCharArray();
        return;
    }
    public Base64()
    {
        return;
    }
    static int decode(char p3)
    {
        if((p3 < 65) || (p3 > 90)) {
            if((p3 < 97) || (p3 > 122)) {
                if((p3 < 48) || (p3 > 57)) {
                    switch(p3) {
                        case 43:
                            v0 = 62;
                            break;
                        case 47:
                            v0 = 63;
                            break;
                        case 61:
                            v0 = 0;
                            break;
                        default:
                            throw new RuntimeException(new StringBuilder().append("unexpected code: ").append(p3).toString());
                    }
                } else {
                    v0 = (((p3 - 48) + 26) + 26);
                }
            } else {
                v0 = ((p3 - 97) + 26);
            }
        } else {
            v0 = (p3 - 65);
        }
        return v0;
    }
    public static void decode(String p6, java.io.OutputStream p7)
    {
        v0 = 0;
        v1 = p6.length();
        while(true) {
            if((v0 >= v1) || (p6.charAt(v0) > 32)) {
                if(v0 == v1) {
                    break;
                }
                v2 = ((((org.kobjects.base64.Base64.decode(p6.charAt(v0)) << 18) + (org.kobjects.base64.Base64.decode(p6.charAt((v0 + 1))) << 12)) + (org.kobjects.base64.Base64.decode(p6.charAt((v0 + 2))) << 6)) + org.kobjects.base64.Base64.decode(p6.charAt((v0 + 3))));
                p7.write(((v2 >> 16) & 255));
                if(p6.charAt((v0 + 2)) != 61) {
                    p7.write(((v2 >> 8) & 255));
                    if(p6.charAt((v0 + 3)) != 61) {
                        p7.write((v2 & 255));
                        v0 = (v0 + 4);
                    }
                }
            } else {
                v0 = (v0 + 1);
            }
        }
        return;
    }
    public static byte[] decode(String p3)
    {
        v0 = new java.io.ByteArrayOutputStream();
        org.kobjects.base64.Base64.decode(p3, v0);
        return v0.toByteArray();
    }
    public static String encode(byte[] p3)
    {
        return org.kobjects.base64.Base64.encode(p3, 0, p3.length, 0).toString();
    }
    public static StringBuffer encode(byte[] p7, int p8, int p9, StringBuffer p10)
    {
        if(p10 == 0) {
            p10 = new StringBuffer(((p7.length * 3) / 2));
        }
        v1 = (p9 - 3);
        v2 = p8;
        v4 = 0;
        while (v2 <= v1) {
            v0 = ((((p7[v2] & 255) << 16) | ((p7[(v2 + 1)] & 255) << 8)) | (p7[(v2 + 2)] & 255));
            p10.append(org.kobjects.base64.Base64.charTab[((v0 >> 18) & 63)]);
            p10.append(org.kobjects.base64.Base64.charTab[((v0 >> 12) & 63)]);
            p10.append(org.kobjects.base64.Base64.charTab[((v0 >> 6) & 63)]);
            p10.append(org.kobjects.base64.Base64.charTab[(v0 & 63)]);
            v2 = (v2 + 3);
            v3 = (v4 + 1);
            if(v4 >= 14) {
                v3 = 0;
                p10.append("\x0d\x0a");
            }
            v4 = v3;
        }
        if(v2 != ((p8 + p9) - 2)) {
            if(v2 == ((p8 + p9) - 1)) {
                v0 = ((p7[v2] & 255) << 16);
                p10.append(org.kobjects.base64.Base64.charTab[((v0 >> 18) & 63)]);
                p10.append(org.kobjects.base64.Base64.charTab[((v0 >> 12) & 63)]);
                p10.append("==");
            }
        } else {
            v0 = (((p7[v2] & 255) << 16) | ((p7[(v2 + 1)] & 255) << 8));
            p10.append(org.kobjects.base64.Base64.charTab[((v0 >> 18) & 63)]);
            p10.append(org.kobjects.base64.Base64.charTab[((v0 >> 12) & 63)]);
            p10.append(org.kobjects.base64.Base64.charTab[((v0 >> 6) & 63)]);
            p10.append("=");
        }
        return p10;
    }
    static Crypt()
    {
        v0 = new int[128];
        v0 = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 4, 0, 0, 0, 5, 0, 0, 0, 6, 0, 0, 0, 7, 0, 0, 0, 8, 0, 0, 0, 9, 0, 0, 0, 10, 0, 0, 0, 11, 0, 0, 0, 5, 0, 0, 0, 6, 0, 0, 0, 7, 0, 0, 0, 8, 0, 0, 0, 9, 0, 0, 0, 10, 0, 0, 0, 11, 0, 0, 0, 12, 0, 0, 0, 13, 0, 0, 0, 14, 0, 0, 0, 15, 0, 0, 0, 16, 0, 0, 0, 17, 0, 0, 0, 18, 0, 0, 0, 19, 0, 0, 0, 20, 0, 0, 0, 21, 0, 0, 0, 22, 0, 0, 0, 23, 0, 0, 0, 24, 0, 0, 0, 25, 0, 0, 0, 26, 0, 0, 0, 27, 0, 0, 0, 28, 0, 0, 0, 29, 0, 0, 0, 30, 0, 0, 0, 31, 0, 0, 0, 32, 0, 0, 0, 33, 0, 0, 0, 34, 0, 0, 0, 35, 0, 0, 0, 36, 0, 0, 0, 37, 0, 0, 0, 32, 0, 0, 0, 33, 0, 0, 0, 34, 0, 0, 0, 35, 0, 0, 0, 36, 0, 0, 0, 37, 0, 0, 0, 38, 0, 0, 0, 39, 0, 0, 0, 40, 0, 0, 0, 41, 0, 0, 0, 42, 0, 0, 0, 43, 0, 0, 0, 44, 0, 0, 0, 45, 0, 0, 0, 46, 0, 0, 0, 47, 0, 0, 0, 48, 0, 0, 0, 49, 0, 0, 0, 50, 0, 0, 0, 51, 0, 0, 0, 52, 0, 0, 0, 53, 0, 0, 0, 54, 0, 0, 0, 55, 0, 0, 0, 56, 0, 0, 0, 57, 0, 0, 0, 58, 0, 0, 0, 59, 0, 0, 0, 60, 0, 0, 0, 61, 0, 0, 0, 62, 0, 0, 0, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
        org.kobjects.crypt.Crypt.con_salt = v0;
        v0 = new boolean[16];
        v0 = {0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0};
        org.kobjects.crypt.Crypt.shifts2 = v0;
        v0 = new int[][8];
        v1 = new int[64];
        v1 = {0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 32, 16, 0, 0, 32, 0, 0, 1, 0, 16, 0, 1, 0, 0, 0, 1, 32, 16, 0, 1, 32, 0, 8, 0, 0, 16, 8, 0, 0, 0, 8, 0, 32, 16, 8, 0, 32, 0, 8, 1, 0, 16, 8, 1, 0, 0, 8, 1, 32, 16, 8, 1, 32, 32, 0, 0, 0, 48, 0, 0, 0, 32, 0, 0, 32, 48, 0, 0, 32, 32, 0, 1, 0, 48, 0, 1, 0, 32, 0, 1, 32, 48, 0, 1, 32, 32, 8, 0, 0, 48, 8, 0, 0, 32, 8, 0, 32, 48, 8, 0, 32, 32, 8, 1, 0, 48, 8, 1, 0, 32, 8, 1, 32, 48, 8, 1, 32, 0, 0, 8, 0, 16, 0, 8, 0, 0, 0, 8, 32, 16, 0, 8, 32, 0, 0, 9, 0, 16, 0, 9, 0, 0, 0, 9, 32, 16, 0, 9, 32, 0, 8, 8, 0, 16, 8, 8, 0, 0, 8, 8, 32, 16, 8, 8, 32, 0, 8, 9, 0, 16, 8, 9, 0, 0, 8, 9, 32, 16, 8, 9, 32, 32, 0, 8, 0, 48, 0, 8, 0, 32, 0, 8, 32, 48, 0, 8, 32, 32, 0, 9, 0, 48, 0, 9, 0, 32, 0, 9, 32, 48, 0, 9, 32, 32, 8, 8, 0, 48, 8, 8, 0, 32, 8, 8, 32, 48, 8, 8, 32, 32, 8, 9, 0, 48, 8, 9, 0, 32, 8, 9, 32, 48, 8, 9, 32};
        v0[0] = v1;
        v1 = new int[64];
        v1 = {0, 0, 0, 0, 0, 0, 0, 2, 0, 32, 0, 0, 0, 32, 0, 2, 0, 0, 32, 0, 0, 0, 32, 2, 0, 32, 32, 0, 0, 32, 32, 2, 4, 0, 0, 0, 4, 0, 0, 2, 4, 32, 0, 0, 4, 32, 0, 2, 4, 0, 32, 0, 4, 0, 32, 2, 4, 32, 32, 0, 4, 32, 32, 2, 0, 4, 0, 0, 0, 4, 0, 2, 0, 36, 0, 0, 0, 36, 0, 2, 0, 4, 32, 0, 0, 4, 32, 2, 0, 36, 32, 0, 0, 36, 32, 2, 4, 4, 0, 0, 4, 4, 0, 2, 4, 36, 0, 0, 4, 36, 0, 2, 4, 4, 32, 0, 4, 4, 32, 2, 4, 36, 32, 0, 4, 36, 32, 2, 0, 0, 0, 16, 0, 0, 0, 18, 0, 32, 0, 16, 0, 32, 0, 18, 0, 0, 32, 16, 0, 0, 32, 18, 0, 32, 32, 16, 0, 32, 32, 18, 4, 0, 0, 16, 4, 0, 0, 18, 4, 32, 0, 16, 4, 32, 0, 18, 4, 0, 32, 16, 4, 0, 32, 18, 4, 32, 32, 16, 4, 32, 32, 18, 0, 4, 0, 16, 0, 4, 0, 18, 0, 36, 0, 16, 0, 36, 0, 18, 0, 4, 32, 16, 0, 4, 32, 18, 0, 36, 32, 16, 0, 36, 32, 18, 4, 4, 0, 16, 4, 4, 0, 18, 4, 36, 0, 16, 4, 36, 0, 18, 4, 4, 32, 16, 4, 4, 32, 18, 4, 36, 32, 16, 4, 36, 32, 18};
        v0[1] = v1;
        v1 = new int[64];
        v1 = {0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 4, 0, 1, 0, 4, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 4, 1, 1, 0, 4, 1, 2, 0, 0, 0, 3, 0, 0, 0, 2, 0, 4, 0, 3, 0, 4, 0, 2, 0, 0, 1, 3, 0, 0, 1, 2, 0, 4, 1, 3, 0, 4, 1, 0, 2, 0, 0, 1, 2, 0, 0, 0, 2, 4, 0, 1, 2, 4, 0, 0, 2, 0, 1, 1, 2, 0, 1, 0, 2, 4, 1, 1, 2, 4, 1, 2, 2, 0, 0, 3, 2, 0, 0, 2, 2, 4, 0, 3, 2, 4, 0, 2, 2, 0, 1, 3, 2, 0, 1, 2, 2, 4, 1, 3, 2, 4, 1, 0, 0, 0, 8, 1, 0, 0, 8, 0, 0, 4, 8, 1, 0, 4, 8, 0, 0, 0, 9, 1, 0, 0, 9, 0, 0, 4, 9, 1, 0, 4, 9, 2, 0, 0, 8, 3, 0, 0, 8, 2, 0, 4, 8, 3, 0, 4, 8, 2, 0, 0, 9, 3, 0, 0, 9, 2, 0, 4, 9, 3, 0, 4, 9, 0, 2, 0, 8, 1, 2, 0, 8, 0, 2, 4, 8, 1, 2, 4, 8, 0, 2, 0, 9, 1, 2, 0, 9, 0, 2, 4, 9, 1, 2, 4, 9, 2, 2, 0, 8, 3, 2, 0, 8, 2, 2, 4, 8, 3, 2, 4, 8, 2, 2, 0, 9, 3, 2, 0, 9, 2, 2, 4, 9, 3, 2, 4, 9};
        v0[2] = v1;
        v1 = new int[64];
        v1 = {0, 0, 0, 0, 0, 0, 16, 0, 0, 1, 0, 0, 0, 1, 16, 0, 8, 0, 0, 0, 8, 0, 16, 0, 8, 1, 0, 0, 8, 1, 16, 0, 0, 16, 0, 0, 0, 16, 16, 0, 0, 17, 0, 0, 0, 17, 16, 0, 8, 16, 0, 0, 8, 16, 16, 0, 8, 17, 0, 0, 8, 17, 16, 0, 0, 0, 0, 4, 0, 0, 16, 4, 0, 1, 0, 4, 0, 1, 16, 4, 8, 0, 0, 4, 8, 0, 16, 4, 8, 1, 0, 4, 8, 1, 16, 4, 0, 16, 0, 4, 0, 16, 16, 4, 0, 17, 0, 4, 0, 17, 16, 4, 8, 16, 0, 4, 8, 16, 16, 4, 8, 17, 0, 4, 8, 17, 16, 4, 0, 0, 2, 0, 0, 0, 18, 0, 0, 1, 2, 0, 0, 1, 18, 0, 8, 0, 2, 0, 8, 0, 18, 0, 8, 1, 2, 0, 8, 1, 18, 0, 0, 16, 2, 0, 0, 16, 18, 0, 0, 17, 2, 0, 0, 17, 18, 0, 8, 16, 2, 0, 8, 16, 18, 0, 8, 17, 2, 0, 8, 17, 18, 0, 0, 0, 2, 4, 0, 0, 18, 4, 0, 1, 2, 4, 0, 1, 18, 4, 8, 0, 2, 4, 8, 0, 18, 4, 8, 1, 2, 4, 8, 1, 18, 4, 0, 16, 2, 4, 0, 16, 18, 4, 0, 17, 2, 4, 0, 17, 18, 4, 8, 16, 2, 4, 8, 16, 18, 4, 8, 17, 2, 4, 8, 17, 18, 4};
        v0[3] = v1;
        v2 = new int[64];
        v2 = {0, 0, 0, 0, 0, 0, 0, 16, 0, 0, 1, 0, 0, 0, 1, 16, 4, 0, 0, 0, 4, 0, 0, 16, 4, 0, 1, 0, 4, 0, 1, 16, 0, 0, 0, 32, 0, 0, 0, 48, 0, 0, 1, 32, 0, 0, 1, 48, 4, 0, 0, 32, 4, 0, 0, 48, 4, 0, 1, 32, 4, 0, 1, 48, 0, 0, 16, 0, 0, 0, 16, 16, 0, 0, 17, 0, 0, 0, 17, 16, 4, 0, 16, 0, 4, 0, 16, 16, 4, 0, 17, 0, 4, 0, 17, 16, 0, 0, 16, 32, 0, 0, 16, 48, 0, 0, 17, 32, 0, 0, 17, 48, 4, 0, 16, 32, 4, 0, 16, 48, 4, 0, 17, 32, 4, 0, 17, 48, 0, 16, 0, 0, 0, 16, 0, 16, 0, 16, 1, 0, 0, 16, 1, 16, 4, 16, 0, 0, 4, 16, 0, 16, 4, 16, 1, 0, 4, 16, 1, 16, 0, 16, 0, 32, 0, 16, 0, 48, 0, 16, 1, 32, 0, 16, 1, 48, 4, 16, 0, 32, 4, 16, 0, 48, 4, 16, 1, 32, 4, 16, 1, 48, 0, 16, 16, 0, 0, 16, 16, 16, 0, 16, 17, 0, 0, 16, 17, 16, 4, 16, 16, 0, 4, 16, 16, 16, 4, 16, 17, 0, 4, 16, 17, 16, 0, 16, 16, 32, 0, 16, 16, 48, 0, 16, 17, 32, 0, 16, 17, 48, 4, 16, 16, 32, 4, 16, 16, 48, 4, 16, 17, 32, 4, 16, 17, 48};
        v0[4] = v2;
        v2 = new int[64];
        v2 = {0, 0, 0, 0, 0, 0, 0, 8, 8, 0, 0, 0, 8, 0, 0, 8, 0, 4, 0, 0, 0, 4, 0, 8, 8, 4, 0, 0, 8, 4, 0, 8, 0, 0, 2, 0, 0, 0, 2, 8, 8, 0, 2, 0, 8, 0, 2, 8, 0, 4, 2, 0, 0, 4, 2, 8, 8, 4, 2, 0, 8, 4, 2, 8, 1, 0, 0, 0, 1, 0, 0, 8, 9, 0, 0, 0, 9, 0, 0, 8, 1, 4, 0, 0, 1, 4, 0, 8, 9, 4, 0, 0, 9, 4, 0, 8, 1, 0, 2, 0, 1, 0, 2, 8, 9, 0, 2, 0, 9, 0, 2, 8, 1, 4, 2, 0, 1, 4, 2, 8, 9, 4, 2, 0, 9, 4, 2, 8, 0, 0, 0, 2, 0, 0, 0, 10, 8, 0, 0, 2, 8, 0, 0, 10, 0, 4, 0, 2, 0, 4, 0, 10, 8, 4, 0, 2, 8, 4, 0, 10, 0, 0, 2, 2, 0, 0, 2, 10, 8, 0, 2, 2, 8, 0, 2, 10, 0, 4, 2, 2, 0, 4, 2, 10, 8, 4, 2, 2, 8, 4, 2, 10, 1, 0, 0, 2, 1, 0, 0, 10, 9, 0, 0, 2, 9, 0, 0, 10, 1, 4, 0, 2, 1, 4, 0, 10, 9, 4, 0, 2, 9, 4, 0, 10, 1, 0, 2, 2, 1, 0, 2, 10, 9, 0, 2, 2, 9, 0, 2, 10, 1, 4, 2, 2, 1, 4, 2, 10, 9, 4, 2, 2, 9, 4, 2, 10};
        v0[5] = v2;
        v2 = new int[64];
        v2 = {0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 8, 0, 0, 1, 8, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 8, 1, 0, 1, 8, 1, 16, 0, 0, 0, 16, 1, 0, 0, 16, 0, 8, 0, 16, 1, 8, 0, 16, 0, 0, 1, 16, 1, 0, 1, 16, 0, 8, 1, 16, 1, 8, 1, 0, 0, 32, 0, 0, 1, 32, 0, 0, 0, 40, 0, 0, 1, 40, 0, 0, 0, 32, 1, 0, 1, 32, 1, 0, 0, 40, 1, 0, 1, 40, 1, 16, 0, 32, 0, 16, 1, 32, 0, 16, 0, 40, 0, 16, 1, 40, 0, 16, 0, 32, 1, 16, 1, 32, 1, 16, 0, 40, 1, 16, 1, 40, 1, 0, 2, 0, 0, 0, 3, 0, 0, 0, 2, 8, 0, 0, 3, 8, 0, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 8, 1, 0, 3, 8, 1, 16, 2, 0, 0, 16, 3, 0, 0, 16, 2, 8, 0, 16, 3, 8, 0, 16, 2, 0, 1, 16, 3, 0, 1, 16, 2, 8, 1, 16, 3, 8, 1, 0, 2, 32, 0, 0, 3, 32, 0, 0, 2, 40, 0, 0, 3, 40, 0, 0, 2, 32, 1, 0, 3, 32, 1, 0, 2, 40, 1, 0, 3, 40, 1, 16, 2, 32, 0, 16, 3, 32, 0, 16, 2, 40, 0, 16, 3, 40, 0, 16, 2, 32, 1, 16, 3, 32, 1, 16, 2, 40, 1, 16, 3, 40, 1};
        v0[6] = v2;
        v2 = new int[64];
        v2 = {0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 4, 0, 0, 0, 4, 4, 2, 0, 0, 0, 2, 0, 0, 4, 2, 0, 4, 0, 2, 0, 4, 4, 0, 32, 0, 0, 0, 32, 0, 4, 0, 32, 4, 0, 0, 32, 4, 4, 2, 32, 0, 0, 2, 32, 0, 4, 2, 32, 4, 0, 2, 32, 4, 4, 32, 0, 0, 0, 32, 0, 0, 4, 32, 0, 4, 0, 32, 0, 4, 4, 34, 0, 0, 0, 34, 0, 0, 4, 34, 0, 4, 0, 34, 0, 4, 4, 32, 32, 0, 0, 32, 32, 0, 4, 32, 32, 4, 0, 32, 32, 4, 4, 34, 32, 0, 0, 34, 32, 0, 4, 34, 32, 4, 0, 34, 32, 4, 4, 0, 8, 0, 0, 0, 8, 0, 4, 0, 8, 4, 0, 0, 8, 4, 4, 2, 8, 0, 0, 2, 8, 0, 4, 2, 8, 4, 0, 2, 8, 4, 4, 0, 40, 0, 0, 0, 40, 0, 4, 0, 40, 4, 0, 0, 40, 4, 4, 2, 40, 0, 0, 2, 40, 0, 4, 2, 40, 4, 0, 2, 40, 4, 4, 32, 8, 0, 0, 32, 8, 0, 4, 32, 8, 4, 0, 32, 8, 4, 4, 34, 8, 0, 0, 34, 8, 0, 4, 34, 8, 4, 0, 34, 8, 4, 4, 32, 40, 0, 0, 32, 40, 0, 4, 32, 40, 4, 0, 32, 40, 4, 4, 34, 40, 0, 0, 34, 40, 0, 4, 34, 40, 4, 0, 34, 40, 4, 4};
        v0[7] = v2;
        org.kobjects.crypt.Crypt.skb = v0;
        v0 = new int[][8];
        v1 = new int[64];
        v1 = {0, 2, 130, 0, 0, 0, 2, 0, 0, 0, 128, 128, 0, 2, 130, 128, 0, 0, 128, 0, 0, 2, 2, 128, 0, 0, 2, 128, 0, 0, 128, 128, 0, 2, 2, 128, 0, 2, 130, 0, 0, 0, 130, 0, 0, 2, 0, 128, 0, 2, 128, 128, 0, 0, 128, 0, 0, 0, 0, 0, 0, 0, 2, 128, 0, 0, 2, 0, 0, 0, 0, 128, 0, 2, 128, 0, 0, 2, 2, 0, 0, 2, 130, 128, 0, 0, 130, 0, 0, 2, 0, 128, 0, 2, 128, 0, 0, 0, 0, 128, 0, 2, 0, 0, 0, 2, 2, 0, 0, 0, 130, 128, 0, 2, 0, 0, 0, 2, 128, 128, 0, 0, 130, 128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 130, 128, 0, 2, 128, 0, 0, 0, 2, 128, 0, 2, 130, 0, 0, 0, 2, 0, 0, 2, 0, 128, 0, 2, 128, 0, 0, 0, 130, 128, 0, 2, 0, 0, 0, 2, 2, 0, 0, 0, 128, 128, 0, 2, 2, 128, 0, 0, 0, 128, 0, 0, 128, 128, 0, 0, 130, 0, 0, 2, 130, 128, 0, 2, 2, 0, 0, 0, 130, 0, 0, 2, 128, 128, 0, 0, 128, 0, 0, 2, 0, 128, 0, 0, 2, 128, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 128, 0, 0, 2, 128, 128, 0, 2, 130, 0, 0, 0, 0, 128, 0, 0, 130, 128, 0, 2, 0, 0, 0, 2, 2, 128};
        v0[0] = v1;
        v1 = new int[64];
        v1 = {4, 32, 4, 16, 0, 0, 0, 0, 0, 32, 4, 0, 0, 0, 4, 16, 4, 0, 0, 16, 4, 32, 0, 0, 0, 32, 0, 16, 0, 32, 4, 0, 0, 32, 0, 0, 4, 0, 4, 16, 4, 0, 0, 0, 0, 32, 0, 16, 4, 0, 4, 0, 0, 32, 4, 16, 0, 0, 4, 16, 4, 0, 0, 0, 0, 0, 4, 0, 4, 32, 0, 16, 4, 0, 4, 16, 0, 32, 0, 0, 4, 32, 4, 0, 0, 0, 0, 16, 0, 0, 0, 0, 4, 0, 4, 0, 4, 32, 0, 16, 4, 32, 4, 0, 0, 32, 4, 16, 4, 0, 0, 16, 0, 0, 0, 16, 0, 0, 4, 0, 4, 32, 0, 0, 4, 32, 4, 16, 4, 0, 4, 0, 0, 32, 4, 16, 0, 32, 0, 16, 4, 32, 4, 0, 4, 32, 4, 16, 4, 0, 4, 0, 4, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 16, 4, 32, 0, 0, 0, 0, 4, 0, 4, 0, 4, 16, 0, 32, 0, 0, 0, 0, 0, 16, 4, 32, 4, 0, 4, 32, 0, 16, 0, 32, 4, 16, 0, 32, 0, 0, 0, 0, 0, 0, 4, 0, 0, 16, 4, 0, 0, 0, 4, 32, 4, 16, 0, 32, 4, 0, 0, 0, 4, 16, 4, 0, 4, 16, 0, 0, 4, 0, 4, 32, 0, 0, 0, 32, 0, 16, 4, 32, 0, 16, 4, 0, 0, 0, 0, 0, 4, 16, 0, 32, 4, 0};
        v0[1] = v1;
        v1 = new int[64];
        v1 = {0, 0, 0, 65, 64, 0, 1, 1, 64, 0, 0, 0, 64, 0, 0, 65, 0, 0, 1, 64, 0, 0, 0, 1, 64, 0, 0, 65, 64, 0, 1, 0, 64, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 64, 64, 0, 1, 65, 64, 0, 0, 64, 0, 0, 0, 64, 0, 0, 1, 65, 0, 0, 0, 0, 0, 0, 1, 64, 64, 0, 1, 1, 64, 0, 0, 0, 64, 0, 0, 64, 64, 0, 1, 65, 0, 0, 1, 0, 0, 0, 0, 65, 0, 0, 1, 65, 64, 0, 0, 1, 64, 0, 1, 64, 0, 0, 1, 1, 64, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 64, 0, 1, 64, 64, 0, 1, 1, 64, 0, 0, 0, 0, 0, 0, 64, 0, 0, 1, 0, 64, 0, 0, 64, 0, 0, 1, 64, 0, 0, 1, 1, 64, 0, 0, 65, 0, 0, 0, 0, 64, 0, 1, 1, 64, 0, 1, 0, 0, 0, 1, 65, 0, 0, 1, 64, 0, 0, 0, 1, 64, 0, 1, 65, 0, 0, 0, 64, 64, 0, 1, 64, 0, 0, 0, 65, 0, 0, 0, 1, 64, 0, 1, 65, 0, 0, 1, 0, 64, 0, 0, 1, 64, 0, 0, 65, 64, 0, 1, 0, 64, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 65, 64, 0, 0, 64, 0, 0, 0, 65, 64, 0, 1, 64, 64, 0, 0, 0, 0, 0, 1, 1};
        v0[2] = v1;
        v1 = new int[64];
        v1 = {2, 4, 16, 0, 0, 4, 0, 4, 2, 0, 0, 0, 2, 4, 16, 4, 0, 0, 0, 0, 0, 0, 16, 4, 2, 4, 0, 4, 2, 0, 16, 0, 0, 4, 16, 4, 2, 0, 0, 4, 0, 0, 0, 4, 2, 4, 0, 0, 2, 0, 0, 4, 2, 4, 16, 0, 0, 0, 16, 0, 0, 0, 0, 4, 2, 0, 16, 4, 0, 4, 16, 0, 0, 4, 0, 0, 2, 0, 0, 0, 0, 4, 16, 0, 2, 4, 0, 4, 0, 0, 16, 4, 0, 4, 0, 0, 2, 4, 0, 0, 0, 0, 0, 0, 2, 0, 16, 0, 0, 4, 16, 4, 0, 4, 0, 4, 2, 0, 16, 4, 2, 4, 16, 4, 0, 0, 16, 0, 2, 0, 16, 4, 2, 4, 0, 0, 0, 0, 16, 0, 2, 0, 0, 4, 0, 4, 16, 0, 0, 4, 0, 4, 2, 0, 0, 0, 0, 0, 16, 4, 2, 4, 0, 4, 0, 0, 0, 0, 0, 4, 0, 0, 2, 0, 16, 0, 0, 0, 0, 0, 2, 0, 16, 4, 0, 4, 16, 4, 0, 4, 0, 0, 0, 0, 0, 4, 2, 4, 16, 4, 2, 4, 16, 0, 0, 0, 16, 0, 2, 4, 16, 4, 2, 0, 0, 0, 0, 4, 0, 4, 2, 4, 16, 0, 2, 0, 16, 0, 0, 4, 16, 0, 0, 0, 16, 4, 2, 4, 0, 4, 2, 4, 0, 0, 0, 0, 0, 4, 2, 0, 0, 4, 0, 4, 16, 4};
        v0[3] = v1;
        v2 = new int[64];
        v2 = {0, 0, 0, 2, 0, 64, 0, 0, 0, 1, 0, 0, 8, 65, 0, 2, 8, 64, 0, 2, 0, 1, 0, 2, 8, 65, 0, 0, 0, 64, 0, 2, 0, 64, 0, 0, 8, 0, 0, 0, 8, 0, 0, 2, 0, 65, 0, 0, 8, 1, 0, 2, 8, 64, 0, 2, 0, 65, 0, 2, 0, 0, 0, 0, 0, 65, 0, 0, 0, 0, 0, 2, 8, 64, 0, 0, 8, 1, 0, 0, 0, 1, 0, 2, 8, 65, 0, 0, 0, 0, 0, 0, 8, 0, 0, 2, 8, 0, 0, 0, 8, 1, 0, 2, 8, 65, 0, 2, 8, 64, 0, 0, 0, 64, 0, 2, 0, 1, 0, 0, 8, 1, 0, 0, 0, 65, 0, 2, 0, 65, 0, 2, 8, 1, 0, 2, 8, 64, 0, 0, 0, 64, 0, 2, 0, 64, 0, 0, 8, 0, 0, 0, 8, 0, 0, 2, 0, 1, 0, 2, 0, 0, 0, 2, 0, 65, 0, 0, 8, 65, 0, 2, 0, 0, 0, 0, 8, 65, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 8, 64, 0, 0, 8, 1, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 8, 65, 0, 2, 8, 64, 0, 2, 0, 65, 0, 2, 8, 1, 0, 0, 0, 64, 0, 0, 0, 65, 0, 0, 8, 64, 0, 2, 0, 1, 0, 2, 8, 1, 0, 0, 8, 0, 0, 0, 8, 65, 0, 0, 0, 64, 0, 2, 8, 0, 0, 2};
        v0[4] = v2;
        v2 = new int[64];
        v2 = {16, 0, 0, 32, 16, 0, 8, 0, 0, 0, 0, 0, 0, 8, 8, 32, 16, 0, 8, 0, 0, 8, 0, 0, 16, 8, 0, 32, 0, 0, 8, 0, 16, 8, 0, 0, 16, 8, 8, 32, 0, 8, 8, 0, 0, 0, 0, 32, 0, 8, 0, 32, 16, 0, 0, 32, 0, 0, 8, 32, 16, 8, 8, 0, 0, 0, 8, 0, 16, 8, 0, 32, 16, 0, 8, 32, 0, 0, 0, 0, 0, 8, 0, 0, 16, 0, 0, 0, 0, 8, 8, 32, 16, 0, 8, 32, 16, 8, 8, 32, 0, 0, 8, 32, 0, 0, 0, 32, 16, 8, 0, 0, 16, 0, 0, 0, 0, 8, 8, 0, 16, 8, 8, 0, 0, 8, 0, 32, 16, 8, 0, 0, 0, 0, 0, 32, 0, 8, 0, 32, 16, 8, 8, 0, 0, 8, 8, 32, 16, 0, 8, 0, 0, 0, 0, 0, 0, 8, 0, 32, 0, 0, 0, 32, 0, 8, 0, 0, 16, 0, 8, 32, 0, 0, 8, 0, 16, 0, 8, 0, 16, 8, 8, 32, 0, 8, 8, 0, 16, 0, 0, 0, 16, 8, 8, 32, 0, 8, 8, 0, 0, 0, 8, 0, 16, 8, 0, 32, 16, 0, 0, 32, 0, 0, 8, 32, 16, 8, 8, 0, 0, 0, 0, 0, 0, 8, 0, 0, 16, 0, 0, 32, 16, 8, 0, 32, 0, 8, 8, 32, 0, 0, 8, 32, 16, 8, 0, 0, 16, 0, 0, 0, 16, 0, 8, 32};
        v0[5] = v2;
        v2 = new int[64];
        v2 = {0, 16, 0, 0, 128, 0, 0, 0, 128, 0, 64, 0, 1, 0, 64, 0, 129, 16, 64, 0, 1, 16, 0, 0, 128, 16, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 129, 0, 64, 0, 129, 0, 0, 0, 0, 16, 64, 0, 1, 0, 0, 0, 128, 16, 64, 0, 0, 16, 64, 0, 129, 0, 0, 0, 129, 0, 64, 0, 0, 16, 0, 0, 1, 16, 0, 0, 129, 16, 64, 0, 0, 0, 0, 0, 128, 0, 64, 0, 1, 0, 64, 0, 128, 16, 0, 0, 1, 16, 64, 0, 129, 16, 0, 0, 128, 16, 64, 0, 1, 0, 0, 0, 129, 16, 0, 0, 1, 16, 64, 0, 128, 0, 0, 0, 0, 0, 64, 0, 129, 16, 0, 0, 0, 16, 64, 0, 1, 16, 64, 0, 129, 0, 0, 0, 0, 16, 0, 0, 128, 0, 0, 0, 0, 0, 64, 0, 1, 16, 64, 0, 129, 0, 64, 0, 129, 16, 0, 0, 128, 16, 0, 0, 0, 0, 0, 0, 128, 0, 0, 0, 1, 0, 64, 0, 1, 0, 0, 0, 128, 0, 64, 0, 0, 0, 0, 0, 129, 0, 64, 0, 128, 0, 64, 0, 128, 16, 0, 0, 129, 0, 0, 0, 0, 16, 0, 0, 129, 16, 64, 0, 0, 0, 64, 0, 128, 16, 64, 0, 1, 0, 0, 0, 1, 16, 0, 0, 129, 16, 64, 0, 1, 0, 64, 0, 128, 16, 64, 0, 0, 16, 64, 0, 1, 16, 0, 0};
        v0[6] = v2;
        v2 = new int[64];
        v2 = {32, 0, 32, 8, 0, 128, 32, 8, 32, 128, 0, 0, 0, 0, 0, 0, 0, 128, 0, 8, 32, 0, 32, 0, 0, 0, 32, 8, 32, 128, 32, 8, 32, 0, 0, 0, 0, 0, 0, 8, 0, 128, 32, 0, 32, 128, 0, 0, 32, 128, 32, 0, 32, 128, 0, 8, 32, 0, 0, 8, 0, 0, 32, 8, 0, 128, 0, 0, 32, 128, 32, 0, 32, 0, 32, 0, 0, 128, 0, 8, 32, 128, 32, 8, 32, 0, 0, 8, 0, 0, 0, 0, 0, 128, 32, 0, 0, 0, 0, 8, 0, 0, 32, 0, 32, 128, 0, 8, 32, 0, 32, 8, 0, 0, 32, 0, 0, 128, 0, 0, 0, 128, 32, 8, 32, 0, 0, 0, 0, 0, 32, 0, 0, 128, 0, 0, 32, 0, 0, 8, 32, 128, 32, 8, 32, 128, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 128, 32, 0, 32, 0, 32, 8, 32, 128, 0, 8, 0, 128, 0, 8, 32, 0, 32, 0, 0, 128, 32, 8, 32, 0, 0, 0, 32, 0, 32, 0, 0, 128, 0, 8, 32, 128, 32, 8, 0, 0, 32, 0, 0, 0, 32, 8, 32, 0, 0, 8, 0, 128, 32, 0, 32, 128, 0, 0, 32, 128, 0, 8, 0, 0, 32, 8, 32, 0, 0, 0, 0, 128, 32, 8, 32, 128, 32, 0, 0, 0, 0, 0, 0, 0, 0, 8, 32, 0, 32, 8, 0, 128, 0, 0, 32, 128, 32, 0};
        v0[7] = v2;
        org.kobjects.crypt.Crypt.SPtrans = v0;
        v0 = new int[64];
        v0 = {46, 0, 0, 0, 47, 0, 0, 0, 48, 0, 0, 0, 49, 0, 0, 0, 50, 0, 0, 0, 51, 0, 0, 0, 52, 0, 0, 0, 53, 0, 0, 0, 54, 0, 0, 0, 55, 0, 0, 0, 56, 0, 0, 0, 57, 0, 0, 0, 65, 0, 0, 0, 66, 0, 0, 0, 67, 0, 0, 0, 68, 0, 0, 0, 69, 0, 0, 0, 70, 0, 0, 0, 71, 0, 0, 0, 72, 0, 0, 0, 73, 0, 0, 0, 74, 0, 0, 0, 75, 0, 0, 0, 76, 0, 0, 0, 77, 0, 0, 0, 78, 0, 0, 0, 79, 0, 0, 0, 80, 0, 0, 0, 81, 0, 0, 0, 82, 0, 0, 0, 83, 0, 0, 0, 84, 0, 0, 0, 85, 0, 0, 0, 86, 0, 0, 0, 87, 0, 0, 0, 88, 0, 0, 0, 89, 0, 0, 0, 90, 0, 0, 0, 97, 0, 0, 0, 98, 0, 0, 0, 99, 0, 0, 0, 100, 0, 0, 0, 101, 0, 0, 0, 102, 0, 0, 0, 103, 0, 0, 0, 104, 0, 0, 0, 105, 0, 0, 0, 106, 0, 0, 0, 107, 0, 0, 0, 108, 0, 0, 0, 109, 0, 0, 0, 110, 0, 0, 0, 111, 0, 0, 0, 112, 0, 0, 0, 113, 0, 0, 0, 114, 0, 0, 0, 115, 0, 0, 0, 116, 0, 0, 0, 117, 0, 0, 0, 118, 0, 0, 0, 119, 0, 0, 0, 120, 0, 0, 0, 121, 0, 0, 0, 122, 0, 0};
        org.kobjects.crypt.Crypt.cov_2char = v0;
        return;
    }
    private Crypt()
    {
        return;
    }
    private static final int D_ENCRYPT(int p6, int p7, int p8, int p9, int p10, int[] p11)
    {
        v2 = (p7 ^ (p7 >> 16));
        v1 = (v2 & p9);
        v2 = (v2 & p10);
        v1 = ((((v1 << 16) ^ v1) ^ p7) ^ p11[p8]);
        v0 = ((((v2 << 16) ^ v2) ^ p7) ^ p11[(p8 + 1)]);
        v0 = ((v0 >> 4) | (v0 << 28));
        return (p6 ^ (((((((org.kobjects.crypt.Crypt.SPtrans[1][(v0 & 63)] | org.kobjects.crypt.Crypt.SPtrans[3][((v0 >> 8) & 63)]) | org.kobjects.crypt.Crypt.SPtrans[5][((v0 >> 16) & 63)]) | org.kobjects.crypt.Crypt.SPtrans[7][((v0 >> 24) & 63)]) | org.kobjects.crypt.Crypt.SPtrans[0][(v1 & 63)]) | org.kobjects.crypt.Crypt.SPtrans[2][((v1 >> 8) & 63)]) | org.kobjects.crypt.Crypt.SPtrans[4][((v1 >> 16) & 63)]) | org.kobjects.crypt.Crypt.SPtrans[6][((v1 >> 24) & 63)]));
    }
    private static final int HPERM_OP(int p3, int p4, int p5)
    {
        v0 = (((p3 << (p4 - 16)) ^ p3) & p5);
        return ((p3 ^ v0) ^ (v0 >> (p4 - 16)));
    }
    private static final void PERM_OP(int p2, int p3, int p4, int p5, int[] p6)
    {
        v0 = (((p2 >> p4) ^ p3) & p5);
        p3 = (p3 ^ v0);
        p6[0] = (p2 ^ (v0 << p4));
        p6[1] = p3;
        return;
    }
    private static final int[] body(int[] p13, int p14, int p15)
    {
        v0 = 0;
        v1 = 0;
        v9 = 0;
        while (v9 < 25) {
            v2 = 0;
            while (v2 < 32) {
                v0 = org.kobjects.crypt.Crypt.D_ENCRYPT(v0, v1, v2, p14, p15, p13);
                v1 = org.kobjects.crypt.Crypt.D_ENCRYPT(v1, v0, (v2 + 2), p14, p15, p13);
                v2 = (v2 + 4);
            }
            v12 = v0;
            v0 = v1;
            v1 = v12;
            v9 = (v9 + 1);
        }
        v12 = v1;
        v11 = new int[2];
        org.kobjects.crypt.Crypt.PERM_OP((((v0 >> 1) | (v0 << 31)) & -1), (((v12 >> 1) | (v12 << 31)) & -1), 1, 1.46601546875e+13, v11);
        org.kobjects.crypt.Crypt.PERM_OP(v11[1], v11[0], 8, 2.34184088514e-38, v11);
        org.kobjects.crypt.Crypt.PERM_OP(v11[1], v11[0], 2, 4.17232506322e-08, v11);
        org.kobjects.crypt.Crypt.PERM_OP(v11[1], v11[0], 16, 9.18340948595e-41, v11);
        org.kobjects.crypt.Crypt.PERM_OP(v11[1], v11[0], 4, 7.05334452008e-30, v11);
        v1 = v11[0];
        v10 = new int[2];
        v10[0] = v11[1];
        v10[1] = v1;
        return v10;
    }
    private static final int byteToUnsigned(byte p1)
    {
        v0 = p1;
        if(v0 < 0) {
            v0 = (v0 + 256);
        }
        return v0;
    }
    public static final String crypt(String p19, String p20)
    {
        while (p19.length() < 2) {
            p19 = new StringBuilder().append(p19).append("A").toString();
        }
        v5 = new StringBuffer("             ");
        v8 = p19.charAt(0);
        v7 = p19.charAt(1);
        v5.setCharAt(0, v8);
        v5.setCharAt(1, v7);
        v2 = org.kobjects.crypt.Crypt.con_salt[v8];
        v3 = (org.kobjects.crypt.Crypt.con_salt[v7] << 4);
        v12 = new byte[8];
        v9 = 0;
        while (v9 < v12.length) {
            v12[v9] = 0;
            v9 = (v9 + 1);
        }
        v9 = 0;
        while ((v9 < v12.length) && (v9 < p20.length())) {
            v12[v9] = ((byte) (p20.charAt(v9) << 1));
            v9 = (v9 + 1);
        }
        v13 = org.kobjects.crypt.Crypt.body(org.kobjects.crypt.Crypt.des_set_key(v12), v2, v3);
        v4 = new byte[9];
        org.kobjects.crypt.Crypt.intToFourBytes(v13[0], v4, 0);
        org.kobjects.crypt.Crypt.intToFourBytes(v13[1], v4, 4);
        v4[8] = 0;
        v9 = 2;
        v16 = 0;
        v15 = 128;
        while (v9 < 13) {
            v11 = 0;
            v6 = 0;
            while (v11 < 6) {
                v6 = (v6 << 1);
                if((v4[v16] & v15) != 0) {
                    v6 = (v6 | 1);
                }
                v15 = (v15 >> 1);
                if(v15 == 0) {
                    v16 = (v16 + 1);
                    v15 = 128;
                }
                v5.setCharAt(v9, ((char) org.kobjects.crypt.Crypt.cov_2char[v6]));
                v11 = (v11 + 1);
            }
            v9 = (v9 + 1);
        }
        return v5.toString();
    }
    private static int[] des_set_key(byte[] p13)
    {
        v7 = new int[32];
        v5 = new int[2];
        org.kobjects.crypt.Crypt.PERM_OP(org.kobjects.crypt.Crypt.fourBytesToInt(p13, 4), org.kobjects.crypt.Crypt.fourBytesToInt(p13, 0), 4, 7.05334452008e-30, v5);
        org.kobjects.crypt.Crypt.PERM_OP(org.kobjects.crypt.Crypt.HPERM_OP(v5[0], 14, -106954752.0), org.kobjects.crypt.Crypt.HPERM_OP(v5[1], 14, -106954752.0), 1, 1.46601546875e+13, v5);
        org.kobjects.crypt.Crypt.PERM_OP(v5[1], v5[0], 8, 2.34184088514e-38, v5);
        org.kobjects.crypt.Crypt.PERM_OP(v5[1], v5[0], 1, 1.46601546875e+13, v5);
        v1 = v5[0];
        v0 = v5[1];
        v1 = (((((v1 & 255) << 16) | (9.14767637511e-41 & v1)) | ((2.34180515203e-38 & v1) >> 16)) | ((-1.58456325029e+29 & v0) >> 4));
        v0 = (v0 & 2.52435474624e-29);
        v2 = 0;
        v4 = 0;
        while (v2 < 16) {
            if(org.kobjects.crypt.Crypt.shifts2[v2] == 0) {
                v0 = ((v0 >> 1) | (v0 << 27));
                v1 = ((v1 >> 1) | (v1 << 27));
            } else {
                v0 = ((v0 >> 2) | (v0 << 26));
                v1 = ((v1 >> 2) | (v1 << 26));
            }
            v0 = (v0 & 2.52435474624e-29);
            v1 = (v1 & 2.52435474624e-29);
            v6 = (((org.kobjects.crypt.Crypt.skb[0][(v0 & 63)] | org.kobjects.crypt.Crypt.skb[1][(((v0 >> 6) & 3) | ((v0 >> 7) & 60))]) | org.kobjects.crypt.Crypt.skb[2][(((v0 >> 13) & 15) | ((v0 >> 14) & 48))]) | org.kobjects.crypt.Crypt.skb[3][((((v0 >> 20) & 1) | ((v0 >> 21) & 6)) | ((v0 >> 22) & 56))]);
            v8 = (((org.kobjects.crypt.Crypt.skb[4][(v1 & 63)] | org.kobjects.crypt.Crypt.skb[5][(((v1 >> 7) & 3) | ((v1 >> 8) & 60))]) | org.kobjects.crypt.Crypt.skb[6][((v1 >> 15) & 63)]) | org.kobjects.crypt.Crypt.skb[7][(((v1 >> 21) & 15) | ((v1 >> 22) & 48))]);
            v3 = (v4 + 1);
            v7[v4] = (((v8 << 16) | (9.18340948595e-41 & v6)) & -1);
            v6 = ((v6 >> 16) | (nan & v8));
            v4 = (v3 + 1);
            v7[v3] = (((v6 << 4) | (v6 >> 28)) & -1);
            v2 = (v2 + 1);
        }
        return v7;
    }
    private static int fourBytesToInt(byte[] p3, int p4)
    {
        v0 = (p4 + 1);
        p4 = (v0 + 1);
        v0 = (p4 + 1);
        return ((org.kobjects.crypt.Crypt.byteToUnsigned(p3[p4]) | (org.kobjects.crypt.Crypt.byteToUnsigned(p3[v0]) << 8)) | (org.kobjects.crypt.Crypt.byteToUnsigned(p3[p4]) << 16));
    }
    public static final String generate(String p3)
    {
        return org.kobjects.crypt.Crypt.crypt(Integer.toHexString((new java.util.Random().nextInt() & 9.18340948595e-41)), p3);
    }
    private static final void intToFourBytes(int p2, byte[] p3, int p4)
    {
        v0 = (p4 + 1);
        p3[p4] = ((byte) (p2 & 255));
        p4 = (v0 + 1);
        p3[v0] = ((byte) ((p2 >> 8) & 255));
        v0 = (p4 + 1);
        p3[p4] = ((byte) ((p2 >> 16) & 255));
        p3[v0] = ((byte) ((p2 >> 24) & 255));
        return;
    }
    public static void main(String[] p4)
    {
        v0 = new StringBuffer();
        while(true) {
            v1 = System.in.read();
            if(v1 < 32) {
                break;
            }
            v0.append(((char) v1));
        }
        System.out.println(org.kobjects.crypt.Crypt.generate(v0.toString()));
        return;
    }
    public static final boolean match(String p3, String p4)
    {
        v0 = 0;
        if((p4 != 0) && (p4.length() >= 3)) {
            v0 = p4.equals(org.kobjects.crypt.Crypt.crypt(p4.substring(0, 2), p3));
        }
        return v0;
    }
    public BoundInputStream(java.io.InputStream p1, int p2)
    {
        this.is = p1;
        this.remaining = p2;
        return;
    }
    public int available()
    {
        v0 = this.is.available();
        if(v0 >= this.remaining) {
            v0 = this.remaining;
        }
        return v0;
    }
    public void close()
    {
        this.is.close();
        return;
    }
    public int read()
    {
        if(this.remaining > 0) {
            this.remaining = (this.remaining - 1);
            v0 = this.is.read();
        } else {
            v0 = 15;
        }
        return v0;
    }
    public int read(byte[] p3, int p4, int p5)
    {
        if(p5 > this.remaining) {
            p5 = this.remaining;
        }
        v0 = this.is.read(p3, p4, p5);
        if(v0 > 0) {
            this.remaining = (this.remaining - v0);
        }
        return v0;
    }
    public LookAheadReader(java.io.Reader p6)
    {
        if(Runtime.getRuntime().freeMemory() <= 1000000.0) {
            v0 = 128;
        } else {
            v0 = 16384;
        }
        v0 = new char[v0];
        this.buf = v0;
        this.bufPos = 0;
        this.bufValid = 0;
        this.reader = p6;
        return;
    }
    public void close()
    {
        this.reader.close();
        return;
    }
    public int peek(int p7)
    {
        v2 = 15;
        if(p7 > 127) {
            throw new RuntimeException("peek > 127 not supported!");
        }
        while (p7 >= this.bufValid) {
            v1 = ((this.bufPos + this.bufValid) % this.buf.length);
            Math.min((this.buf.length - v1), (this.buf.length - this.bufValid)) = this.reader.read(this.buf, v1, v0);
            if(v0 != 15) {
                this.bufValid = (this.bufValid + v0);
            }
            return v2;
        }
        v2 = this.buf[(this.bufPos + (p7 % this.buf.length))];
    }
    public int read()
    {
        v0 = this.peek(0);
        if(v0 != 15) {
            v1 = (this.bufPos + 1);
            this.bufPos = v1;
            if(v1 == this.buf.length) {
                this.bufPos = 0;
            }
            this.bufValid = (this.bufValid - 1);
        }
        return v0;
    }
    public int read(char[] p3, int p4, int p5)
    {
        v0 = 15;
        if((this.bufValid != 0) || (this.peek(0) != 15)) {
            if(p5 > this.bufValid) {
                p5 = this.bufValid;
            }
            if(p5 > (this.buf.length - this.bufPos)) {
                p5 = (this.buf.length - this.bufPos);
            }
            System.arraycopy(this.buf, this.bufPos, p3, p4, p5);
            this.bufValid = (this.bufValid - p5);
            this.bufPos = (this.bufPos + p5);
            if(this.bufPos > this.buf.length) {
                this.bufPos = (this.bufPos - this.buf.length);
            }
            v0 = p5;
        }
        return v0;
    }
    public String readLine()
    {
        if(this.peek(0) != 15) {
            v0 = this.readTo("\x0d\x0a");
            if((this.read() == 13) && (this.peek(0) == 10)) {
                this.read();
            }
        } else {
            v0 = 0;
        }
        return v0;
    }
    public String readTo(char p5)
    {
        v0 = new StringBuffer();
        while ((this.peek(0) != 15) && (this.peek(0) != p5)) {
            v0.append(((char) this.read()));
        }
        return v0.toString();
    }
    public String readTo(String p5)
    {
        v0 = new StringBuffer();
        while ((this.peek(0) != 15) && (p5.indexOf(((char) this.peek(0))) == 15)) {
            v0.append(((char) this.read()));
        }
        return v0.toString();
    }
    public String readWhile(String p5)
    {
        v0 = new StringBuffer();
        while ((this.peek(0) != 15) && (p5.indexOf(((char) this.peek(0))) != 15)) {
            v0.append(((char) this.read()));
        }
        return v0.toString();
    }
    public void skip(String p5)
    {
        new StringBuffer();
        while ((this.peek(0) != 15) && (p5.indexOf(((char) this.peek(0))) != 15)) {
            this.read();
        }
        return;
    }
    public IsoDate()
    {
        return;
    }
    public static String dateToString(java.util.Date p7, int p8)
    {
        v1 = java.util.Calendar.getInstance();
        v1.setTimeZone(java.util.TimeZone.getTimeZone("GMT"));
        v1.setTime(p7);
        v0 = new StringBuffer();
        if((p8 & 1) != 0) {
            v3 = v1.get(1);
            org.kobjects.isodate.IsoDate.dd(v0, (v3 / 100));
            org.kobjects.isodate.IsoDate.dd(v0, (v3 % 100));
            v0.append(45);
            org.kobjects.isodate.IsoDate.dd(v0, ((v1.get(2) + 0) + 1));
            v0.append(45);
            org.kobjects.isodate.IsoDate.dd(v0, v1.get(5));
            if(p8 == 3) {
                v0.append("T");
            }
        }
        if((p8 & 2) != 0) {
            org.kobjects.isodate.IsoDate.dd(v0, v1.get(11));
            v0.append(58);
            org.kobjects.isodate.IsoDate.dd(v0, v1.get(12));
            v0.append(58);
            org.kobjects.isodate.IsoDate.dd(v0, v1.get(13));
            v0.append(46);
            v2 = v1.get(14);
            v0.append(((char) ((v2 / 100) + 48)));
            org.kobjects.isodate.IsoDate.dd(v0, (v2 % 100));
            v0.append(90);
        }
        return v0.toString();
    }
    static void dd(StringBuffer p1, int p2)
    {
        p1.append(((char) ((p2 / 10) + 48)));
        p1.append(((char) ((p2 % 10) + 48)));
        return;
    }
    public static java.util.Date stringToDate(String p13, int p14)
    {
        v0 = java.util.Calendar.getInstance();
        if((p14 & 1) == 0) {
            v0.setTime(new java.util.Date(0.0));
            v0.set(11, Integer.parseInt(p13.substring(0, 2)));
            v0.set(12, Integer.parseInt(p13.substring(3, 5)));
            v0.set(13, Integer.parseInt(p13.substring(6, 8)));
            v4 = 8;
            if((8 >= p13.length()) || (p13.charAt(8) != 46)) {
                v0.set(14, 0);
            } else {
                v3 = 0;
                v2 = 100;
                while(true) {
                    v4 = (v4 + 1);
                    v1 = p13.charAt(v4);
                    if((v1 < 48) || (v1 > 57)) {
                        break;
                    }
                    v3 = (v3 + ((v1 - 48) * v2));
                    v2 = (v2 / 10);
                }
                v0.set(14, v3);
            }
            if(v4 < p13.length()) {
                if((p13.charAt(v4) != 43) && (p13.charAt(v4) != 45)) {
                    if(p13.charAt(v4) != 90) {
                        throw new RuntimeException("illegal time format!");
                    } else {
                        v0.setTimeZone(java.util.TimeZone.getTimeZone("GMT"));
                    }
                } else {
                    v0.setTimeZone(java.util.TimeZone.getTimeZone(new StringBuilder().append("GMT").append(p13.substring(v4)).toString()));
                }
            }
            v5 = v0.getTime();
        } else {
            v0.set(1, Integer.parseInt(p13.substring(0, 4)));
            v0.set(2, ((Integer.parseInt(p13.substring(5, 7)) - 1) + 0));
            v0.set(5, Integer.parseInt(p13.substring(8, 10)));
            if((p14 == 3) && (p13.length() >= 11)) {
                p13 = p13.substring(11);
            } else {
                v0.set(11, 0);
                v0.set(12, 0);
                v0.set(13, 0);
                v0.set(14, 0);
                v5 = v0.getTime();
            }
        }
        return v5;
    }
    public Decoder(java.io.InputStream p2, String p3)
    {
        this(p2, p3, 0);
        return;
    }
    public Decoder(java.io.InputStream p5, String p6, String p7)
    {
        v1 = new char[256];
        this.buf = v1;
        this.characterEncoding = p7;
        this.is = p5;
        this.boundary = new StringBuilder().append("--").append(p6).toString();
        do {
            this.readLine();
            if(this != 0) {
            } else {
                throw new java.io.IOException("Unexpected EOF");
            }
        } while(this.startsWith(this.boundary) == 0);
        if(this.endsWith("--") != 0) {
            this.eof = 1;
            p5.close();
        }
        this.consumed = 1;
        return;
    }
    public static java.util.Hashtable getHeaderElements(String p10)
    {
        v1 = "";
        v3 = 0;
        v4 = new java.util.Hashtable();
        v2 = p10.length();
        while(true) {
            if((v3 >= v2) || (p10.charAt(v3) > 32)) {
                if(v3 < v2) {
                    if(p10.charAt(v3) != 34) {
                        v0 = p10.indexOf(59, v3);
                        if(v0 != 15) {
                            v4.put(v1, p10.substring(v3, v0));
                            v3 = (v0 + 1);
                        } else {
                            v4.put(v1, p10.substring(v3));
                            return v4;
                        }
                    } else {
                        v3 = (v3 + 1);
                        v0 = p10.indexOf(34, v3);
                        if(v0 != 15) {
                            v4.put(v1, p10.substring(v3, v0));
                            v3 = (v0 + 2);
                            } else {
                                if(p10.charAt((v3 - 1)) != 59) {
                                    break;
                                }
                            }
                        } else {
                            throw new RuntimeException(new StringBuilder().append("End quote expected in ").append(p10).toString());
                        }
                    }
                    v0 = p10.indexOf(61, v3);
                    if(v0 != 15) {
                        v1 = p10.substring(v3, v0).toLowerCase().trim();
                        v3 = (v0 + 1);
                    }
                }
            } else {
                v3 = (v3 + 1);
            }
        }
        throw new RuntimeException(new StringBuilder().append("; expected in ").append(p10).toString());
    }
    private final String readLine()
    {
        v0 = 0;
        while(true) {
            v2 = this.is.read();
            if((v2 == 15) && (v0 == 0)) {
                break;
            }
            if((v2 != 15) && (v2 != 10)) {
                if(v2 != 13) {
                    if(v0 >= this.buf.length) {
                        v3 = new char[((this.buf.length * 3) / 2)];
                        System.arraycopy(this.buf, 0, v3, 0, this.buf.length);
                        this.buf = v3;
                    }
                    v1 = (v0 + 1);
                    this.buf[v0] = ((char) v2);
                    v0 = v1;
                }
            } else {
                v4 = new String(this.buf, 0, v0);
            }
            return v4;
        }
        v4 = 0;
    }
    public String getHeader(String p3)
    {
        return this.header.get(p3.toLowerCase());
    }
    public java.util.Enumeration getHeaderNames()
    {
        return this.header.keys();
    }
    public boolean next()
    {
        v2 = 0;
        if(this.consumed) {
            this.readContent(0);
        }
        if(!this.eof) {
            this.header = new java.util.Hashtable();
            while(true) {
                this.readLine();
                if((this != 0) && (this.equals("") == 0)) {
                    v0 = this.indexOf(58);
                    if(v0 == 15) {
                        break;
                    }
                    this.header.put(this.substring(0, v0).trim().toLowerCase(), this.substring((v0 + 1)).trim());
                } else {
                    this.consumed = 0;
                    v2 = 1;
                }
            }
            throw new java.io.IOException(new StringBuilder().append("colon missing in multipart header line: ").append(this).toString());
        }
        return v2;
    }
    public String readContent()
    {
        v0 = new java.io.ByteArrayOutputStream();
        this.readContent(v0);
        if(this.characterEncoding != 0) {
            v1 = new String(v0.toByteArray(), this.characterEncoding);
        } else {
            v1 = new String(v0.toByteArray());
        }
        System.out.println(new StringBuilder().append("Field content: '").append(v1).append("'").toString());
        return v1;
    }
    public void readContent(java.io.OutputStream p12)
    {
        if (!this.consumed) {
            this.getHeader("Content-Type");
            if("base64".equals(this.getHeader("Content-Transfer-Encoding")) == 0) {
                v2 = new StringBuilder().append("\x0d\x0a").append(this.boundary).toString();
                v6 = 0;
                do {
                    v3 = this.is.read();
                    if(v3 != 15) {
                        if(((char) v3) != v2.charAt(v6)) {
                            if(v6 > 0) {
                                v4 = 0;
                                while (v4 < v6) {
                                    p12.write(((byte) v2.charAt(v4)));
                                    v4 = (v4 + 1);
                                }
                                if(((char) v3) != v2.charAt(0)) {
                                    v6 = 0;
                                } else {
                                    v6 = 1;
                                }
                            }
                        } else {
                            v6 = (v6 + 1);
                            if(v6 == v2.length()) {
                                this.readLine();
                                v5 = this;
                            }
                        }
                    } else {
                        throw new RuntimeException("Unexpected EOF");
                    }
                } while(v6 != 0);
                p12.write(((byte) v3));
            } else {
                new java.io.ByteArrayOutputStream();
                while(true) {
                    this.readLine();
                    v5 = this;
                    if(this != 0) {
                        if(this.startsWith(this.boundary) != 0) {
                            break;
                        }
                        org.kobjects.base64.Base64.decode(this, p12);
                    } else {
                        throw new java.io.IOException("Unexpected EOF");
                    }
                }
            }
            if(v5.endsWith("--") != 0) {
                this.eof = 1;
            }
            this.consumed = 1;
            return;
        } else {
            throw new RuntimeException("Content already consumed!");
        }
    }
    public PimField(String p1)
    {
        this.name = p1;
        return;
    }
    public PimField(org.kobjects.pim.PimField p7)
    {
        this(p7.name);
        if((p7.value instanceof String[]) == 0) {
            this.value = p7.value;
        } else {
            v2 = new String[p7.value.length];
            System.arraycopy(p7.value, 0, v2, 0, v2.length);
            this.value = v2;
        }
        if(p7.properties != 0) {
            this.properties = new java.util.Hashtable();
            v0 = p7.properties.keys();
            while (v0.hasMoreElements() != 0) {
                v1 = v0.nextElement();
                this.properties.put(v1, p7.properties.get(v1));
            }
        }
        return;
    }
    public boolean getAttribute(String p5)
    {
        v1 = 0;
        v0 = this.getProperty("type");
        if((v0 != 0) && (v0.indexOf(p5) != 15)) {
            v1 = 1;
        }
        return v1;
    }
    public String getProperty(String p2)
    {
        if(this.properties != 0) {
            v0 = this.properties.get(p2);
        } else {
            v0 = 0;
        }
        return v0;
    }
    public Object getValue()
    {
        return this.value;
    }
    public java.util.Enumeration propertyNames()
    {
        return this.properties.keys();
    }
    public void setAttribute(String p5, boolean p6)
    {
        if(this.getAttribute(p5) != p6) {
            v1 = this.getProperty("type");
            if(!p6) {
                v0 = v1.indexOf(p5);
                if(v0 > 0) {
                    v0 = (v0 - 1);
                }
                if(v0 != 15) {
                    v1 = new StringBuilder().append(v1.substring(0, v0)).append(v1.substring(((p5.length() + v0) + 1))).toString();
                }
            } else {
                if((v1 != 0) && (v1.length() != 0)) {
                    v1 = new StringBuilder().append(v1).append(p5).toString();
                } else {
                    v1 = p5;
                }
            }
            this.setProperty("type", v1);
        }
        return;
    }
    public void setProperty(String p2, String p3)
    {
        if(this.properties != 0) {
            if(p3 != 0) {
                this.properties.put(p2, p3);
            } else {
                this.properties.remove(p2);
            }
        } else {
            if(p3 != 0) {
                this.properties = new java.util.Hashtable();
            }
        }
        return;
    }
    public void setValue(Object p1)
    {
        this.value = p1;
        return;
    }
    public String toString()
    {
        v1 = new StringBuilder().append(this.name);
        if(this.properties == 0) {
            v0 = "";
        } else {
            v0 = new StringBuilder().append(";").append(this.properties).toString();
        }
        return v1.append(v0).append(":").append(this.value).toString();
    }
    public PimItem()
    {
        this.fields = new java.util.Hashtable();
        return;
    }
    public PimItem(org.kobjects.pim.PimItem p4)
    {
        this.fields = new java.util.Hashtable();
        v0 = p4.fields();
        while (v0.hasMoreElements() != 0) {
            this.addField(new org.kobjects.pim.PimField(v0.nextElement()));
        }
        return;
    }
    public void addField(org.kobjects.pim.PimField p4)
    {
        v0 = this.fields.get(p4.name);
        if(v0 == 0) {
            v0 = new java.util.Vector();
            this.fields.put(p4.name, v0);
        }
        v0.addElement(p4);
        return;
    }
    public java.util.Enumeration fieldNames()
    {
        return this.fields.keys();
    }
    public java.util.Enumeration fields()
    {
        v3 = new java.util.Vector();
        v0 = this.fieldNames();
        while (v0.hasMoreElements() != 0) {
            v1 = this.fields(v0.nextElement());
            while (v1.hasMoreElements() != 0) {
                v3.addElement(v1.nextElement());
            }
        }
        return v3.elements();
    }
    public java.util.Enumeration fields(String p3)
    {
        v0 = this.fields.get(p3);
        if(v0 == 0) {
            v0 = new java.util.Vector();
        }
        return v0.elements();
    }
    public org.kobjects.pim.PimField getField(String p2, int p3)
    {
        return this.fields.get(p2).elementAt(p3);
    }
    public int getFieldCount(String p3)
    {
        v0 = this.fields.get(p3);
        if(v0 != 0) {
            v1 = v0.size();
        } else {
            v1 = 0;
        }
        return v1;
    }
    public int getType(String p3)
    {
        if(this.getArraySize(p3) != 15) {
            v0 = 1;
        } else {
            v0 = 0;
        }
        return v0;
    }
    public void removeField(String p2, int p3)
    {
        this.fields.get(p2).removeElementAt(p3);
        return;
    }
    public String toString()
    {
        return new StringBuilder().append(this.getType()).append(":").append(this.fields.toString()).toString();
    }
    public PimParser(java.io.Reader p2, Class p3)
    {
        this.reader = new org.kobjects.io.LookAheadReader(p2);
        this.type = p3;
        return;
    }
     String[] readArrayValue(int p9)
    {
        v4 = new java.util.Vector();
        v0 = new StringBuffer();
        v3 = 1;
        do {
            v0.append(this.reader.readTo(";\x0a\x0d"));
            switch(this.reader.read()) {
                case 10:
                    if(this.reader.peek(0) == 32) {
                        this.reader.read();
                    } else {
                        v3 = 0;
                    }
                    break;
                case 13:
                    } else {
                        this.reader.read();
                    }
                    break;
                case 59:
                    v4.addElement(v0.toString());
                    v0.setLength(0);
                    break;
            }
        } while(v3 != 0);
        if(v0.length() != 0) {
            v4.addElement(v0.toString());
        }
        v2 = new String[p9];
        v1 = 0;
        while (v1 < v2.length) {
            v2[v1] = v4.elementAt(v1);
            v1 = (v1 + 1);
        }
        return v2;
    }
    public org.kobjects.pim.PimItem readItem()
    {
        v0 = this.readName();
        if(v0 != 0) {
            if(v0.equals("begin") != 0) {
                v3 = this.type.newInstance();
                this.reader.read();
                if(v3.getType().equals(this.readStringValue().toLowerCase()) == 0) {
                    throw new RuntimeException("item types do not match!");
                }
                while(true) {
                    v4 = this.readName();
                    if(v4.equals("end") != 0) {
                        break;
                    }
                    v2 = new org.kobjects.pim.PimField(v4);
                    this.readProperties(v2);
                    switch(v3.getType(v4)) {
                        case 1:
                            v5 = this.readArrayValue(v3.getArraySize(v4));
                            break;
                        default:
                            v5 = this.readStringValue();
                    }
                    v2.setValue(v5);
                    System.out.println(new StringBuilder().append("value:").append(v5).toString());
                    v3.addField(v2);
                }
                this.reader.read();
                System.out.println(new StringBuilder().append("end:").append(this.readStringValue()).toString());
            } else {
                throw new RuntimeException("'begin:' expected");
            }
        } else {
            v3 = 0;
        }
        return v3;
    }
     String readName()
    {
        v0 = this.reader.readTo(":;").trim().toLowerCase();
        System.out.println(new StringBuilder().append("name:").append(v0).toString());
        if(this.reader.peek(0) == 15) {
            v0 = 0;
        }
        return v0;
    }
     void readProperties(org.kobjects.pim.PimField p5)
    {
        v0 = this.reader.read();
        while (v0 == 32) {
            v0 = this.reader.read();
        }
        while (v0 != 58) {
            v1 = this.reader.readTo(":;=").trim().toLowerCase();
            v0 = this.reader.read();
            if(v0 != 61) {
                p5.setAttribute(v1, 1);
            } else {
                p5.setProperty(v1, this.reader.readTo(":;").trim().toLowerCase());
                v0 = this.reader.read();
            }
        }
        return;
    }
     String readStringValue()
    {
        v0 = this.reader.readLine();
        while (this.reader.peek(0) == 32) {
            this.reader.read();
            v0 = new StringBuilder().append(v0).append(this.reader.readLine()).toString();
        }
        return v0;
    }
    public PimWriter(java.io.Writer p1)
    {
        this.writer = p1;
        return;
    }
    public void writeEntry(org.kobjects.pim.PimItem p7)
    {
        this.writer.write("begin:");
        this.writer.write(p7.getType());
        this.writer.write("\x0d\x0a");
        v0 = p7.fieldNames();
        while (v0.hasMoreElements() != 0) {
            v3 = v0.nextElement();
            v2 = 0;
            while (v2 < p7.getFieldCount(v3)) {
                v1 = p7.getField(v3, v2);
                this.writer.write(v3);
                this.writer.write(58);
                this.writer.write(v1.getValue().toString());
                this.writer.write("\x0d\x0a");
                v2 = (v2 + 1);
            }
        }
        this.writer.write("end:");
        this.writer.write(p7.getType());
        this.writer.write("\x0d\x0a\x0d\x0a");
        return;
    }
    public RssReader(java.io.Reader p2)
    {
        this.xr = new org.kobjects.xml.XmlReader(p2);
        return;
    }
    public String[] next()
    {
        v2 = new String[5];
        while (this.xr.next() != 1) {
            if(this.xr.getType() == 2) {
                v3 = this.xr.getName().toLowerCase();
                if((v3.equals("item") != 0) || (v3.endsWith(":item") != 0)) {
                }
                while (this.xr.next() != 3) {
                    if(this.xr.getType() == 2) {
                        v4 = this.xr.getName().toLowerCase();
                        v1 = v4.indexOf(":");
                        if(v1 != 15) {
                            v4 = v4.substring((v1 + 1));
                        }
                        v0 = new StringBuffer();
                        this.readText(v0);
                        v5 = v0.toString();
                        if(v4.equals("title") == 0) {
                            if(v4.equals("link") == 0) {
                                if(v4.equals("description") == 0) {
                                    if(v4.equals("date") == 0) {
                                        if(v4.equals("author") != 0) {
                                            v2[4] = v5;
                                        }
                                    } else {
                                        v2[3] = v5;
                                    }
                                } else {
                                    v2[2] = v5;
                                }
                            } else {
                                v2[1] = v5;
                            }
                        } else {
                            v2[0] = v5;
                        }
                    }
                }
            }
            return v2;
        }
        v2 = 0;
    }
     void readText(StringBuffer p3)
    {
        while (this.xr.next() != 3) {
            switch(this.xr.getType()) {
                case 2:
                    this.readText(p3);
                    break;
                case 4:
                    p3.append(this.xr.getText());
                    break;
                default:
                    if (this.xr.next() != 3) {
                    } else {
                    }
            }
        }
        return;
    }
     ChainedRuntimeException()
    {
        return;
    }
     ChainedRuntimeException(Exception p3, String p4)
    {
        v0 = new StringBuilder();
        if(p4 == 0) {
            p4 = "rethrown";
        }
        this(v0.append(p4).append(": ").append(p3.toString()).toString());
        this.chain = p3;
        return;
    }
    public static org.kobjects.util.ChainedRuntimeException create(Exception p1, String p2)
    {
        return Class.forName("org.kobjects.util.ChainedRuntimeExceptionSE").newInstance()._create(p1, p2);
    }
     org.kobjects.util.ChainedRuntimeException _create(Exception p3, String p4)
    {
        throw new RuntimeException("ERR!");
    }
    public Exception getChained()
    {
        return this.chain;
    }
    public void printStackTrace()
    {
        super.printStackTrace();
        if(this.chain != 0) {
            this.chain.printStackTrace();
        }
        return;
    }
    public Csv()
    {
        return;
    }
    public static String[] decode(String p15)
    {
        v9 = new java.util.Vector();
        v5 = 0;
        v4 = p15.length();
        while ((v5 >= v4) || (p15.charAt(v5) > 32)) {
            if(v5 < v4) {
                if(p15.charAt(v5) != 34) {
                    v7 = p15.indexOf(44, v5);
                    if(v7 != 15) {
                        v9.addElement(p15.substring(v5, v7).trim());
                        v5 = (v7 + 1);
                    } else {
                        v9.addElement(p15.substring(v5).trim());
                    }
                } else {
                    v5 = (v5 + 1);
                    v0 = new StringBuffer();
                    while(true) {
                        v6 = (v5 + 1);
                        v1 = p15.charAt(v5);
                        if((v1 != 94) || (v6 >= v4)) {
                            if(v1 != 34) {
                                v5 = v6;
                            } else {
                                if((v6 == v4) || (p15.charAt(v6) != 34)) {
                                    break;
                                }
                                v5 = (v6 + 1);
                            }
                            v0.append(v1);
                        } else {
                            v5 = (v6 + 1);
                            v2 = p15.charAt(v6);
                            if(v2 != 94) {
                                v2 = ((char) (v2 - 64));
                            }
                            v0.append(v2);
                        }
                    }
                    v9.addElement(v0.toString());
                    v5 = v6;
                    while ((v5 < v4) && (p15.charAt(v5) <= 32)) {
                        v5 = (v5 + 1);
                    }
                    if(v5 >= v4) {
                        v8 = new String[v9.size()];
                        v3 = 0;
                        while (v3 < v8.length) {
                            v8[v3] = v9.elementAt(v3);
                            v3 = (v3 + 1);
                        }
                        return v8;
                    } else {
                        if(p15.charAt(v5) == 44) {
                            v5 = (v5 + 1);
                        } else {
                            throw new RuntimeException(new StringBuilder().append("Comma expected at ").append(v5).append(" line: ").append(p15).toString());
                        }
                    }
                }
            }
        }
        v5 = (v5 + 1);
    }
    public static String encode(String p5, char p6)
    {
        v0 = new StringBuffer();
        v2 = 0;
        while (v2 < p5.length()) {
            v1 = p5.charAt(v2);
            if((v1 != p6) && (v1 != 94)) {
                if(v1 >= 32) {
                    v0.append(v1);
                } else {
                    v0.append(94);
                    v0.append(((char) (v1 + 64)));
                }
            } else {
                v0.append(v1);
                v0.append(v1);
            }
            v2 = (v2 + 1);
        }
        return v0.toString();
    }
    public static String encode(Object[] p5)
    {
        v0 = new StringBuffer();
        v1 = 0;
        while (v1 < p5.length) {
            if(v1 != 0) {
                v0.append(44);
            }
            v2 = p5[v1];
            if(((v2 instanceof Number) == 0) && ((v2 instanceof Boolean) == 0)) {
                v0.append(34);
                v0.append(org.kobjects.util.Csv.encode(v2.toString(), 34));
                v0.append(34);
            } else {
                v0.append(v2.toString());
            }
            v1 = (v1 + 1);
        }
        return v0.toString();
    }
    public SingleEnumeration(Object p1)
    {
        this.object = p1;
        return;
    }
    public boolean hasMoreElements()
    {
        if(this.object == 0) {
            v0 = 0;
        } else {
            v0 = 1;
        }
        return v0;
    }
    public Object nextElement()
    {
        this.object = 0;
        return this.object;
    }
    public Strings()
    {
        return;
    }
    public static String beautify(String p5)
    {
        v0 = new StringBuffer();
        if(p5.length() > 0) {
            v0.append(Character.toUpperCase(p5.charAt(0)));
            v2 = 1;
            while (v2 < (p5.length() - 1)) {
                v1 = p5.charAt(v2);
                if((Character.isUpperCase(v1) != 0) && ((Character.isLowerCase(p5.charAt((v2 - 1))) != 0) && (Character.isLowerCase(p5.charAt((v2 + 1))) != 0))) {
                    v0.append(" ");
                }
                v0.append(v1);
                v2 = (v2 + 1);
            }
            if(p5.length() > 1) {
                v0.append(p5.charAt((p5.length() - 1)));
            }
        }
        return v0.toString();
    }
    public static String fill(String p4, int p5, char p6)
    {
        if(p5 >= 0) {
            v1 = 0;
        } else {
            v1 = 1;
        }
        p5 = Math.abs(p5);
        if(p4.length() < p5) {
            v0 = new StringBuffer();
            p5 = (p5 - p4.length());
            while (p5 > 0) {
                v0.append(p6);
                p5 = (p5 - 1);
            }
            if(v1 == 0) {
                p4 = new StringBuilder().append(p4).append(v0.toString()).toString();
            } else {
                v0.append(p4);
                p4 = v0.toString();
            }
        }
        return p4;
    }
    public static String lTrim(String p4, String p5)
    {
        v0 = 0;
        while (v0 < p4.length()) {
            if(p5 != 0) {
                if(p5.indexOf(p4.charAt(v0)) == 15) {
                    break;
                }
            } else {
                if(p4.charAt(v0) > 32) {
                }
            }
            v0 = (v0 + 1);
        }
        if(v0 != 0) {
            p4 = p4.substring(v0);
        }
        return p4;
    }
    public static String rTrim(String p3, String p4)
    {
        v0 = (p3.length() - 1);
        while (v0 >= 0) {
            if(p4 != 0) {
                if(p4.indexOf(p3.charAt(v0)) == 15) {
                    break;
                }
            } else {
                if(p3.charAt(v0) > 32) {
                }
            }
            v0 = (v0 - 1);
        }
        if(v0 != (p3.length() - 1)) {
            p3 = p3.substring(0, (v0 + 1));
        }
        return p3;
    }
    public static String replace(String p5, String p6, String p7)
    {
        v1 = p5.indexOf(p6);
        if(v1 != 15) {
            v0 = new StringBuffer(p5.substring(0, v1));
            while(true) {
                v0.append(p7);
                v1 = (v1 + p6.length());
                v2 = p5.indexOf(p6, v1);
                if(v2 == 15) {
                    break;
                }
                v0.append(p5.substring(v1, v2));
                v1 = v2;
            }
            v0.append(p5.substring(v1));
            p5 = v0.toString();
        }
        return p5;
    }
    public static String toAscii(String p5)
    {
        v0 = new StringBuffer();
        v2 = 0;
        while (v2 < p5.length()) {
            v1 = p5.charAt(v2);
            if(v1 > 32) {
                if(v1 >= 127) {
                    switch(v1) {
                        case 196:
                            v0.append("Ae");
                            break;
                        case 214:
                            v0.append("Oe");
                            break;
                        case 220:
                            v0.append("Ue");
                            break;
                        case 223:
                            v0.append("ss");
                            break;
                        case 228:
                            v0.append("ae");
                            break;
                        case 246:
                            v0.append("oe");
                            break;
                        case 252:
                            v0.append("ue");
                            break;
                        default:
                            v0.append(63);
                    }
                } else {
                    v0.append(v1);
                }
            } else {
                v0.append(32);
            }
            v2 = (v2 + 1);
        }
        return v0.toString();
    }
    public Util()
    {
        return;
    }
    public static String buildUrl(String p3, String p4)
    {
        v0 = p4.indexOf(58);
        if((p4.startsWith("/") == 0) && (v0 != 1)) {
            if((v0 <= 2) || (v0 >= 6)) {
                if(p3 != 0) {
                    if(p3.indexOf(58) == 15) {
                        p3 = new StringBuilder().append("file:///").append(p3).toString();
                    }
                    if(p3.endsWith("/") == 0) {
                        p3 = new StringBuilder().append(p3).append("/").toString();
                    }
                } else {
                    p3 = "file:///";
                }
                p4 = new StringBuilder().append(p3).append(p4).toString();
            }
        } else {
            p4 = new StringBuilder().append("file:///").append(p4).toString();
        }
        return p4;
    }
    public static int indexOf(Object[] p2, Object p3)
    {
        v0 = 0;
        while (v0 < p2.length) {
            if(p2[v0].equals(p3) == 0) {
                v0 = (v0 + 1);
            }
            return v0;
        }
        v0 = 15;
    }
    public static void sort(Object[] p9, int p10, int p11)
    {
        if((p11 - p10) > 2) {
            if((p11 - p10) != 3) {
                v5 = ((p10 + p11) / 2);
                org.kobjects.util.Util.sort(p9, p10, v5);
                org.kobjects.util.Util.sort(p9, v5, p11);
                v6 = new Object[(p11 - p10)];
                v1 = p10;
                v3 = v5;
                v0 = 0;
                while (v0 < v6.length) {
                    if(v1 != v5) {
                        if((v3 != p11) && (p9[v1].toString().compareTo(p9[v3].toString()) >= 0)) {
                            v4 = (v3 + 1);
                            v6[v0] = p9[v3];
                            v3 = v4;
                        } else {
                            v2 = (v1 + 1);
                            v6[v0] = p9[v1];
                            v1 = v2;
                        }
                    } else {
                        v4 = (v3 + 1);
                        v6[v0] = p9[v3];
                        v3 = v4;
                    }
                    v0 = (v0 + 1);
                }
                System.arraycopy(v6, 0, p9, p10, v6.length);
            } else {
                org.kobjects.util.Util.sort(p9, p10, (p10 + 2));
                org.kobjects.util.Util.sort(p9, (p10 + 1), (p10 + 3));
                org.kobjects.util.Util.sort(p9, p10, (p10 + 2));
            }
        } else {
            if(((p11 - p10) == 2) && (p9[p10].toString().compareTo(p9[(p10 + 1)].toString()) > 0)) {
                v6 = p9[p10];
                p9[p10] = p9[(p10 + 1)];
                p9[(p10 + 1)] = v6;
            }
        }
        return;
    }
    public static java.io.OutputStream streamcopy(java.io.InputStream p7, java.io.OutputStream p8)
    {
        if(Runtime.getRuntime().freeMemory() < 1048576.0) {
            v2 = 128;
        } else {
            v2 = 16384;
        }
        v0 = new byte[v2];
        while(true) {
            v1 = p7.read(v0, 0, v0.length);
            if(v1 == 15) {
                break;
            }
            p8.write(v0, 0, v1);
        }
        p7.close();
        return p8;
    }
    public XmlReader(java.io.Reader p10)
    {
        v0 = new String[4];
        this.elementStack = v0;
        if(Runtime.getRuntime().freeMemory() < 1048576.0) {
            v0 = 128;
        } else {
            v0 = 8192;
        }
        v0 = new char[v0];
        this.srcBuf = v0;
        v0 = new char[128];
        this.txtBuf = v0;
        v0 = new String[16];
        this.attributes = v0;
        v0 = new String[5];
        v0[0] = "Start Document";
        v0[1] = "End Document";
        v0[2] = "Start Tag";
        v0[3] = "End Tag";
        v0[4] = "Text";
        this.TYPES = v0;
        this.reader = p10;
        this.peek0 = p10.read();
        this.peek1 = p10.read();
        if(this.peek0 != 15) {
            v0 = 0;
        } else {
            v0 = 1;
        }
        this.eof = v0;
        this.entityMap = new java.util.Hashtable();
        this.entityMap.put("amp", "&");
        this.entityMap.put("apos", "'");
        this.entityMap.put("gt", ">");
        this.entityMap.put("lt", "<");
        this.entityMap.put("quot", """);
        this.line = 1;
        this.column = 1;
        return;
    }
    private static final String[] ensureCapacity(String[] p3, int p4)
    {
        if(p3.length < p4) {
            v0 = new String[(p4 + 16)];
            System.arraycopy(p3, 0, v0, 0, p3.length);
            p3 = v0;
        }
        return p3;
    }
    private final void exception(String p4)
    {
        throw new java.io.IOException(new StringBuilder().append(p4).append(" pos: ").append(this.getPositionDescription()).toString());
    }
    private final void parseDoctype()
    {
        v1 = 1;
        while(true) {
            this.read();
            switch(this) {
                case -1:
                    this.exception("Unexpected EOF");
                    break;
                case 60:
                    break;
                case 62:
                    v1 = (v1 - 1);
                    if(v1 == 0) {
                        break;
                    }
                    break;
                default:
            }
            v1 = (v1 + 1);
        }
        return;
    }
    private final void parseEndTag()
    {
        this.read();
        this.read();
        this.readName();
        this.name = this;
        if((this.depth == 0) && (this.relaxed)) {
            this.exception("element stack empty");
        }
        if(this.name.equals(this.elementStack[(this.depth - 1)]) == 0) {
            if(this.relaxed) {
                this.exception(new StringBuilder().append("expected: ").append(this.elementStack[this.depth]).toString());
            }
        } else {
            this.depth = (this.depth - 1);
        }
        this.skip();
        this.read(62);
        return;
    }
    private final void parseLegacy(boolean p8)
    {
        v2 = "";
        this.read();
        this.read();
        if(this != 63) {
            if(this != 33) {
                if(this != 91) {
                    this.exception(new StringBuilder().append("cantreachme: ").append(this).toString());
                }
                v2 = "CDATA[";
                v3 = 93;
            } else {
                if(this.peek0 != 45) {
                    v2 = "DOCTYPE";
                    v3 = 15;
                } else {
                    v2 = "--";
                    v3 = 45;
                }
            }
        } else {
            v3 = 63;
        }
        v1 = 0;
        while (v1 < v2.length()) {
            this.read(v2.charAt(v1));
            v1 = (v1 + 1);
        }
        if(v3 != 15) {
            do {
                if(this.eof) {
                    this.exception("Unexpected EOF");
                }
                this.read();
                if(p8) {
                    this.push(this);
                }
            } while(((v3 != 63) && (this != v3)) || ((this.peek0 != v3) || (this.peek1 != 62)));
            this.read();
            this.read();
            if((p8) && (v3 != 63)) {
                this.pop((this.txtPos - 1));
            }
        } else {
            this.parseDoctype();
        }
        return;
    }
    private final void parseStartTag()
    {
        this.read();
        this.readName();
        this.name = this;
        this.elementStack = org.kobjects.xml.XmlReader.ensureCapacity(this.elementStack, (this.depth + 1));
        v7 = this.depth;
        this.depth = (v7 + 1);
        this.elementStack[v7] = this.name;
        do {
            this.skip();
            v1 = this.peek0;
            if(v1 != 47) {
                if(v1 != 62) {
                    if(v1 == 15) {
                        this.exception("Unexpected EOF");
                    }
                    this.readName();
                    if(this.length() == 0) {
                        this.exception("attr name expected");
                    }
                    this.skip();
                    this.read(61);
                    this.skip();
                    this.read();
                    v2 = this;
                    if((this != 39) && (this != 34)) {
                        if(this.relaxed) {
                            this.exception(new StringBuilder().append("<").append(this.name).append(">: invalid delimiter: ").append(((char) this)).toString());
                        }
                        v2 = 32;
                    }
                    v6 = this.attributeCount;
                    this.attributeCount = (v6 + 1);
                    v3 = (v6 << 1);
                    this.attributes = org.kobjects.xml.XmlReader.ensureCapacity(this.attributes, (v3 + 4));
                    v4 = (v3 + 1);
                    this.attributes[v3] = this;
                    this.pushText(v2);
                    this.pop(this.txtPos);
                    this.attributes[v4] = this;
                } else {
                    this.read();
                }
            } else {
                this.degenerated = 1;
                this.read();
                this.skip();
                this.read(62);
            }
            return;
        } while(v2 == 32);
        this.read();
    }
    private final int peekType()
    {
        switch(this.peek0) {
            case -1:
                v0 = 1;
                break;
            case 38:
                v0 = 6;
                break;
            case 60:
                switch(this.peek1) {
                    case 33:
                    case 63:
                        v0 = 999;
                        break;
                    case 47:
                        v0 = 3;
                        break;
                    case 91:
                        v0 = 5;
                        break;
                    default:
                        v0 = 2;
                }
                break;
            default:
                v0 = 4;
        }
        return v0;
    }
    private final String pop(int p4)
    {
        v0 = new String(this.txtBuf, p4, (this.txtPos - p4));
        this.txtPos = p4;
        return v0;
    }
    private final void push(int p5)
    {
        if(p5 != 0) {
            if(this.txtPos == this.txtBuf.length) {
                v0 = new char[(((this.txtPos * 4) / 3) + 4)];
                System.arraycopy(this.txtBuf, 0, v0, 0, this.txtPos);
                this.txtBuf = v0;
            }
            v2 = this.txtPos;
            this.txtPos = (v2 + 1);
            this.txtBuf[v2] = ((char) p5);
        }
        return;
    }
    private final boolean pushText(int p5)
    {
        v1 = 1;
        v0 = this.peek0;
        while ((this.eof) && ((v0 != p5) && ((p5 != 32) || ((v0 > 32) && (v0 != 62))))) {
            if(v0 != 38) {
                if(v0 > 32) {
                    v1 = 0;
                }
                this.read();
                this.push(this);
            } else {
                if(this.pushEntity() == 0) {
                    v1 = 0;
                }
            }
            v0 = this.peek0;
        }
        return v1;
    }
    private final int read()
    {
        v0 = this.peek0;
        this.peek0 = this.peek1;
        if(this.peek0 != 15) {
            if((v0 == 10) || (v0 == 13)) {
                this.line = (this.line + 1);
                this.column = 0;
                if((v0 == 13) && (this.peek0 == 10)) {
                    this.peek0 = 0;
                }
            }
            this.column = (this.column + 1);
            if(this.srcPos >= this.srcCount) {
                this.srcCount = this.reader.read(this.srcBuf, 0, this.srcBuf.length);
                if(this.srcCount > 0) {
                    this.srcPos = 0;
                } else {
                    this.peek1 = 15;
                    return v0;
                }
            }
            v2 = this.srcPos;
            this.srcPos = (v2 + 1);
            this.peek1 = this.srcBuf[v2];
        } else {
            this.eof = 1;
        }
    }
    private final void read(char p3)
    {
        this.read();
        if(this != p3) {
            if(!this.relaxed) {
                this.exception(new StringBuilder().append("expected: '").append(p3).append("'").toString());
            } else {
                if(p3 <= 32) {
                    this.skip();
                    this.read();
                }
            }
        }
        return;
    }
    private final String readName()
    {
        v0 = this.peek0;
        if(((v0 < 97) || (v0 > 122)) && (((v0 < 65) || (v0 > 90)) && ((v0 != 95) && ((v0 != 58) && (this.relaxed))))) {
            this.exception("name expected");
        }
        do {
            this.read();
            this.push(this);
            v0 = this.peek0;
        } while(((v0 >= 97) && (v0 <= 122)) || (((v0 >= 65) && (v0 <= 90)) || (((v0 >= 48) && (v0 <= 57)) || ((v0 == 95) || ((v0 == 45) || ((v0 == 58) || (v0 == 46)))))));
        this.pop(this.txtPos);
        return this;
    }
    private final void skip()
    {
        while ((this.eof) && (this.peek0 <= 32)) {
            this.read();
        }
        return;
    }
    public void defineCharacterEntity(String p2, String p3)
    {
        this.entityMap.put(p2, p3);
        return;
    }
    public int getAttributeCount()
    {
        return this.attributeCount;
    }
    public String getAttributeName(int p3)
    {
        if (p3 < this.attributeCount) {
            return this.attributes[(p3 << 1)];
        } else {
            throw new IndexOutOfBoundsException();
        }
    }
    public String getAttributeValue(int p3)
    {
        if (p3 < this.attributeCount) {
            return this.attributes[((p3 << 1) + 1)];
        } else {
            throw new IndexOutOfBoundsException();
        }
    }
    public String getAttributeValue(String p4)
    {
        v0 = ((this.attributeCount << 1) - 2);
        while (v0 >= 0) {
            if(this.attributes[v0].equals(p4) == 0) {
                v0 = (v0 - 2);
            } else {
                v1 = this.attributes[(v0 + 1)];
            }
            return v1;
        }
        v1 = 0;
    }
    public int getColumnNumber()
    {
        return this.column;
    }
    public int getDepth()
    {
        return this.depth;
    }
    public int getLineNumber()
    {
        return this.line;
    }
    public String getName()
    {
        return this.name;
    }
    public String getPositionDescription()
    {
        if(this.type >= this.TYPES.length) {
            v1 = "Other";
        } else {
            v1 = this.TYPES[this.type];
        }
        v0 = new StringBuffer(v1);
        v0.append(new StringBuilder().append(" @").append(this.line).append(":").append(this.column).append(": ").toString());
        if((this.type != 2) && (this.type != 3)) {
            if(!this.isWhitespace) {
                v0.append(this.getText());
            } else {
                v0.append("[whitespace]");
            }
        } else {
            v0.append(60);
            if(this.type == 3) {
                v0.append(47);
            }
            v0.append(this.name);
            v0.append(62);
        }
        return v0.toString();
    }
    public String getText()
    {
        if(this.text == 0) {
            this.pop(0);
            this.text = this;
        }
        return this.text;
    }
    public int getType()
    {
        return this.type;
    }
    public boolean isEmptyElementTag()
    {
        return this.degenerated;
    }
    public boolean isWhitespace()
    {
        return this.isWhitespace;
    }
    public int next()
    {
        v0 = 1;
        if(!this.degenerated) {
            this.txtPos = 0;
            this.isWhitespace = 1;
            do {
                this.attributeCount = 0;
                this.name = 0;
                this.text = 0;
                this.peekType();
                this.type = this;
                switch(this.type) {
                    case 1:
                        break;
                    case 2:
                        this.parseStartTag();
                        break;
                    case 3:
                        this.parseEndTag();
                        break;
                    case 4:
                        this.pushText(60);
                        this.isWhitespace = (this.isWhitespace & this);
                        break;
                    case 5:
                        this.parseLegacy(1);
                        this.isWhitespace = 0;
                        this.type = 4;
                        break;
                    case 6:
                        this.isWhitespace = (this.isWhitespace & this.pushEntity());
                        this.type = 4;
                        break;
                    default:
                        this.parseLegacy(0);
                }
                if(this.type <= 4) {
                    if(this.type == 4) {
                        this.peekType();
                    }
                }
            } while(this >= 4);
            if(this.type != 4) {
                v0 = 0;
            }
            this.isWhitespace = (v0 & this.isWhitespace);
            v0 = this.type;
        } else {
            this.type = 3;
            this.degenerated = 0;
            this.depth = (this.depth - 1);
            v0 = this.type;
        }
        return v0;
    }
    public final boolean pushEntity()
    {
        v6 = 1;
        this.read();
        while ((this.eof) && (this.peek0 != 59)) {
            this.read();
            this.push(this);
        }
        this.pop(this.txtPos);
        this.read();
        if((this.length() <= 0) || (this.charAt(0) != 35)) {
            v4 = this.entityMap.get(this);
            v5 = 1;
            if(v4 == 0) {
                v4 = new StringBuilder().append("&").append(this).append(";").toString();
            }
            v2 = 0;
            while (v2 < v4.length()) {
                v0 = v4.charAt(v2);
                if(v0 > 32) {
                    v5 = 0;
                }
                this.push(v0);
                v2 = (v2 + 1);
            }
            v6 = v5;
        } else {
            if(this.charAt(1) != 120) {
                v0 = Integer.parseInt(this.substring(1));
            } else {
                v0 = Integer.parseInt(this.substring(2), 16);
            }
            this.push(v0);
            if(v0 > 32) {
                v6 = 0;
            }
        }
        return v6;
    }
    public String readText()
    {
        if(this.type == 4) {
            v0 = this.getText();
            this.next();
        } else {
            v0 = "";
        }
        return v0;
    }
    public void require(int p3, String p4)
    {
        if((this.type == 4) && ((p3 != 4) && (this.isWhitespace() != 0))) {
            this.next();
        }
        if((p3 != this.type) || ((p4 != 0) && (p4.equals(this.getName()) == 0))) {
            this.exception(new StringBuilder().append("expected: ").append(this.TYPES[p3]).append("/").append(p4).toString());
        }
        return;
    }
    public Driver()
    {
        return;
    }
    public static void main(String[] p4)
    {
        new org.kobjects.xmlrpc.XmlRpcParser(new org.kobjects.xml.XmlReader(new java.io.FileReader(p4[0]))).parseResponse();
        return;
    }
    public XmlRpcParser(org.kobjects.xml.XmlReader p2)
    {
        this.parser = 0;
        this.parser = p2;
        return;
    }
    private final int nextTag()
    {
        this.parser.getType();
        v0 = this.parser.next();
        if((v0 == 4) && (this.parser.isWhitespace() != 0)) {
            v0 = this.parser.next();
        }
        if ((v0 == 3) || (v0 == 2)) {
            return v0;
        } else {
            throw new java.io.IOException(new StringBuilder().append("unexpected type: ").append(v0).toString());
        }
    }
    private final String nextText()
    {
        if (this.parser.getType() == 2) {
            v1 = this.parser.next();
            if(v1 != 4) {
                v0 = "";
            } else {
                v0 = this.parser.getText();
                v1 = this.parser.next();
            }
            if (v1 == 3) {
                return v0;
            } else {
                throw new java.io.IOException("END_TAG expected");
            }
        } else {
            throw new java.io.IOException("precondition: START_TAG");
        }
    }
    private final java.util.Vector parseArray()
    {
        this.nextTag();
        this.nextTag();
        v0 = this;
        v1 = new java.util.Vector();
        while (v0 != 3) {
            this.parseValue();
            v1.addElement(this);
            v0 = this.parser.getType();
        }
        this.nextTag();
        this.nextTag();
        return v1;
    }
    private final Object parseFault()
    {
        this.nextTag();
        this.parseValue();
        this.nextTag();
        return this;
    }
    private final Object parseParams()
    {
        v0 = new java.util.Vector();
        this.nextTag();
        v1 = this;
        while (v1 != 3) {
            this.nextTag();
            this.parseValue();
            v0.addElement(this);
            this.nextTag();
            v1 = this;
        }
        this.nextTag();
        return v0;
    }
    private final java.util.Hashtable parseStruct()
    {
        v1 = new java.util.Hashtable();
        this.nextTag();
        v2 = this;
        while (v2 != 3) {
            this.nextTag();
            this.nextText();
            this.nextTag();
            this.parseValue();
            v1.put(this, this);
            this.nextTag();
            v2 = this;
        }
        this.nextTag();
        return v1;
    }
    private final Object parseValue()
    {
        v2 = 0;
        v0 = this.parser.next();
        if(v0 == 4) {
            v2 = this.parser.getText();
            v0 = this.parser.next();
        }
        if(v0 == 2) {
            v1 = this.parser.getName();
            if(v1.equals("array") == 0) {
                if(v1.equals("struct") == 0) {
                    if(v1.equals("string") == 0) {
                        if((v1.equals("i4") == 0) && (v1.equals("int") == 0)) {
                            if(v1.equals("boolean") == 0) {
                                if(v1.equals("dateTime.iso8601") == 0) {
                                    if(v1.equals("base64") == 0) {
                                        if(v1.equals("double") != 0) {
                                            this.nextText();
                                            v2 = this;
                                        }
                                    } else {
                                        this.nextText();
                                        v2 = org.kobjects.base64.Base64.decode(this);
                                    }
                                } else {
                                    this.nextText();
                                    v2 = org.kobjects.isodate.IsoDate.stringToDate(this, 3);
                                }
                            } else {
                                this.nextText();
                                v2 = new Boolean(this.trim().equals("1"));
                            }
                        } else {
                            this.nextText();
                            v2 = new Integer(Integer.parseInt(this.trim()));
                        }
                    } else {
                        this.nextText();
                        v2 = this;
                    }
                    this.nextTag();
                } else {
                    this.parseStruct();
                    v2 = this;
                }
            } else {
                this.parseArray();
                v2 = this;
            }
        }
        this.nextTag();
        return v2;
    }
    public final Object parseResponse()
    {
        v1 = 0;
        this.nextTag();
        this.nextTag();
        if(this == 2) {
            if("fault".equals(this.parser.getName()) == 0) {
                if("params".equals(this.parser.getName()) != 0) {
                    this.parseParams();
                    v1 = this;
                }
            } else {
                this.parseFault();
                v1 = this;
            }
        }
        return v1;
    }
    public HeaderProperty(String p1, String p2)
    {
        this.key = p1;
        this.value = p2;
        return;
    }
    public String getKey()
    {
        return this.key;
    }
    public String getValue()
    {
        return this.value;
    }
    public void setKey(String p1)
    {
        this.key = p1;
        return;
    }
    public void setValue(String p1)
    {
        this.value = p1;
        return;
    }
    public SoapEnvelope(int p2)
    {
        this.version = p2;
        if(p2 != 100) {
            this.xsi = "http://www.w3.org/2001/XMLSchema-instance";
            this.xsd = "http://www.w3.org/2001/XMLSchema";
        } else {
            this.xsi = "http://www.w3.org/1999/XMLSchema-instance";
            this.xsd = "http://www.w3.org/1999/XMLSchema";
        }
        if(p2 >= 120) {
            this.enc = "http://www.w3.org/2003/05/soap-encoding";
            this.env = "http://www.w3.org/2003/05/soap-envelope";
        } else {
            this.enc = "http://schemas.xmlsoap.org/soap/encoding/";
            this.env = "http://schemas.xmlsoap.org/soap/envelope/";
        }
        return;
    }
    public static boolean stringToBoolean(String p2)
    {
        v0 = 0;
        if(p2 != 0) {
            p2 = p2.trim().toLowerCase();
            if((p2.equals("1") != 0) || (p2.equals("true") != 0)) {
                v0 = 1;
            }
        }
        return v0;
    }
    public void parse(org.xmlpull.v1.XmlPullParser p5)
    {
        p5.nextTag();
        p5.require(2, this.env, "Envelope");
        this.encodingStyle = p5.getAttributeValue(this.env, "encodingStyle");
        p5.nextTag();
        if((p5.getEventType() == 2) && ((p5.getNamespace().equals(this.env) != 0) && (p5.getName().equals("Header") != 0))) {
            this.parseHeader(p5);
            p5.require(3, this.env, "Header");
            p5.nextTag();
        }
        p5.require(2, this.env, "Body");
        this.encodingStyle = p5.getAttributeValue(this.env, "encodingStyle");
        this.parseBody(p5);
        p5.require(3, this.env, "Body");
        p5.nextTag();
        p5.require(3, this.env, "Envelope");
        return;
    }
    public void parseBody(org.xmlpull.v1.XmlPullParser p5)
    {
        p5.nextTag();
        if((p5.getEventType() != 2) || ((p5.getNamespace().equals(this.env) == 0) || (p5.getName().equals("Fault") == 0))) {
            if((this.bodyIn instanceof org.kxml2.kdom.Node) == 0) {
                v1 = new org.kxml2.kdom.Node();
            } else {
                v1 = this.bodyIn;
            }
            v1.parse(p5);
            this.bodyIn = v1;
        } else {
            if(this.version >= 120) {
                v0 = new org.ksoap2.SoapFault12(this.version);
            } else {
                v0 = new org.ksoap2.SoapFault(this.version);
            }
            v0.parse(p5);
            this.bodyIn = v0;
        }
        return;
    }
    public void parseHeader(org.xmlpull.v1.XmlPullParser p7)
    {
        p7.nextTag();
        v3 = new org.kxml2.kdom.Node();
        v3.parse(p7);
        v1 = 0;
        v4 = 0;
        while (v4 < v3.getChildCount()) {
            if(v3.getElement(v4) != 0) {
                v1 = (v1 + 1);
            }
            v4 = (v4 + 1);
        }
        v5 = new org.kxml2.kdom.Element[v1];
        this.headerIn = v5;
        v1 = 0;
        v4 = 0;
        while (v4 < v3.getChildCount()) {
            v0 = v3.getElement(v4);
            if(v0 != 0) {
                v2 = (v1 + 1);
                this.headerIn[v1] = v0;
                v1 = v2;
            }
            v4 = (v4 + 1);
        }
        return;
    }
    public void setOutputSoapObject(Object p1)
    {
        this.bodyOut = p1;
        return;
    }
    public void write(org.xmlpull.v1.XmlSerializer p3)
    {
        p3.setPrefix("i", this.xsi);
        p3.setPrefix("d", this.xsd);
        p3.setPrefix("c", this.enc);
        p3.setPrefix("v", this.env);
        p3.startTag(this.env, "Envelope");
        p3.startTag(this.env, "Header");
        this.writeHeader(p3);
        p3.endTag(this.env, "Header");
        p3.startTag(this.env, "Body");
        this.writeBody(p3);
        p3.endTag(this.env, "Body");
        p3.endTag(this.env, "Envelope");
        return;
    }
    public void writeBody(org.xmlpull.v1.XmlSerializer p4)
    {
        if(this.encodingStyle != 0) {
            p4.attribute(this.env, "encodingStyle", this.encodingStyle);
        }
        this.bodyOut.write(p4);
        return;
    }
    public void writeHeader(org.xmlpull.v1.XmlSerializer p3)
    {
        if(this.headerOut != 0) {
            v0 = 0;
            while (v0 < this.headerOut.length) {
                this.headerOut[v0].write(p3);
                v0 = (v0 + 1);
            }
        }
        return;
    }
    public SoapFault()
    {
        this.version = 110;
        return;
    }
    public SoapFault(int p1)
    {
        this.version = p1;
        return;
    }
    public String getMessage()
    {
        return this.faultstring;
    }
    public void parse(org.xmlpull.v1.XmlPullParser p6)
    {
        p6.require(2, "http://schemas.xmlsoap.org/soap/envelope/", "Fault");
        while (p6.nextTag() == 2) {
            v0 = p6.getName();
            if(v0.equals("detail") == 0) {
                if(v0.equals("faultcode") == 0) {
                    if(v0.equals("faultstring") == 0) {
                        if(v0.equals("faultactor") == 0) {
                            throw new RuntimeException(new StringBuffer().append("unexpected tag:").append(v0).toString());
                        } else {
                            this.faultactor = p6.nextText();
                        }
                    } else {
                        this.faultstring = p6.nextText();
                    }
                } else {
                    this.faultcode = p6.nextText();
                }
                p6.require(3, 0, v0);
            } else {
                this.detail = new org.kxml2.kdom.Node();
                this.detail.parse(p6);
                if((p6.getNamespace().equals("http://schemas.xmlsoap.org/soap/envelope/") != 0) && (p6.getName().equals("Fault") != 0)) {
                    break;
                }
            }
        }
        p6.require(3, "http://schemas.xmlsoap.org/soap/envelope/", "Fault");
        p6.nextTag();
        return;
    }
    public String toString()
    {
        return new StringBuffer().append("SoapFault - faultcode: '").append(this.faultcode).append("' faultstring: '").append(this.faultstring).append("' faultactor: '").append(this.faultactor).append("' detail: ").append(this.detail).toString();
    }
    public void write(org.xmlpull.v1.XmlSerializer p4)
    {
        p4.startTag("http://schemas.xmlsoap.org/soap/envelope/", "Fault");
        p4.startTag(0, "faultcode");
        p4.text(new StringBuffer().append("").append(this.faultcode).toString());
        p4.endTag(0, "faultcode");
        p4.startTag(0, "faultstring");
        p4.text(new StringBuffer().append("").append(this.faultstring).toString());
        p4.endTag(0, "faultstring");
        p4.startTag(0, "detail");
        if(this.detail != 0) {
            this.detail.write(p4);
        }
        p4.endTag(0, "detail");
        p4.endTag("http://schemas.xmlsoap.org/soap/envelope/", "Fault");
        return;
    }
    public AttributeContainer()
    {
        this.attributes = new java.util.Vector();
        return;
    }
    private Integer attributeIndex(String p3)
    {
        v0 = 0;
        while (v0 < this.attributes.size()) {
            if(p3.equals(this.attributes.elementAt(v0).getName()) == 0) {
                v0 = (v0 + 1);
            } else {
                v1 = new Integer(v0);
            }
            return v1;
        }
        v1 = 0;
    }
    public void addAttribute(String p3, Object p4)
    {
        v0 = new org.ksoap2.serialization.AttributeInfo();
        v0.name = p3;
        if(p4 != 0) {
            v1 = p4.getClass();
        } else {
            v1 = org.ksoap2.serialization.PropertyInfo.OBJECT_CLASS;
        }
        v0.type = v1;
        v0.value = p4;
        this.addAttribute(v0);
        return;
    }
    public void addAttribute(org.ksoap2.serialization.AttributeInfo p2)
    {
        this.attributes.addElement(p2);
        return;
    }
    public void addAttributeIfValue(String p1, Object p2)
    {
        if(p2 != 0) {
            this.addAttribute(p1, p2);
        }
        return;
    }
    public void addAttributeIfValue(org.ksoap2.serialization.AttributeInfo p2)
    {
        if(p2.value != 0) {
            this.attributes.addElement(p2);
        }
        return;
    }
    protected boolean attributesAreEqual(org.ksoap2.serialization.AttributeContainer p8)
    {
        v5 = 0;
        v1 = this.getAttributeCount();
        if(v1 == p8.getAttributeCount()) {
            v0 = 0;
            while (v0 < v1) {
                v3 = this.attributes.elementAt(v0);
                v4 = v3.getValue();
                if((p8.hasAttribute(v3.getName()) != 0) && (v4.equals(p8.safeGetAttribute(v3.getName())) != 0)) {
                    v0 = (v0 + 1);
                }
            }
            v5 = 1;
        }
        return v5;
    }
    public Object getAttribute(int p2)
    {
        return this.attributes.elementAt(p2).getValue();
    }
    public Object getAttribute(String p5)
    {
        this.attributeIndex(p5);
        if (this == 0) {
            throw new RuntimeException(new StringBuffer().append("illegal property: ").append(p5).toString());
        } else {
            return this.getAttribute(this.intValue());
        }
    }
    public String getAttributeAsString(int p3)
    {
        return this.attributes.elementAt(p3).getValue().toString();
    }
    public String getAttributeAsString(String p5)
    {
        this.attributeIndex(p5);
        if (this == 0) {
            throw new RuntimeException(new StringBuffer().append("illegal property: ").append(p5).toString());
        } else {
            return this.getAttribute(this.intValue()).toString();
        }
    }
    public int getAttributeCount()
    {
        return this.attributes.size();
    }
    public void getAttributeInfo(int p3, org.ksoap2.serialization.AttributeInfo p4)
    {
        v0 = this.attributes.elementAt(p3);
        p4.name = v0.name;
        p4.namespace = v0.namespace;
        p4.flags = v0.flags;
        p4.type = v0.type;
        p4.elementType = v0.elementType;
        p4.value = v0.getValue();
        return;
    }
    public Object getAttributeSafely(String p3)
    {
        this.attributeIndex(p3);
        if(this == 0) {
            v1 = 0;
        } else {
            v1 = this.getAttribute(this.intValue());
        }
        return v1;
    }
    public Object getAttributeSafelyAsString(String p3)
    {
        this.attributeIndex(p3);
        if(this == 0) {
            v1 = "";
        } else {
            v1 = this.getAttribute(this.intValue()).toString();
        }
        return v1;
    }
    public boolean hasAttribute(String p2)
    {
        this.attributeIndex(p2);
        if(this == 0) {
            v0 = 0;
        } else {
            v0 = 1;
        }
        return v0;
    }
    public Object safeGetAttribute(String p2)
    {
        return this.getAttributeSafely(p2);
    }
     FwdRef()
    {
        return;
    }
    public NullSoapObject()
    {
        return;
    }
    public String toString()
    {
        return 0;
    }
    static PropertyInfo()
    {
        org.ksoap2.serialization.PropertyInfo.OBJECT_CLASS = new Object().getClass();
        org.ksoap2.serialization.PropertyInfo.STRING_CLASS = "".getClass();
        org.ksoap2.serialization.PropertyInfo.INTEGER_CLASS = new Integer(0).getClass();
        org.ksoap2.serialization.PropertyInfo.LONG_CLASS = new Long(0.0).getClass();
        org.ksoap2.serialization.PropertyInfo.BOOLEAN_CLASS = new Boolean(1).getClass();
        org.ksoap2.serialization.PropertyInfo.VECTOR_CLASS = new java.util.Vector().getClass();
        org.ksoap2.serialization.PropertyInfo.OBJECT_TYPE = new org.ksoap2.serialization.PropertyInfo();
        return;
    }
    public PropertyInfo()
    {
        this.type = org.ksoap2.serialization.PropertyInfo.OBJECT_CLASS;
        return;
    }
    public void clear()
    {
        this.type = org.ksoap2.serialization.PropertyInfo.OBJECT_CLASS;
        this.flags = 0;
        this.name = 0;
        this.namespace = 0;
        return;
    }
    public org.ksoap2.serialization.PropertyInfo getElementType()
    {
        return this.elementType;
    }
    public int getFlags()
    {
        return this.flags;
    }
    public String getName()
    {
        return this.name;
    }
    public String getNamespace()
    {
        return this.namespace;
    }
    public Object getType()
    {
        return this.type;
    }
    public Object getValue()
    {
        return this.value;
    }
    public boolean isMultiRef()
    {
        return this.multiRef;
    }
    public void setElementType(org.ksoap2.serialization.PropertyInfo p1)
    {
        this.elementType = p1;
        return;
    }
    public void setFlags(int p1)
    {
        this.flags = p1;
        return;
    }
    public void setMultiRef(boolean p1)
    {
        this.multiRef = p1;
        return;
    }
    public void setName(String p1)
    {
        this.name = p1;
        return;
    }
    public void setNamespace(String p1)
    {
        this.namespace = p1;
        return;
    }
    public void setType(Object p1)
    {
        this.type = p1;
        return;
    }
    public void setValue(Object p1)
    {
        this.value = p1;
        return;
    }
    public String toString()
    {
        v0 = new StringBuffer();
        v0.append(this.name);
        v0.append(" : ");
        if(this.value == 0) {
            v0.append("(not set)");
        } else {
            v0.append(this.value);
        }
        return v0.toString();
    }
    public Transport()
    {
        this.timeout = 20000;
        this.xmlVersionTag = "";
        return;
    }
    public Transport(String p2)
    {
        this(0, p2);
        return;
    }
    public Transport(String p2, int p3)
    {
        this.timeout = 20000;
        this.xmlVersionTag = "";
        this.url = p2;
        this.timeout = p3;
        return;
    }
    public Transport(java.net.Proxy p2, String p3)
    {
        this.timeout = 20000;
        this.xmlVersionTag = "";
        this.proxy = p2;
        this.url = p3;
        return;
    }
    public Transport(java.net.Proxy p2, String p3, int p4)
    {
        this.timeout = 20000;
        this.xmlVersionTag = "";
        this.proxy = p2;
        this.url = p3;
        this.timeout = p4;
        return;
    }
    public void call(String p2, org.ksoap2.SoapEnvelope p3)
    {
        this.call(p2, p3, 0);
        return;
    }
    protected byte[] createRequestData(org.ksoap2.SoapEnvelope p4)
    {
        v0 = new java.io.ByteArrayOutputStream();
        v0.write(this.xmlVersionTag.getBytes());
        v1 = new org.kxml2.io.KXmlSerializer();
        v1.setOutput(v0, 0);
        p4.write(v1);
        v1.flush();
        v0.write(13);
        v0.write(10);
        v0.flush();
        return v0.toByteArray();
    }
    protected void parseResponse(org.ksoap2.SoapEnvelope p4, java.io.InputStream p5)
    {
        v0 = new org.kxml2.io.KXmlParser();
        v0.setFeature("http://xmlpull.org/v1/doc/features.html#process-namespaces", 1);
        v0.setInput(p5, 0);
        p4.parse(v0);
        return;
    }
    public void reset()
    {
        return;
    }
    public void setUrl(String p1)
    {
        this.url = p1;
        return;
    }
    public void setXmlVersionTag(String p1)
    {
        this.xmlVersionTag = p1;
        return;
    }
    public Node()
    {
        return;
    }
    public void addChild(int p3, int p4, Object p5)
    {
        if (p5 != 0) {
            if(this.children == 0) {
                this.children = new java.util.Vector();
                this.types = new StringBuffer();
            }
            if(p4 != 2) {
                if((p5 instanceof String) == 0) {
                    throw new RuntimeException("String expected");
                }
            } else {
                if((p5 instanceof org.kxml2.kdom.Element) != 0) {
                    p5.setParent(this);
                } else {
                    throw new RuntimeException("Element obj expected)");
                }
            }
            this.children.insertElementAt(p5, p3);
            this.types.insert(p3, ((char) p4));
            return;
        } else {
            throw new NullPointerException();
        }
    }
    public void addChild(int p2, Object p3)
    {
        this.addChild(this.getChildCount(), p2, p3);
        return;
    }
    public org.kxml2.kdom.Element createElement(String p2, String p3)
    {
        v0 = new org.kxml2.kdom.Element();
        if(p2 == 0) {
            p2 = "";
        }
        v0.namespace = p2;
        v0.name = p3;
        return v0;
    }
    public Object getChild(int p2)
    {
        return this.children.elementAt(p2);
    }
    public int getChildCount()
    {
        if(this.children != 0) {
            v0 = this.children.size();
        } else {
            v0 = 0;
        }
        return v0;
    }
    public org.kxml2.kdom.Element getElement(int p3)
    {
        v0 = this.getChild(p3);
        if((v0 instanceof org.kxml2.kdom.Element) == 0) {
            v0 = 0;
        }
        return v0;
    }
    public org.kxml2.kdom.Element getElement(String p7, String p8)
    {
        v0 = this.indexOf(p7, p8, 0);
        v1 = this.indexOf(p7, p8, (v0 + 1));
        if ((v0 != 15) && (v1 == 15)) {
            return this.getElement(v0);
        } else {
            v4 = new StringBuilder().append("Element {").append(p7).append("}").append(p8);
            if(v0 != 15) {
                v2 = " more than once in ";
            } else {
                v2 = " not found in ";
            }
            throw new RuntimeException(v4.append(v2).append(this).toString());
        }
    }
    public String getText(int p2)
    {
        if(this.isText(p2) == 0) {
            v0 = 0;
        } else {
            v0 = this.getChild(p2);
        }
        return v0;
    }
    public int getType(int p2)
    {
        return this.types.charAt(p2);
    }
    public int indexOf(String p5, String p6, int p7)
    {
        v2 = this.getChildCount();
        v1 = p7;
        while (v1 < v2) {
            v0 = this.getElement(v1);
            if((v0 == 0) || ((p6.equals(v0.getName()) == 0) || ((p5 != 0) && (p5.equals(v0.getNamespace()) == 0)))) {
                v1 = (v1 + 1);
            }
            return v1;
        }
        v1 = 15;
    }
    public boolean isText(int p3)
    {
        v0 = this.getType(p3);
        if((v0 != 4) && ((v0 != 7) && (v0 != 5))) {
            v1 = 0;
        } else {
            v1 = 1;
        }
        return v1;
    }
    public void parse(org.xmlpull.v1.XmlPullParser p7)
    {
        v1 = 0;
        do {
            v2 = p7.getEventType();
            switch(v2) {
                case 1:
                case 3:
                    v1 = 1;
                    break;
                case 2:
                    v0 = this.createElement(p7.getNamespace(), p7.getName());
                    this.addChild(2, v0);
                    v0.parse(p7);
                    break;
                default:
                    if(p7.getText() == 0) {
                        if((v2 == 6) && (p7.getName() != 0)) {
                            this.addChild(6, p7.getName());
                        }
                    } else {
                        if(v2 == 6) {
                            v2 = 4;
                        }
                        this.addChild(v2, p7.getText());
                    }
                    p7.nextToken();
            }
        } while(v1 == 0);
        return;
    }
    public void removeChild(int p6)
    {
        this.children.removeElementAt(p6);
        v1 = (this.types.length() - 1);
        v0 = p6;
        while (v0 < v1) {
            this.types.setCharAt(v0, this.types.charAt((v0 + 1)));
            v0 = (v0 + 1);
        }
        this.types.setLength(v1);
        return;
    }
    public void write(org.xmlpull.v1.XmlSerializer p1)
    {
        this.writeChildren(p1);
        p1.flush();
        return;
    }
    public void writeChildren(org.xmlpull.v1.XmlSerializer p8)
    {
        if(this.children != 0) {
            v2 = this.children.size();
            v1 = 0;
            while (v1 < v2) {
                v3 = this.getType(v1);
                v0 = this.children.elementAt(v1);
                switch(v3) {
                    case 2:
                        v0.write(p8);
                        break;
                    case 3:
                    default:
                        throw new RuntimeException(new StringBuilder().append("Illegal type: ").append(v3).toString());
                        break;
                    case 4:
                        p8.text(v0);
                        break;
                    case 5:
                        p8.cdsect(v0);
                        break;
                    case 6:
                        p8.entityRef(v0);
                        break;
                    case 7:
                        p8.ignorableWhitespace(v0);
                        break;
                    case 8:
                        p8.processingInstruction(v0);
                        break;
                    case 9:
                        p8.comment(v0);
                        break;
                    case 10:
                        p8.docdecl(v0);
                        break;
                }
                v1 = (v1 + 1);
            }
        }
        return;
    }
    static SyncML()
    {
        v0 = new String[56];
        v0[0] = "Add";
        v0[1] = "Alert";
        v0[2] = "Archive";
        v0[3] = "Atomic";
        v0[4] = "Chal";
        v0[5] = "Cmd";
        v0[6] = "CmdID";
        v0[7] = "CmdRef";
        v0[8] = "Copy";
        v0[9] = "Cred";
        v0[10] = "Data";
        v0[11] = "Delete";
        v0[12] = "Exec";
        v0[13] = "Final";
        v0[14] = "Get";
        v0[15] = "Item";
        v0[16] = "Lang";
        v0[17] = "LocName";
        v0[18] = "LocURI";
        v0[19] = "Map";
        v0[20] = "MapItem";
        v0[21] = "Meta";
        v0[22] = "MsgID";
        v0[23] = "MsgRef";
        v0[24] = "NoResp";
        v0[25] = "NoResults";
        v0[26] = "Put";
        v0[27] = "Replace";
        v0[28] = "RespURI";
        v0[29] = "Results";
        v0[30] = "Search";
        v0[31] = "Sequence";
        v0[32] = "SessionID";
        v0[33] = "SftDel";
        v0[34] = "Source";
        v0[35] = "SourceRef";
        v0[36] = "Status";
        v0[37] = "Sync";
        v0[38] = "SyncBody";
        v0[39] = "SyncHdr";
        v0[40] = "SyncML";
        v0[41] = "Target";
        v0[42] = "TargetRef";
        v0[43] = "Reserved for future use";
        v0[44] = "VerDTD";
        v0[45] = "VerProto";
        v0[46] = "NumberOfChanged";
        v0[47] = "MoreData";
        v0[48] = "Field";
        v0[49] = "Filter";
        v0[50] = "Record";
        v0[51] = "FilterType";
        v0[52] = "SourceParent";
        v0[53] = "TargetParent";
        v0[54] = "Move";
        v0[55] = "Correlator";
        org.kxml2.wap.syncml.SyncML.TAG_TABLE_0 = v0;
        v0 = new String[18];
        v0[0] = "Anchor";
        v0[1] = "EMI";
        v0[2] = "Format";
        v0[3] = "FreeID";
        v0[4] = "FreeMem";
        v0[5] = "Last";
        v0[6] = "Mark";
        v0[7] = "MaxMsgSize";
        v0[8] = "Mem";
        v0[9] = "MetInf";
        v0[10] = "Next";
        v0[11] = "NextNonce";
        v0[12] = "SharedMem";
        v0[13] = "Size";
        v0[14] = "Type";
        v0[15] = "Version";
        v0[16] = "MaxObjSize";
        v0[17] = "FieldLevel";
        org.kxml2.wap.syncml.SyncML.TAG_TABLE_1 = v0;
        v0 = new String[56];
        v0[0] = "AccessType";
        v0[1] = "ACL";
        v0[2] = "Add";
        v0[3] = "b64";
        v0[4] = "bin";
        v0[5] = "bool";
        v0[6] = "chr";
        v0[7] = "CaseSense";
        v0[8] = "CIS";
        v0[9] = "Copy";
        v0[10] = "CS";
        v0[11] = "date";
        v0[12] = "DDFName";
        v0[13] = "DefaultValue";
        v0[14] = "Delete";
        v0[15] = "Description";
        v0[16] = "DDFFormat";
        v0[17] = "DFProperties";
        v0[18] = "DFTitle";
        v0[19] = "DFType";
        v0[20] = "Dynamic";
        v0[21] = "Exec";
        v0[22] = "float";
        v0[23] = "Format";
        v0[24] = "Get";
        v0[25] = "int";
        v0[26] = "Man";
        v0[27] = "MgmtTree";
        v0[28] = "MIME";
        v0[29] = "Mod";
        v0[30] = "Name";
        v0[31] = "Node";
        v0[32] = "node";
        v0[33] = "NodeName";
        v0[34] = "null";
        v0[35] = "Occurence";
        v0[36] = "One";
        v0[37] = "OneOrMore";
        v0[38] = "OneOrN";
        v0[39] = "Path";
        v0[40] = "Permanent";
        v0[41] = "Replace";
        v0[42] = "RTProperties";
        v0[43] = "Scope";
        v0[44] = "Size";
        v0[45] = "time";
        v0[46] = "Title";
        v0[47] = "TStamp";
        v0[48] = "Type";
        v0[49] = "Value";
        v0[50] = "VerDTD";
        v0[51] = "VerNo";
        v0[52] = "xml";
        v0[53] = "ZeroOrMore";
        v0[54] = "ZeroOrN";
        v0[55] = "ZeroOrOne";
        org.kxml2.wap.syncml.SyncML.TAG_TABLE_2_DM = v0;
        return;
    }
    public SyncML()
    {
        return;
    }
    public static org.kxml2.wap.WbxmlParser createDMParser()
    {
        v0 = org.kxml2.wap.syncml.SyncML.createParser();
        v0.setTagTable(2, org.kxml2.wap.syncml.SyncML.TAG_TABLE_2_DM);
        return v0;
    }
    public static org.kxml2.wap.WbxmlSerializer createDMSerializer()
    {
        v0 = org.kxml2.wap.syncml.SyncML.createSerializer();
        v0.setTagTable(2, org.kxml2.wap.syncml.SyncML.TAG_TABLE_2_DM);
        return v0;
    }
    public static org.kxml2.wap.WbxmlParser createParser()
    {
        v0 = new org.kxml2.wap.WbxmlParser();
        v0.setTagTable(0, org.kxml2.wap.syncml.SyncML.TAG_TABLE_0);
        v0.setTagTable(1, org.kxml2.wap.syncml.SyncML.TAG_TABLE_1);
        return v0;
    }
    public static org.kxml2.wap.WbxmlSerializer createSerializer()
    {
        v0 = new org.kxml2.wap.WbxmlSerializer();
        v0.setTagTable(0, org.kxml2.wap.syncml.SyncML.TAG_TABLE_0);
        v0.setTagTable(1, org.kxml2.wap.syncml.SyncML.TAG_TABLE_1);
        return v0;
    }
    static Wml()
    {
        v0 = new String[59];
        v0[0] = 0;
        v0[1] = 0;
        v0[2] = 0;
        v0[3] = 0;
        v0[4] = 0;
        v0[5] = 0;
        v0[6] = 0;
        v0[7] = 0;
        v0[8] = 0;
        v0[9] = 0;
        v0[10] = 0;
        v0[11] = 0;
        v0[12] = 0;
        v0[13] = 0;
        v0[14] = 0;
        v0[15] = 0;
        v0[16] = 0;
        v0[17] = 0;
        v0[18] = 0;
        v0[19] = 0;
        v0[20] = 0;
        v0[21] = 0;
        v0[22] = 0;
        v0[23] = "a";
        v0[24] = "td";
        v0[25] = "tr";
        v0[26] = "table";
        v0[27] = "p";
        v0[28] = "postfield";
        v0[29] = "anchor";
        v0[30] = "access";
        v0[31] = "b";
        v0[32] = "big";
        v0[33] = "br";
        v0[34] = "card";
        v0[35] = "do";
        v0[36] = "em";
        v0[37] = "fieldset";
        v0[38] = "go";
        v0[39] = "head";
        v0[40] = "i";
        v0[41] = "img";
        v0[42] = "input";
        v0[43] = "meta";
        v0[44] = "noop";
        v0[45] = "prev";
        v0[46] = "onevent";
        v0[47] = "optgroup";
        v0[48] = "option";
        v0[49] = "refresh";
        v0[50] = "select";
        v0[51] = "small";
        v0[52] = "strong";
        v0[53] = 0;
        v0[54] = "template";
        v0[55] = "timer";
        v0[56] = "u";
        v0[57] = "setvar";
        v0[58] = "wml";
        org.kxml2.wap.wml.Wml.TAG_TABLE = v0;
        v0 = new String[91];
        v0[0] = "accept-charset";
        v0[1] = "align=bottom";
        v0[2] = "align=center";
        v0[3] = "align=left";
        v0[4] = "align=middle";
        v0[5] = "align=right";
        v0[6] = "align=top";
        v0[7] = "alt";
        v0[8] = "content";
        v0[9] = 0;
        v0[10] = "domain";
        v0[11] = "emptyok=false";
        v0[12] = "emptyok=true";
        v0[13] = "format";
        v0[14] = "height";
        v0[15] = "hspace";
        v0[16] = "ivalue";
        v0[17] = "iname";
        v0[18] = 0;
        v0[19] = "label";
        v0[20] = "localsrc";
        v0[21] = "maxlength";
        v0[22] = "method=get";
        v0[23] = "method=post";
        v0[24] = "mode=nowrap";
        v0[25] = "mode=wrap";
        v0[26] = "multiple=false";
        v0[27] = "multiple=true";
        v0[28] = "name";
        v0[29] = "newcontext=false";
        v0[30] = "newcontext=true";
        v0[31] = "onpick";
        v0[32] = "onenterbackward";
        v0[33] = "onenterforward";
        v0[34] = "ontimer";
        v0[35] = "optimal=false";
        v0[36] = "optimal=true";
        v0[37] = "path";
        v0[38] = 0;
        v0[39] = 0;
        v0[40] = 0;
        v0[41] = "scheme";
        v0[42] = "sendreferer=false";
        v0[43] = "sendreferer=true";
        v0[44] = "size";
        v0[45] = "src";
        v0[46] = "ordered=true";
        v0[47] = "ordered=false";
        v0[48] = "tabindex";
        v0[49] = "title";
        v0[50] = "type";
        v0[51] = "type=accept";
        v0[52] = "type=delete";
        v0[53] = "type=help";
        v0[54] = "type=password";
        v0[55] = "type=onpick";
        v0[56] = "type=onenterbackward";
        v0[57] = "type=onenterforward";
        v0[58] = "type=ontimer";
        v0[59] = 0;
        v0[60] = 0;
        v0[61] = 0;
        v0[62] = 0;
        v0[63] = 0;
        v0[64] = "type=options";
        v0[65] = "type=prev";
        v0[66] = "type=reset";
        v0[67] = "type=text";
        v0[68] = "type=vnd.";
        v0[69] = "href";
        v0[70] = "href=http://";
        v0[71] = "href=https://";
        v0[72] = "value";
        v0[73] = "vspace";
        v0[74] = "width";
        v0[75] = "xml:lang";
        v0[76] = 0;
        v0[77] = "align";
        v0[78] = "columns";
        v0[79] = "class";
        v0[80] = "id";
        v0[81] = "forua=false";
        v0[82] = "forua=true";
        v0[83] = "src=http://";
        v0[84] = "src=https://";
        v0[85] = "http-equiv";
        v0[86] = "http-equiv=Content-Type";
        v0[87] = "content=application/vnd.wap.wmlc;charset=";
        v0[88] = "http-equiv=Expires";
        v0[89] = 0;
        v0[90] = 0;
        org.kxml2.wap.wml.Wml.ATTR_START_TABLE = v0;
        v0 = new String[29];
        v0[0] = ".com/";
        v0[1] = ".edu/";
        v0[2] = ".net/";
        v0[3] = ".org/";
        v0[4] = "accept";
        v0[5] = "bottom";
        v0[6] = "clear";
        v0[7] = "delete";
        v0[8] = "help";
        v0[9] = "http://";
        v0[10] = "http://www.";
        v0[11] = "https://";
        v0[12] = "https://www.";
        v0[13] = 0;
        v0[14] = "middle";
        v0[15] = "nowrap";
        v0[16] = "onpick";
        v0[17] = "onenterbackward";
        v0[18] = "onenterforward";
        v0[19] = "ontimer";
        v0[20] = "options";
        v0[21] = "password";
        v0[22] = "reset";
        v0[23] = 0;
        v0[24] = "text";
        v0[25] = "top";
        v0[26] = "unknown";
        v0[27] = "wrap";
        v0[28] = "www.";
        org.kxml2.wap.wml.Wml.ATTR_VALUE_TABLE = v0;
        return;
    }
    public Wml()
    {
        return;
    }
    public static org.kxml2.wap.WbxmlParser createParser()
    {
        v0 = new org.kxml2.wap.WbxmlParser();
        v0.setTagTable(0, org.kxml2.wap.wml.Wml.TAG_TABLE);
        v0.setAttrStartTable(0, org.kxml2.wap.wml.Wml.ATTR_START_TABLE);
        v0.setAttrValueTable(0, org.kxml2.wap.wml.Wml.ATTR_VALUE_TABLE);
        return v0;
    }
    public static org.kxml2.wap.WbxmlSerializer createSerializer()
    {
        v0 = new org.kxml2.wap.WbxmlSerializer();
        v0.setTagTable(0, org.kxml2.wap.wml.Wml.TAG_TABLE);
        v0.setAttrStartTable(0, org.kxml2.wap.wml.Wml.ATTR_START_TABLE);
        v0.setAttrValueTable(0, org.kxml2.wap.wml.Wml.ATTR_VALUE_TABLE);
        return v0;
    }
    static WV()
    {
        v0 = new String[57];
        v0[0] = "Acceptance";
        v0[1] = "AddList";
        v0[2] = "AddNickList";
        v0[3] = "SName";
        v0[4] = "WV-CSP-Message";
        v0[5] = "ClientID";
        v0[6] = "Code";
        v0[7] = "ContactList";
        v0[8] = "ContentData";
        v0[9] = "ContentEncoding";
        v0[10] = "ContentSize";
        v0[11] = "ContentType";
        v0[12] = "DateTime";
        v0[13] = "Description";
        v0[14] = "DetailedResult";
        v0[15] = "EntityList";
        v0[16] = "Group";
        v0[17] = "GroupID";
        v0[18] = "GroupList";
        v0[19] = "InUse";
        v0[20] = "Logo";
        v0[21] = "MessageCount";
        v0[22] = "MessageID";
        v0[23] = "MessageURI";
        v0[24] = "MSISDN";
        v0[25] = "Name";
        v0[26] = "NickList";
        v0[27] = "NickName";
        v0[28] = "Poll";
        v0[29] = "Presence";
        v0[30] = "PresenceSubList";
        v0[31] = "PresenceValue";
        v0[32] = "Property";
        v0[33] = "Qualifier";
        v0[34] = "Recipient";
        v0[35] = "RemoveList";
        v0[36] = "RemoveNickList";
        v0[37] = "Result";
        v0[38] = "ScreenName";
        v0[39] = "Sender";
        v0[40] = "Session";
        v0[41] = "SessionDescriptor";
        v0[42] = "SessionID";
        v0[43] = "SessionType";
        v0[44] = "Status";
        v0[45] = "Transaction";
        v0[46] = "TransactionContent";
        v0[47] = "TransactionDescriptor";
        v0[48] = "TransactionID";
        v0[49] = "TransactionMode";
        v0[50] = "URL";
        v0[51] = "URLList";
        v0[52] = "User";
        v0[53] = "UserID";
        v0[54] = "UserList";
        v0[55] = "Validity";
        v0[56] = "Value";
        org.kxml2.wap.wv.WV.tagTablePage0 = v0;
        v0 = new String[59];
        v0[0] = "AllFunctions";
        v0[1] = "AllFunctionsRequest";
        v0[2] = "CancelInvite-Request";
        v0[3] = "CancelInviteUser-Request";
        v0[4] = "Capability";
        v0[5] = "CapabilityList";
        v0[6] = "CapabilityRequest";
        v0[7] = "ClientCapability-Request";
        v0[8] = "ClientCapability-Response";
        v0[9] = "DigestBytes";
        v0[10] = "DigestSchema";
        v0[11] = "Disconnect";
        v0[12] = "Functions";
        v0[13] = "GetSPInfo-Request";
        v0[14] = "GetSPInfo-Response";
        v0[15] = "InviteID";
        v0[16] = "InviteNote";
        v0[17] = "Invite-Request";
        v0[18] = "Invite-Response";
        v0[19] = "InviteType";
        v0[20] = "InviteUser-Request";
        v0[21] = "InviteUser-Response";
        v0[22] = "KeepAlive-Request";
        v0[23] = "KeepAliveTime";
        v0[24] = "Login-Request";
        v0[25] = "Login-Response";
        v0[26] = "Logout-Request";
        v0[27] = "Nonce";
        v0[28] = "Password";
        v0[29] = "Polling-Request";
        v0[30] = "ResponseNote";
        v0[31] = "SearchElement";
        v0[32] = "SearchFindings";
        v0[33] = "SearchID";
        v0[34] = "SearchIndex";
        v0[35] = "SearchLimit";
        v0[36] = "KeepAlive-Response";
        v0[37] = "SearchPairList";
        v0[38] = "Search-Request";
        v0[39] = "Search-Response";
        v0[40] = "SearchResult";
        v0[41] = "Service-Request";
        v0[42] = "Service-Response";
        v0[43] = "SessionCookie";
        v0[44] = "StopSearch-Request";
        v0[45] = "TimeToLive";
        v0[46] = "SearchString";
        v0[47] = "CompletionFlag";
        v0[48] = 0;
        v0[49] = "ReceiveList";
        v0[50] = "VerifyID-Request";
        v0[51] = "Extended-Request";
        v0[52] = "Extended-Response";
        v0[53] = "AgreedCapabilityList";
        v0[54] = "Extended-Data";
        v0[55] = "OtherServer";
        v0[56] = "PresenceAttributeNSName";
        v0[57] = "SessionNSName";
        v0[58] = "TransactionNSName";
        org.kxml2.wap.wv.WV.tagTablePage1 = v0;
        v0 = new String[59];
        v0[0] = "ADDGM";
        v0[1] = "AttListFunc";
        v0[2] = "BLENT";
        v0[3] = "CAAUT";
        v0[4] = "CAINV";
        v0[5] = "CALI";
        v0[6] = "CCLI";
        v0[7] = "ContListFunc";
        v0[8] = "CREAG";
        v0[9] = "DALI";
        v0[10] = "DCLI";
        v0[11] = "DELGR";
        v0[12] = "FundamentalFeat";
        v0[13] = "FWMSG";
        v0[14] = "GALS";
        v0[15] = "GCLI";
        v0[16] = "GETGM";
        v0[17] = "GETGP";
        v0[18] = "GETLM";
        v0[19] = "GETM";
        v0[20] = "GETPR";
        v0[21] = "GETSPI";
        v0[22] = "GETWL";
        v0[23] = "GLBLU";
        v0[24] = "GRCHN";
        v0[25] = "GroupAuthFunc";
        v0[26] = "GroupFeat";
        v0[27] = "GroupMgmtFunc";
        v0[28] = "GroupUseFunc";
        v0[29] = "IMAuthFunc";
        v0[30] = "IMFeat";
        v0[31] = "IMReceiveFunc";
        v0[32] = "IMSendFunc";
        v0[33] = "INVIT";
        v0[34] = "InviteFunc";
        v0[35] = "MBRAC";
        v0[36] = "MCLS";
        v0[37] = "MDELIV";
        v0[38] = "NEWM";
        v0[39] = "NOTIF";
        v0[40] = "PresenceAuthFunc";
        v0[41] = "PresenceDeliverFunc";
        v0[42] = "PresenceFeat";
        v0[43] = "REACT";
        v0[44] = "REJCM";
        v0[45] = "REJEC";
        v0[46] = "RMVGM";
        v0[47] = "SearchFunc";
        v0[48] = "ServiceFunc";
        v0[49] = "SETD";
        v0[50] = "SETGP";
        v0[51] = "SRCH";
        v0[52] = "STSRC";
        v0[53] = "SUBGCN";
        v0[54] = "UPDPR";
        v0[55] = "WVCSPFeat";
        v0[56] = "MF";
        v0[57] = "MG";
        v0[58] = "MM";
        org.kxml2.wap.wv.WV.tagTablePage2 = v0;
        v0 = new String[15];
        v0[0] = "AcceptedCharset";
        v0[1] = "AcceptedContentLength";
        v0[2] = "AcceptedContentType";
        v0[3] = "AcceptedTransferEncoding";
        v0[4] = "AnyContent";
        v0[5] = "DefaultLanguage";
        v0[6] = "InitialDeliveryMethod";
        v0[7] = "MultiTrans";
        v0[8] = "ParserSize";
        v0[9] = "ServerPollMin";
        v0[10] = "SupportedBearer";
        v0[11] = "SupportedCIRMethod";
        v0[12] = "TCPAddress";
        v0[13] = "TCPPort";
        v0[14] = "UDPPort";
        org.kxml2.wap.wv.WV.tagTablePage3 = v0;
        v0 = new String[28];
        v0[0] = "CancelAuth-Request";
        v0[1] = "ContactListProperties";
        v0[2] = "CreateAttributeList-Request";
        v0[3] = "CreateList-Request";
        v0[4] = "DefaultAttributeList";
        v0[5] = "DefaultContactList";
        v0[6] = "DefaultList";
        v0[7] = "DeleteAttributeList-Request";
        v0[8] = "DeleteList-Request";
        v0[9] = "GetAttributeList-Request";
        v0[10] = "GetAttributeList-Response";
        v0[11] = "GetList-Request";
        v0[12] = "GetList-Response";
        v0[13] = "GetPresence-Request";
        v0[14] = "GetPresence-Response";
        v0[15] = "GetWatcherList-Request";
        v0[16] = "GetWatcherList-Response";
        v0[17] = "ListManage-Request";
        v0[18] = "ListManage-Response";
        v0[19] = "UnsubscribePresence-Request";
        v0[20] = "PresenceAuth-Request";
        v0[21] = "PresenceAuth-User";
        v0[22] = "PresenceNotification-Request";
        v0[23] = "UpdatePresence-Request";
        v0[24] = "SubscribePresence-Request";
        v0[25] = "Auto-Subscribe";
        v0[26] = "GetReactiveAuthStatus-Request";
        v0[27] = "GetReactiveAuthStatus-Response";
        org.kxml2.wap.wv.WV.tagTablePage4 = v0;
        v0 = new String[54];
        v0[0] = "Accuracy";
        v0[1] = "Address";
        v0[2] = "AddrPref";
        v0[3] = "Alias";
        v0[4] = "Altitude";
        v0[5] = "Building";
        v0[6] = "Caddr";
        v0[7] = "City";
        v0[8] = "ClientInfo";
        v0[9] = "ClientProducer";
        v0[10] = "ClientType";
        v0[11] = "ClientVersion";
        v0[12] = "CommC";
        v0[13] = "CommCap";
        v0[14] = "ContactInfo";
        v0[15] = "ContainedvCard";
        v0[16] = "Country";
        v0[17] = "Crossing1";
        v0[18] = "Crossing2";
        v0[19] = "DevManufacturer";
        v0[20] = "DirectContent";
        v0[21] = "FreeTextLocation";
        v0[22] = "GeoLocation";
        v0[23] = "Language";
        v0[24] = "Latitude";
        v0[25] = "Longitude";
        v0[26] = "Model";
        v0[27] = "NamedArea";
        v0[28] = "OnlineStatus";
        v0[29] = "PLMN";
        v0[30] = "PrefC";
        v0[31] = "PreferredContacts";
        v0[32] = "PreferredLanguage";
        v0[33] = "PreferredContent";
        v0[34] = "PreferredvCard";
        v0[35] = "Registration";
        v0[36] = "StatusContent";
        v0[37] = "StatusMood";
        v0[38] = "StatusText";
        v0[39] = "Street";
        v0[40] = "TimeZone";
        v0[41] = "UserAvailability";
        v0[42] = "Cap";
        v0[43] = "Cname";
        v0[44] = "Contact";
        v0[45] = "Cpriority";
        v0[46] = "Cstatus";
        v0[47] = "Note";
        v0[48] = "Zone";
        v0[49] = 0;
        v0[50] = "Inf_link";
        v0[51] = "InfoLink";
        v0[52] = "Link";
        v0[53] = "Text";
        org.kxml2.wap.wv.WV.tagTablePage5 = v0;
        v0 = new String[22];
        v0[0] = "BlockList";
        v0[1] = "BlockEntity-Request";
        v0[2] = "DeliveryMethod";
        v0[3] = "DeliveryReport";
        v0[4] = "DeliveryReport-Request";
        v0[5] = "ForwardMessage-Request";
        v0[6] = "GetBlockedList-Request";
        v0[7] = "GetBlockedList-Response";
        v0[8] = "GetMessageList-Request";
        v0[9] = "GetMessageList-Response";
        v0[10] = "GetMessage-Request";
        v0[11] = "GetMessage-Response";
        v0[12] = "GrantList";
        v0[13] = "MessageDelivered";
        v0[14] = "MessageInfo";
        v0[15] = "MessageNotification";
        v0[16] = "NewMessage";
        v0[17] = "RejectMessage-Request";
        v0[18] = "SendMessage-Request";
        v0[19] = "SendMessage-Response";
        v0[20] = "SetDeliveryMethod-Request";
        v0[21] = "DeliveryTime";
        org.kxml2.wap.wv.WV.tagTablePage6 = v0;
        v0 = new String[39];
        v0[0] = "AddGroupMembers-Request";
        v0[1] = "Admin";
        v0[2] = "CreateGroup-Request";
        v0[3] = "DeleteGroup-Request";
        v0[4] = "GetGroupMembers-Request";
        v0[5] = "GetGroupMembers-Response";
        v0[6] = "GetGroupProps-Request";
        v0[7] = "GetGroupProps-Response";
        v0[8] = "GroupChangeNotice";
        v0[9] = "GroupProperties";
        v0[10] = "Joined";
        v0[11] = "JoinedRequest";
        v0[12] = "JoinGroup-Request";
        v0[13] = "JoinGroup-Response";
        v0[14] = "LeaveGroup-Request";
        v0[15] = "LeaveGroup-Response";
        v0[16] = "Left";
        v0[17] = "MemberAccess-Request";
        v0[18] = "Mod";
        v0[19] = "OwnProperties";
        v0[20] = "RejectList-Request";
        v0[21] = "RejectList-Response";
        v0[22] = "RemoveGroupMembers-Request";
        v0[23] = "SetGroupProps-Request";
        v0[24] = "SubscribeGroupNotice-Request";
        v0[25] = "SubscribeGroupNotice-Response";
        v0[26] = "Users";
        v0[27] = "WelcomeNote";
        v0[28] = "JoinGroup";
        v0[29] = "SubscribeNotification";
        v0[30] = "SubscribeType";
        v0[31] = "GetJoinedUsers-Request";
        v0[32] = "GetJoinedUsers-Response";
        v0[33] = "AdminMapList";
        v0[34] = "AdminMapping";
        v0[35] = "Mapping";
        v0[36] = "ModMapping";
        v0[37] = "UserMapList";
        v0[38] = "UserMapping";
        org.kxml2.wap.wv.WV.tagTablePage7 = v0;
        v0 = new String[5];
        v0[0] = "MP";
        v0[1] = "GETAUT";
        v0[2] = "GETJU";
        v0[3] = "VRID";
        v0[4] = "VerifyIDFunc";
        org.kxml2.wap.wv.WV.tagTablePage8 = v0;
        v0 = new String[11];
        v0[0] = "CIR";
        v0[1] = "Domain";
        v0[2] = "ExtBlock";
        v0[3] = "HistoryPeriod";
        v0[4] = "IDList";
        v0[5] = "MaxWatcherList";
        v0[6] = "ReactiveAuthState";
        v0[7] = "ReactiveAuthStatus";
        v0[8] = "ReactiveAuthStatusList";
        v0[9] = "Watcher";
        v0[10] = "WatcherStatus";
        org.kxml2.wap.wv.WV.tagTablePage9 = v0;
        v0 = new String[3];
        v0[0] = "WV-CSP-NSDiscovery-Request";
        v0[1] = "WV-CSP-NSDiscovery-Response";
        v0[2] = "VersionList";
        org.kxml2.wap.wv.WV.tagTablePageA = v0;
        v0 = new String[6];
        v0[0] = "xmlns=http://www.wireless-village.org/CSP";
        v0[1] = "xmlns=http://www.wireless-village.org/PA";
        v0[2] = "xmlns=http://www.wireless-village.org/TRC";
        v0[3] = "xmlns=http://www.openmobilealliance.org/DTD/WV-CSP";
        v0[4] = "xmlns=http://www.openmobilealliance.org/DTD/WV-PA";
        v0[5] = "xmlns=http://www.openmobilealliance.org/DTD/WV-TRC";
        org.kxml2.wap.wv.WV.attrStartTable = v0;
        v0 = new String[120];
        v0[0] = "AccessType";
        v0[1] = "ActiveUsers";
        v0[2] = "Admin";
        v0[3] = "application/";
        v0[4] = "application/vnd.wap.mms-message";
        v0[5] = "application/x-sms";
        v0[6] = "AutoJoin";
        v0[7] = "BASE64";
        v0[8] = "Closed";
        v0[9] = "Default";
        v0[10] = "DisplayName";
        v0[11] = "F";
        v0[12] = "G";
        v0[13] = "GR";
        v0[14] = "http://";
        v0[15] = "https://";
        v0[16] = "image/";
        v0[17] = "Inband";
        v0[18] = "IM";
        v0[19] = "MaxActiveUsers";
        v0[20] = "Mod";
        v0[21] = "Name";
        v0[22] = "None";
        v0[23] = "N";
        v0[24] = "Open";
        v0[25] = "Outband";
        v0[26] = "PR";
        v0[27] = "Private";
        v0[28] = "PrivateMessaging";
        v0[29] = "PrivilegeLevel";
        v0[30] = "Public";
        v0[31] = "P";
        v0[32] = "Request";
        v0[33] = "Response";
        v0[34] = "Restricted";
        v0[35] = "ScreenName";
        v0[36] = "Searchable";
        v0[37] = "S";
        v0[38] = "SC";
        v0[39] = "text/";
        v0[40] = "text/plain";
        v0[41] = "text/x-vCalendar";
        v0[42] = "text/x-vCard";
        v0[43] = "Topic";
        v0[44] = "T";
        v0[45] = "Type";
        v0[46] = "U";
        v0[47] = "US";
        v0[48] = "www.wireless-village.org";
        v0[49] = "AutoDelete";
        v0[50] = "GM";
        v0[51] = "Validity";
        v0[52] = "ShowID";
        v0[53] = "GRANTED";
        v0[54] = "PENDING";
        v0[55] = 0;
        v0[56] = 0;
        v0[57] = 0;
        v0[58] = 0;
        v0[59] = 0;
        v0[60] = 0;
        v0[61] = "GROUP_ID";
        v0[62] = "GROUP_NAME";
        v0[63] = "GROUP_TOPIC";
        v0[64] = "GROUP_USER_ID_JOINED";
        v0[65] = "GROUP_USER_ID_OWNER";
        v0[66] = "HTTP";
        v0[67] = "SMS";
        v0[68] = "STCP";
        v0[69] = "SUDP";
        v0[70] = "USER_ALIAS";
        v0[71] = "USER_EMAIL_ADDRESS";
        v0[72] = "USER_FIRST_NAME";
        v0[73] = "USER_ID";
        v0[74] = "USER_LAST_NAME";
        v0[75] = "USER_MOBILE_NUMBER";
        v0[76] = "USER_ONLINE_STATUS";
        v0[77] = "WAPSMS";
        v0[78] = "WAPUDP";
        v0[79] = "WSP";
        v0[80] = "GROUP_USER_ID_AUTOJOIN";
        v0[81] = 0;
        v0[82] = 0;
        v0[83] = 0;
        v0[84] = 0;
        v0[85] = 0;
        v0[86] = 0;
        v0[87] = 0;
        v0[88] = 0;
        v0[89] = 0;
        v0[90] = 0;
        v0[91] = "ANGRY";
        v0[92] = "ANXIOUS";
        v0[93] = "ASHAMED";
        v0[94] = "AUDIO_CALL";
        v0[95] = "AVAILABLE";
        v0[96] = "BORED";
        v0[97] = "CALL";
        v0[98] = "CLI";
        v0[99] = "COMPUTER";
        v0[100] = "DISCREET";
        v0[101] = "EMAIL";
        v0[102] = "EXCITED";
        v0[103] = "HAPPY";
        v0[104] = "IM";
        v0[105] = "IM_OFFLINE";
        v0[106] = "IM_ONLINE";
        v0[107] = "IN_LOVE";
        v0[108] = "INVINCIBLE";
        v0[109] = "JEALOUS";
        v0[110] = "MMS";
        v0[111] = "MOBILE_PHONE";
        v0[112] = "NOT_AVAILABLE";
        v0[113] = "OTHER";
        v0[114] = "PDA";
        v0[115] = "SAD";
        v0[116] = "SLEEPY";
        v0[117] = "SMS";
        v0[118] = "VIDEO_CALL";
        v0[119] = "VIDEO_STREAM";
        org.kxml2.wap.wv.WV.attrValueTable = v0;
        return;
    }
    public WV()
    {
        return;
    }
    public static org.kxml2.wap.WbxmlParser createParser()
    {
        v0 = new org.kxml2.wap.WbxmlParser();
        v0.setTagTable(0, org.kxml2.wap.wv.WV.tagTablePage0);
        v0.setTagTable(1, org.kxml2.wap.wv.WV.tagTablePage1);
        v0.setTagTable(2, org.kxml2.wap.wv.WV.tagTablePage2);
        v0.setTagTable(3, org.kxml2.wap.wv.WV.tagTablePage3);
        v0.setTagTable(4, org.kxml2.wap.wv.WV.tagTablePage4);
        v0.setTagTable(5, org.kxml2.wap.wv.WV.tagTablePage5);
        v0.setTagTable(6, org.kxml2.wap.wv.WV.tagTablePage6);
        v0.setTagTable(7, org.kxml2.wap.wv.WV.tagTablePage7);
        v0.setTagTable(8, org.kxml2.wap.wv.WV.tagTablePage8);
        v0.setTagTable(9, org.kxml2.wap.wv.WV.tagTablePage9);
        v0.setTagTable(10, org.kxml2.wap.wv.WV.tagTablePageA);
        v0.setAttrStartTable(0, org.kxml2.wap.wv.WV.attrStartTable);
        v0.setAttrValueTable(0, org.kxml2.wap.wv.WV.attrValueTable);
        return v0;
    }
    static XmlPullParser()
    {
        v0 = new String[11];
        v0[0] = "START_DOCUMENT";
        v0[1] = "END_DOCUMENT";
        v0[2] = "START_TAG";
        v0[3] = "END_TAG";
        v0[4] = "TEXT";
        v0[5] = "CDSECT";
        v0[6] = "ENTITY_REF";
        v0[7] = "IGNORABLE_WHITESPACE";
        v0[8] = "PROCESSING_INSTRUCTION";
        v0[9] = "COMMENT";
        v0[10] = "DOCDECL";
        org.xmlpull.v1.XmlPullParser.TYPES = v0;
        return;
    }
    public XmlPullParserException(String p2)
    {
        this(p2);
        this.row = 15;
        this.column = 15;
        return;
    }
    public XmlPullParserException(String p5, org.xmlpull.v1.XmlPullParser p6, Throwable p7)
    {
        v1 = new StringBuilder();
        if(p5 != 0) {
            v0 = new StringBuilder().append(p5).append(" ").toString();
        } else {
            v0 = "";
        }
        v1 = v1.append(v0);
        if(p6 != 0) {
            v0 = new StringBuilder().append("(position:").append(p6.getPositionDescription()).append(") ").toString();
        } else {
            v0 = "";
        }
        v1 = v1.append(v0);
        if(p7 != 0) {
            v0 = new StringBuilder().append("caused by: ").append(p7).toString();
        } else {
            v0 = "";
        }
        this(v1.append(v0).toString());
        this.row = 15;
        this.column = 15;
        if(p6 != 0) {
            this.row = p6.getLineNumber();
            this.column = p6.getColumnNumber();
        }
        this.detail = p7;
        return;
    }
    public int getColumnNumber()
    {
        return this.column;
    }
    public Throwable getDetail()
    {
        return this.detail;
    }
    public int getLineNumber()
    {
        return this.row;
    }
    public void printStackTrace()
    {
        if(this.detail != 0) {
            v1 = System.err;
            synchronized(v1) {
                System.err.println(new StringBuilder().append(super.getMessage()).append("; nested exception is:").toString());
                this.detail.printStackTrace();
            }
        } else {
            super.printStackTrace();
        }
        return;
    }
    static XmlPullParserFactory()
    {
        org.xmlpull.v1.XmlPullParserFactory.referenceContextClass = new org.xmlpull.v1.XmlPullParserFactory().getClass();
        return;
    }
    protected XmlPullParserFactory()
    {
        this.features = new java.util.Hashtable();
        return;
    }
    public static org.xmlpull.v1.XmlPullParserFactory newInstance()
    {
        return org.xmlpull.v1.XmlPullParserFactory.newInstance(0, 0);
    }
    public static org.xmlpull.v1.XmlPullParserFactory newInstance(String p20, Class p21)
    {
        if(p21 == 0) {
            p21 = org.xmlpull.v1.XmlPullParserFactory.referenceContextClass;
        }
        if((p20 != 0) && ((p20.length() != 0) && ("DEFAULT".equals(p20) == 0))) {
            v5 = new StringBuilder().append("parameter classNames to newInstance() that contained '").append(p20).append("'").toString();
        } else {
            v10 = p21.getResourceAsStream("/META-INF/services/org.xmlpull.v1.XmlPullParserFactory");
            if(v10 != 0) {
                v15 = new StringBuffer();
                while(true) {
                    v4 = v10.read();
                    if(v4 < 0) {
                        break;
                    }
                    if(v4 > 32) {
                        v15.append(((char) v4));
                    }
                }
                v10.close();
                p20 = v15.toString();
                v5 = new StringBuilder().append("resource /META-INF/services/org.xmlpull.v1.XmlPullParserFactory that contained '").append(p20).append("'").toString();
            } else {
                throw new org.xmlpull.v1.XmlPullParserException("resource not found: /META-INF/services/org.xmlpull.v1.XmlPullParserFactory make sure that parser implementing XmlPull API is available");
            }
        }
        v8 = 0;
        v12 = new java.util.Vector();
        v16 = new java.util.Vector();
        v13 = 0;
        while (v13 < p20.length()) {
            v6 = p20.indexOf(44, v13);
            if(v6 == -1) {
                v6 = p20.length();
            }
            v11 = p20.substring(v13, v6);
            v3 = Class.forName(v11);
            v9 = v3.newInstance();
            if(v3 != 0) {
                v14 = 0;
                if((v9 instanceof org.xmlpull.v1.XmlPullParser) != 0) {
                    v12.addElement(v3);
                    v14 = 1;
                }
                if((v9 instanceof org.xmlpull.v1.XmlSerializer) != 0) {
                    v16.addElement(v3);
                    v14 = 1;
                }
                if((v9 instanceof org.xmlpull.v1.XmlPullParserFactory) != 0) {
                    if(v8 == 0) {
                        v8 = v9;
                    }
                    v14 = 1;
                }
                if(v14 == 0) {
                    throw new org.xmlpull.v1.XmlPullParserException(new StringBuilder().append("incompatible class: ").append(v11).toString());
                }
            }
            v13 = (v6 + 1);
        }
        if(v8 == 0) {
            v8 = new org.xmlpull.v1.XmlPullParserFactory();
        }
        v8.parserClasses = v12;
        v8.serializerClasses = v16;
        v8.classNamesLocation = v5;
        return v8;
    }
    public boolean getFeature(String p3)
    {
        v0 = this.features.get(p3);
        if(v0 == 0) {
            v1 = 0;
        } else {
            v1 = v0.booleanValue();
        }
        return v1;
    }
    public boolean isNamespaceAware()
    {
        return this.getFeature("http://xmlpull.org/v1/doc/features.html#process-namespaces");
    }
    public boolean isValidating()
    {
        return this.getFeature("http://xmlpull.org/v1/doc/features.html#validation");
    }
    public org.xmlpull.v1.XmlPullParser newPullParser()
    {
        if (this.parserClasses != 0) {
            if (this.parserClasses.size() != 0) {
                v3 = new StringBuffer();
                if (0 >= this.parserClasses.size()) {
                    throw new org.xmlpull.v1.XmlPullParserException(new StringBuilder().append("could not create parser: ").append(v3).toString());
                } else {
                    v5 = this.parserClasses.elementAt(0).newInstance();
                    v0 = this.features.keys();
                    while (v0.hasMoreElements() != 0) {
                        v4 = v0.nextElement();
                        v7 = this.features.get(v4);
                        if((v7 != 0) && (v7.booleanValue() != 0)) {
                            v5.setFeature(v4, 1);
                        }
                    }
                    return v5;
                }
            } else {
                throw new org.xmlpull.v1.XmlPullParserException(new StringBuilder().append("No valid parser classes found in ").append(this.classNamesLocation).toString());
            }
        } else {
            throw new org.xmlpull.v1.XmlPullParserException(new StringBuilder().append("Factory initialization was incomplete - has not tried ").append(this.classNamesLocation).toString());
        }
    }
    public org.xmlpull.v1.XmlSerializer newSerializer()
    {
        if (this.serializerClasses != 0) {
            if (this.serializerClasses.size() != 0) {
                v2 = new StringBuffer();
                if (0 >= this.serializerClasses.size()) {
                    throw new org.xmlpull.v1.XmlPullParserException(new StringBuilder().append("could not create serializer: ").append(v2).toString());
                } else {
                    return this.serializerClasses.elementAt(0).newInstance();
                }
            } else {
                throw new org.xmlpull.v1.XmlPullParserException(new StringBuilder().append("No valid serializer classes found in ").append(this.classNamesLocation).toString());
            }
        } else {
            throw new org.xmlpull.v1.XmlPullParserException(new StringBuilder().append("Factory initialization incomplete - has not tried ").append(this.classNamesLocation).toString());
        }
    }
    public void setFeature(String p3, boolean p4)
    {
        this.features.put(p3, new Boolean(p4));
        return;
    }
    public void setNamespaceAware(boolean p4)
    {
        this.features.put("http://xmlpull.org/v1/doc/features.html#process-namespaces", new Boolean(p4));
        return;
    }
    public void setValidating(boolean p4)
    {
        this.features.put("http://xmlpull.org/v1/doc/features.html#validation", new Boolean(p4));
        return;
    }
     D(com.crashlytics.android.v p1, java.io.File p2)
    {
        this.a = p2;
        return;
    }
    public final void a()
    {
        v0 = com.crashlytics.android.Crashlytics.getInstance().q();
        if(v0 != 0) {
            new com.crashlytics.android.aa(v0).a(new com.crashlytics.android.Z(this.a, com.crashlytics.android.v.j()));
        }
        return;
    }
    public W(String p2, String p3, com.crashlytics.android.internal.av p4)
    {
        this(p2, p3, p4, com.crashlytics.android.internal.ax.b);
        return;
    }
    public final boolean a(com.crashlytics.android.U p7)
    {
        v0 = this.b().a("X-CRASHLYTICS-API-KEY", p7.a).a("X-CRASHLYTICS-API-CLIENT-TYPE", "android").a("X-CRASHLYTICS-API-CLIENT-VERSION", com.crashlytics.android.Crashlytics.getInstance().getVersion());
        v2 = p7.b.e().entrySet().iterator();
        v1 = v0;
        while (v2.hasNext() != 0) {
            v1 = v1.a(v2.next());
        }
        v0 = p7.b;
        v0 = v1.a("report[file]", v0.b(), "application/octet-stream", v0.d()).b("report[identifier]", v0.c());
        com.crashlytics.android.internal.v.a().b().a("Crashlytics", new StringBuilder("Sending report to: ").append(this.a()).toString());
        v1 = v0.b();
        com.crashlytics.android.internal.v.a().b().a("Crashlytics", new StringBuilder("Create report request ID: ").append(v0.a("X-REQUEST-ID")).toString());
        com.crashlytics.android.internal.v.a().b().a("Crashlytics", new StringBuilder("Result was: ").append(v1).toString());
        if(com.crashlytics.android.internal.r.a(v1) != 0) {
            v0 = 0;
        } else {
            v0 = 1;
        }
        return v0;
    }
    public a(String p1, String p2, com.crashlytics.android.internal.av p3, com.crashlytics.android.internal.ax p4)
    {
        this(p1, p2, p3, p4);
        return;
    }
    private static com.crashlytics.android.internal.ay a(com.crashlytics.android.internal.ay p7, com.crashlytics.android.b p8)
    {
        v2 = p7.b("app[identifier]", p8.b).b("app[name]", p8.f).b("app[display_version]", p8.c).b("app[build_version]", p8.d).a("app[source]", Integer.valueOf(p8.g)).b("app[minimum_sdk_version]", p8.h).b("app[built_sdk_version]", p8.i);
        if(com.crashlytics.android.internal.ab.e(p8.e) == 0) {
            v2.b("app[instance_identifier]", p8.e);
        }
        if(p8.j != 0) {
            v1 = com.crashlytics.android.internal.v.a().getContext().getResources().openRawResource(p8.j.b);
            v2.b("app[icon][hash]", p8.j.a).a("app[icon][data]", "icon.png", "application/octet-stream", v1).a("app[icon][width]", Integer.valueOf(p8.j.c)).a("app[icon][height]", Integer.valueOf(p8.j.d));
            com.crashlytics.android.internal.ab.a(v1, "Failed to close app icon InputStream.");
        }
        return v2;
    }
    public final boolean a(com.crashlytics.android.b p7)
    {
        v1 = com.crashlytics.android.a.a(this.b().a("X-CRASHLYTICS-API-KEY", p7.a).a("X-CRASHLYTICS-API-CLIENT-TYPE", "android").a("X-CRASHLYTICS-API-CLIENT-VERSION", com.crashlytics.android.internal.v.a().getVersion()), p7);
        com.crashlytics.android.internal.v.a().b().a("Crashlytics", new StringBuilder("Sending app info to ").append(this.a()).toString());
        if(p7.j != 0) {
            com.crashlytics.android.internal.v.a().b().a("Crashlytics", new StringBuilder("App icon hash is ").append(p7.j.a).toString());
            com.crashlytics.android.internal.v.a().b().a("Crashlytics", new StringBuilder("App icon size is ").append(p7.j.c).append("x").append(p7.j.d).toString());
        }
        v2 = v1.b();
        if("POST".equals(v1.d()) == 0) {
            v0 = "Update";
        } else {
            v0 = "Create";
        }
        com.crashlytics.android.internal.v.a().b().a("Crashlytics", new StringBuilder().append(v0).append(" app request ID: ").append(v1.a("X-REQUEST-ID")).toString());
        com.crashlytics.android.internal.v.a().b().a("Crashlytics", new StringBuilder("Result was ").append(v2).toString());
        if(com.crashlytics.android.internal.r.a(v2) != 0) {
            v0 = 0;
        } else {
            v0 = 1;
        }
        return v0;
    }
     ac(com.crashlytics.android.aa p1, float p2)
    {
        this.b = p1;
        this.a = p2;
        return;
    }
    public final void a()
    {
        com.crashlytics.android.internal.v.a().b().a("Crashlytics", new StringBuilder("Starting report processing in ").append(this.a).append(" second(s)...").toString());
        if(this.a > 0) {
            Thread.sleep(((long) (this.a * 1000.0)));
        }
        v1 = com.crashlytics.android.Crashlytics.getInstance();
        v2 = v1.l();
        v0 = this.b.a();
        if(v2.a() == 0) {
            if((v0.isEmpty() != 0) || (v1.p() != 0)) {
                v1 = 0;
                while ((v0.isEmpty() == 0) && (com.crashlytics.android.Crashlytics.getInstance().l().a() == 0)) {
                    com.crashlytics.android.internal.v.a().b().a("Crashlytics", new StringBuilder("Attempting to send ").append(v0.size()).append(" report(s)").toString());
                    v2 = v0.iterator();
                    while (v2.hasNext() != 0) {
                        this.b.a(v2.next());
                    }
                    v0 = this.b.a();
                    if(v0.isEmpty() == 0) {
                        v2 = (v1 + 1);
                        v3 = ((long) com.crashlytics.android.aa.b()[Math.min(v1, (com.crashlytics.android.aa.b().length - 1))]);
                        com.crashlytics.android.internal.v.a().b().a("Crashlytics", new StringBuilder("Report submisson: scheduling delayed retry in ").append(v3).append(" seconds").toString());
                        Thread.sleep((v3 * 1000.0));
                        v1 = v2;
                    }
                }
            } else {
                com.crashlytics.android.internal.v.a().b().a("Crashlytics", new StringBuilder("User declined to send. Removing ").append(v0.size()).append(" Report(s).").toString());
                v1 = v0.iterator();
                while (v1.hasNext() != 0) {
                    v1.next().a();
                }
            }
        }
        com.crashlytics.android.aa.a(this.b, 0);
        return;
    }
    public A()
    {
        return;
    }
    public final void a(int p1, String p2, String p3)
    {
        return;
    }
    public final void a(int p1, String p2, String p3, boolean p4)
    {
        return;
    }
    public final void a(String p1, String p2)
    {
        return;
    }
    public final void a(String p1, String p2, Throwable p3)
    {
        return;
    }
    public final void b(String p1, String p2)
    {
        return;
    }
    public final void c(String p1, String p2)
    {
        return;
    }
    public final void d(String p1, String p2)
    {
        return;
    }
    public B(com.crashlytics.android.internal.m p3)
    {
        this(p3);
        this.b = new android.os.Handler(android.os.Looper.getMainLooper());
        return;
    }
    static synthetic void a(com.crashlytics.android.internal.B p0, Object p1)
    {
        super.c(p1);
        return;
    }
    public final void c(Object p3)
    {
        if((p3 instanceof com.crashlytics.android.internal.t) == 0) {
            if(((p3 instanceof com.crashlytics.android.internal.s) == 0) && ((p3 instanceof com.crashlytics.android.internal.f) == 0)) {
                throw new IllegalArgumentException("Posted argument must implement Event interface");
            } else {
                super.c(p3);
            }
        } else {
            if(android.os.Looper.myLooper() != android.os.Looper.getMainLooper()) {
                this.b.post(new com.crashlytics.android.internal.C(this, p3));
            } else {
                super.c(p3);
            }
        }
        return;
    }
     E(com.crashlytics.android.internal.D p1)
    {
        this.a = p1;
        return;
    }
    public final void a()
    {
        com.crashlytics.android.internal.D.a(this.a);
        return;
    }
    public H(String p2, String p3, com.crashlytics.android.internal.av p4)
    {
        this(p2, p3, p4, com.crashlytics.android.internal.ax.b);
        return;
    }
    public final boolean a(String p9, java.util.List p10)
    {
        v2 = 0;
        v3 = this.b().a("X-CRASHLYTICS-API-CLIENT-TYPE", "android").a("X-CRASHLYTICS-API-CLIENT-VERSION", com.crashlytics.android.internal.v.a().getVersion()).a("X-CRASHLYTICS-API-KEY", p9);
        v4 = p10.iterator();
        v1 = 0;
        while (v4.hasNext() != 0) {
            v0 = v4.next();
            com.crashlytics.android.internal.ab.c(new StringBuilder("Adding analytics session file ").append(v0.getName()).append(" to multipart POST").toString());
            v3.a(new StringBuilder("session_analytics_file_").append(v1).toString(), v0.getName(), "application/vnd.crashlytics.android.events", v0);
            v1 = (v1 + 1);
        }
        com.crashlytics.android.internal.ab.c(new StringBuilder("Sending ").append(p10.size()).append(" analytics files to ").append(this.a()).toString());
        v0 = v3.b();
        com.crashlytics.android.internal.ab.c(new StringBuilder("Response code for analytics file send is ").append(v0).toString());
        if(com.crashlytics.android.internal.r.a(v0) == 0) {
            v2 = 1;
        }
        return v2;
    }
     I()
    {
        return;
    }
    public final void a()
    {
        return;
    }
    public final void a(com.crashlytics.android.internal.V p1)
    {
        return;
    }
    public final void a(com.crashlytics.android.internal.aK p1, String p2)
    {
        return;
    }
    public final void b()
    {
        return;
    }
    public final void c()
    {
        return;
    }
    public final void d()
    {
        return;
    }
    public J(java.util.concurrent.ScheduledExecutorService p2, com.crashlytics.android.internal.K p3, com.crashlytics.android.internal.av p4)
    {
        this.e = 15;
        this.a = p2;
        this.b = p3;
        this.c = p4;
        return;
    }
    private void a(int p8, int p9)
    {
        v1 = new com.crashlytics.android.internal.Y(this.b, this);
        com.crashlytics.android.internal.ab.c(new StringBuilder("Scheduling time based file roll over every ").append(p9).append(" seconds").toString());
        this.d = this.a.scheduleAtFixedRate(v1, ((long) p8), v3, ((long) p9), v5, java.util.concurrent.TimeUnit.SECONDS);
        return;
    }
    public final void a()
    {
        if(this.f != 0) {
            com.crashlytics.android.internal.ab.c("Sending all analytics files");
            v2 = this.b.b();
            v0 = 0;
            while (v2.size() > 0) {
                v3 = this.f.a(com.crashlytics.android.internal.r.a(com.crashlytics.android.internal.D.a().getContext(), 0), v2);
                if(v3 != 0) {
                    v1 = (v2.size() + v0);
                    this.b.a(v2);
                    v0 = v1;
                }
                v6 = new Object[2];
                v6[0] = Integer.valueOf(v2.size());
                if(v3 == 0) {
                    v1 = "did not succeed";
                } else {
                    v1 = "succeeded";
                }
                v6[1] = v1;
                com.crashlytics.android.internal.ab.c(String.format(java.util.Locale.US, "attempt to send batch of %d analytics files %s", v6));
                if(v3 != 0) {
                    v2 = this.b.b();
                }
            }
            if(v0 == 0) {
                this.b.d();
            }
        } else {
            com.crashlytics.android.internal.ab.c("skipping analytics files send because we don't yet know the target endpoint");
        }
        return;
    }
    public final void a(com.crashlytics.android.internal.V p5)
    {
        v1 = 1;
        com.crashlytics.android.internal.ab.c(p5.toString());
        this.b.a(p5);
        if(this.e == 15) {
            v0 = 0;
        } else {
            v0 = 1;
        }
        if(this.d != 0) {
            v1 = 0;
        }
        if((v0 != 0) && (v1 != 0)) {
            this.a(this.e, this.e);
        }
        return;
    }
    public final void a(com.crashlytics.android.internal.aK p4, String p5)
    {
        this.f = new com.crashlytics.android.internal.H(p5, p4.a, this.c);
        this.b.a(p4);
        this.e = p4.b;
        this.a(0, this.e);
        return;
    }
    public final void b()
    {
        this.b.c();
        return;
    }
    public final void c()
    {
        if(this.d != 0) {
            com.crashlytics.android.internal.ab.c("Cancelling time-based rollover because no events are currently being generated.");
            this.d.cancel(0);
            this.d = 0;
        }
        return;
    }
    public final void d()
    {
        this.b.a();
        return;
    }
    public O(String p12, String p13, String p14, String p15, String p16, String p17, String p18, com.crashlytics.android.internal.K p19, com.crashlytics.android.internal.av p20)
    {
        this(p12, p13, p14, p15, p16, p17, p18, p19, com.crashlytics.android.internal.ah.b("Crashlytics SAM"), p20);
        return;
    }
     O(String p2, String p3, String p4, String p5, String p6, String p7, String p8, com.crashlytics.android.internal.K p9, java.util.concurrent.ScheduledExecutorService p10, com.crashlytics.android.internal.av p11)
    {
        this.b = p2;
        this.c = p3;
        this.d = p4;
        this.e = p5;
        this.f = p6;
        this.g = p7;
        this.h = p8;
        this.i = java.util.UUID.randomUUID().toString();
        this.j = p10;
        this.a = new com.crashlytics.android.internal.J(p10, p9, p11);
        p9.a(this);
        return;
    }
    static synthetic String a(com.crashlytics.android.internal.O p1)
    {
        return p1.b;
    }
    private void a(com.crashlytics.android.internal.V p2, boolean p3)
    {
        this.a(new com.crashlytics.android.internal.Q(this, p2, p3));
        return;
    }
    private void a(com.crashlytics.android.internal.W p11, android.app.Activity p12, boolean p13)
    {
        this.a(com.crashlytics.android.internal.V.a(this.b, this.i, this.c, this.d, this.e, this.f, this.g, this.h, p11, java.util.Collections.singletonMap("activity", p12.getClass().getName())), 0);
        return;
    }
    private void a(Runnable p2)
    {
        this.j.submit(p2);
        return;
    }
    static synthetic String b(com.crashlytics.android.internal.O p1)
    {
        return p1.i;
    }
    static synthetic String c(com.crashlytics.android.internal.O p1)
    {
        return p1.c;
    }
    static synthetic String d(com.crashlytics.android.internal.O p1)
    {
        return p1.d;
    }
    static synthetic String e(com.crashlytics.android.internal.O p1)
    {
        return p1.e;
    }
    static synthetic String f(com.crashlytics.android.internal.O p1)
    {
        return p1.f;
    }
    static synthetic String g(com.crashlytics.android.internal.O p1)
    {
        return p1.g;
    }
    static synthetic String h(com.crashlytics.android.internal.O p1)
    {
        return p1.h;
    }
     void a()
    {
        this.a(new com.crashlytics.android.internal.T(this));
        return;
    }
    public final void a(android.app.Activity p3)
    {
        this.a(com.crashlytics.android.internal.W.a, p3, 0);
        return;
    }
    final void a(com.crashlytics.android.internal.aK p2, String p3)
    {
        this.a(new com.crashlytics.android.internal.R(this, p2, p3));
        return;
    }
    public final void a(String p3)
    {
        if (android.os.Looper.myLooper() != android.os.Looper.getMainLooper()) {
            this.j.submit(new com.crashlytics.android.internal.P(this, p3)).get();
            return;
        } else {
            throw new IllegalStateException("onCrash called from main thread!!!");
        }
    }
    public final void b()
    {
        this.a(com.crashlytics.android.internal.V.a(this.b, this.i, this.c, this.d, this.e, this.f, this.g, this.h, com.crashlytics.android.internal.W.j, new java.util.HashMap()), 1);
        return;
    }
    public final void b(android.app.Activity p3)
    {
        this.a(com.crashlytics.android.internal.W.g, p3, 0);
        return;
    }
    public final void b(String p11)
    {
        this.a(com.crashlytics.android.internal.V.a(this.b, this.i, this.c, this.d, this.e, this.f, this.g, this.h, com.crashlytics.android.internal.W.h, java.util.Collections.singletonMap("sessionId", p11)), 0);
        return;
    }
    public final void c()
    {
        this.a(new com.crashlytics.android.internal.S(this));
        return;
    }
    public final void c(android.app.Activity p3)
    {
        this.a(com.crashlytics.android.internal.W.e, p3, 0);
        return;
    }
    public final void d(android.app.Activity p3)
    {
        this.a(com.crashlytics.android.internal.W.c, p3, 0);
        return;
    }
    public final void e(android.app.Activity p3)
    {
        this.a(com.crashlytics.android.internal.W.d, p3, 0);
        return;
    }
    public final void f(android.app.Activity p3)
    {
        this.a(com.crashlytics.android.internal.W.b, p3, 0);
        return;
    }
    public final void g(android.app.Activity p3)
    {
        this.a(com.crashlytics.android.internal.W.f, p3, 0);
        return;
    }
    protected aA(java.io.Closeable p1, boolean p2)
    {
        this.a = p1;
        this.b = p2;
        return;
    }
    protected final void b()
    {
        if((this.a instanceof java.io.Flushable) != 0) {
            this.a.flush();
        }
        if(!this.b) {
            this.a.close();
        } else {
            this.a.close();
        }
        return;
    }
     aC()
    {
        return;
    }
    public final java.net.HttpURLConnection a(java.net.URL p2)
    {
        return p2.openConnection();
    }
    public aO(String p2, String p3, com.crashlytics.android.internal.av p4)
    {
        this(p2, p3, p4, com.crashlytics.android.internal.ax.a);
        return;
    }
    private aO(String p1, String p2, com.crashlytics.android.internal.av p3, com.crashlytics.android.internal.ax p4)
    {
        this(p1, p2, p3, p4);
        return;
    }
    public final org.json.JSONObject a(com.crashlytics.android.internal.aZ p8)
    {
        v0 = new java.util.HashMap();
        v0.put("build_version", p8.e);
        v0.put("display_version", p8.d);
        v0.put("source", Integer.toString(p8.f));
        if(p8.g != 0) {
            v0.put("icon_hash", p8.g);
        }
        v2 = p8.c;
        if(com.crashlytics.android.internal.ab.e(v2) == 0) {
            v0.put("instance", v2);
        }
        v2 = this.a(v0).a("X-CRASHLYTICS-API-KEY", p8.a).a("X-CRASHLYTICS-API-CLIENT-TYPE", "android").a("X-CRASHLYTICS-D", p8.b).a("X-CRASHLYTICS-API-CLIENT-VERSION", com.crashlytics.android.internal.v.a().getVersion()).a("Accept", "application/json");
        com.crashlytics.android.internal.v.a().b().a("Crashlytics", new StringBuilder("Requesting settings from ").append(this.a()).toString());
        com.crashlytics.android.internal.v.a().b().a("Crashlytics", new StringBuilder("Settings query params were: ").append(v0).toString());
        v0 = new org.json.JSONObject(v2.c());
        if(v2 != 0) {
            com.crashlytics.android.internal.v.a().b().a("Crashlytics", new StringBuilder("Settings request ID: ").append(v2.a("X-REQUEST-ID")).toString());
        }
        return v0;
    }
    public ae(String p1)
    {
        this.a = p1;
        return;
    }
    public final String a()
    {
        return this.a;
    }
     am(com.crashlytics.android.internal.al p1, Runnable p2)
    {
        this.a = p2;
        return;
    }
    public final void a()
    {
        this.a.run();
        return;
    }
     an(String p1, java.util.concurrent.ExecutorService p2, long p3, java.util.concurrent.TimeUnit p5)
    {
        this.a = p1;
        this.b = p2;
        this.c = p3;
        this.d = p5;
        return;
    }
    public final void a()
    {
        v0 = com.crashlytics.android.internal.v.a().b();
        v2 = new StringBuilder("Executing shutdown hook for ").append(this.a).toString();
        v0.a("Crashlytics", v2);
        this.b.shutdown();
        if(this.b.awaitTermination(this.c, v2, this.d) == 0) {
            com.crashlytics.android.internal.v.a().b().a("Crashlytics", new StringBuilder().append(this.a).append(" did not shut down in the allocated time. Requesting immediate shutdown.").toString());
            this.b.shutdownNow();
        }
        return;
    }
     ar(com.crashlytics.android.internal.aq p2, StringBuilder p3)
    {
        this.b = p3;
        this.a = 1;
        return;
    }
    public final void a(java.io.InputStream p3, int p4)
    {
        if(!this.a) {
            this.b.append(", ");
        } else {
            this.a = 0;
        }
        this.b.append(p4);
        return;
    }
     j()
    {
        return;
    }
    public final java.util.Map a(Object p2)
    {
        return com.crashlytics.android.internal.a.a(p2);
    }
    public final java.util.Map b(Object p2)
    {
        return com.crashlytics.android.internal.a.b(p2);
    }
     n()
    {
        return;
    }
    public final void a(com.crashlytics.android.internal.b p1)
    {
        return;
    }
     o()
    {
        return;
    }
    public final void a(com.crashlytics.android.internal.b p4)
    {
        if (android.os.Looper.myLooper() == android.os.Looper.getMainLooper()) {
            return;
        } else {
            throw new IllegalStateException(new StringBuilder("Event bus ").append(p4).append(" accessed from non-main thread ").append(android.os.Looper.myLooper()).toString());
        }
    }
    public r()
    {
        return;
    }
    public static int a(int p3)
    {
        v0 = 0;
        if((p3 < 200) || (p3 > 299)) {
            if((p3 < 300) || (p3 > 399)) {
                if((p3 < 400) || (p3 > 499)) {
                    if(p3 < 500) {
                        v0 = 1;
                    } else {
                        v0 = 1;
                    }
                }
            } else {
                v0 = 1;
            }
        }
        return v0;
    }
    static synthetic android.app.Activity a(android.content.Context p1)
    {
        if((p1 instanceof android.app.Activity) == 0) {
            p1 = 0;
        }
        return p1;
    }
    public static String a(android.content.Context p6, boolean p7)
    {
        v0 = p6.getApplicationContext();
        v0 = v0.getPackageManager().getApplicationInfo(v0.getPackageName(), 128).metaData;
        if(v0 == 0) {
            v0 = 0;
        } else {
            v0 = v0.getString("com.crashlytics.ApiKey");
        }
        if(com.crashlytics.android.internal.ab.e(v0) != 0) {
            v2 = com.crashlytics.android.internal.ab.a(p6, "com.crashlytics.ApiKey", "string");
            if(v2 != 0) {
                v0 = p6.getResources().getString(v2);
            }
        }
        if(com.crashlytics.android.internal.ab.e(v0) != 0) {
            if((p7) && (com.crashlytics.android.internal.ab.f(p6) == 0)) {
                com.crashlytics.android.internal.y.a().b().a("Crashlytics", "Crashlytics could not be initialized, API key missing from AndroidManifest.xml. Add the following tag to your Application element \x0a\x09<meta-data android:name="com.crashlytics.ApiKey" android:value="YOUR_API_KEY"/>", 0);
            } else {
                throw new IllegalArgumentException("Crashlytics could not be initialized, API key missing from AndroidManifest.xml. Add the following tag to your Application element \x0a\x09<meta-data android:name="com.crashlytics.ApiKey" android:value="YOUR_API_KEY"/>");
            }
        }
        return v0;
    }
    static synthetic android.app.Application b(android.content.Context p1)
    {
        if((p1 instanceof android.app.Application) == 0) {
            if((p1 instanceof android.app.Activity) == 0) {
                if((p1 instanceof android.app.Service) == 0) {
                    if((p1.getApplicationContext() instanceof android.app.Application) == 0) {
                        p1 = 0;
                    } else {
                        p1 = p1.getApplicationContext();
                    }
                } else {
                    p1 = p1.getApplication();
                }
            } else {
                p1 = p1.getApplication();
            }
        }
        return p1;
    }
    private static boolean b(int p1)
    {
        if(com.crashlytics.android.internal.y.a().g() > p1) {
            v0 = 0;
        } else {
            v0 = 1;
        }
        return v0;
    }
    public final void a(int p2, String p3, String p4)
    {
        this.a(p2, p3, p4, 0);
        return;
    }
    public final void a(int p2, String p3, String p4, boolean p5)
    {
        if((p5) || (com.crashlytics.android.internal.r.b(p2) != 0)) {
            android.util.Log.println(p2, p3, p4);
        }
        return;
    }
    public final void a(String p2, String p3)
    {
        if(com.crashlytics.android.internal.r.b(3) != 0) {
            android.util.Log.d(p2, p3, 0);
        }
        return;
    }
    public final void a(String p2, String p3, Throwable p4)
    {
        if(com.crashlytics.android.internal.r.b(6) != 0) {
            android.util.Log.e(p2, p3, p4);
        }
        return;
    }
    public final void b(String p2, String p3)
    {
        if(com.crashlytics.android.internal.r.b(4) != 0) {
            android.util.Log.i(p2, p3, 0);
        }
        return;
    }
    public final void c(String p2, String p3)
    {
        if(com.crashlytics.android.internal.r.b(5) != 0) {
            android.util.Log.w(p2, p3, 0);
        }
        return;
    }
    public final void d(String p2, String p3)
    {
        this.a(p2, p3, 0);
        return;
    }
    public u()
    {
        return;
    }
     v()
    {
        this.b = new java.util.concurrent.atomic.AtomicReference();
        this.h = 4;
        this.a = new com.crashlytics.android.internal.B(com.crashlytics.android.internal.m.a);
        this.i = new java.util.concurrent.ConcurrentHashMap();
        return;
    }
    public static com.crashlytics.android.internal.v a()
    {
        return com.crashlytics.android.internal.y.a();
    }
    private com.crashlytics.android.internal.v a(android.app.Activity p2)
    {
        this.f = new ref.WeakReference(p2);
        return this;
    }
    static synthetic com.crashlytics.android.internal.v a(com.crashlytics.android.internal.v p1, android.app.Activity p2)
    {
        return p1.a(p2);
    }
    public static varargs synchronized void a(android.content.Context p7, com.crashlytics.android.internal.u[] p8)
    {
        synchronized(com.crashlytics.android.internal.v) {
            if(com.crashlytics.android.internal.y.a().isInitialized() == 0) {
                v0 = com.crashlytics.android.internal.y.a();
                v0.e = com.crashlytics.android.internal.r.b(p7);
                v2 = v0.a(com.crashlytics.android.internal.r.a(p7));
                v3 = p8.length;
                v0 = 0;
                while (v0 < v3) {
                    v4 = p8[v0];
                    if(v2.i.containsKey(p8) == 0) {
                        v2.i.putIfAbsent(v4.getClass(), v4);
                    }
                    v0 = (v0 + 1);
                }
                v2.a(p7);
            }
        }
        return;
    }
    public final com.crashlytics.android.internal.u a(Class p2)
    {
        return this.i.get(p2);
    }
    public final void a(com.crashlytics.android.internal.q p2)
    {
        this.b.set(p2);
        return;
    }
    public final void a(String p1)
    {
        this.g = p1;
        return;
    }
    public final void a(boolean p2)
    {
        this.c = p2;
        if(!p2) {
            v0 = 4;
        } else {
            v0 = 3;
        }
        this.h = v0;
        return;
    }
    public final com.crashlytics.android.internal.q b()
    {
        v0 = this.b.get();
        if(v0 == 0) {
            v0 = new com.crashlytics.android.internal.r();
            if(this.b.compareAndSet(0, v0) == 0) {
                v0 = this.b.get();
            }
        }
        return v0;
    }
    protected final void c()
    {
        v1 = this.getContext();
        this.d = new java.io.File(v1.getFilesDir(), "com.crashlytics.sdk.android");
        if(this.d.exists() == 0) {
            this.d.mkdirs();
        }
        if(android.os.Build$VERSION.SDK_INT >= 14) {
            com.crashlytics.android.internal.w.a(new com.crashlytics.android.internal.w(this, 0), this.e);
        }
        if((!this.c) || (android.util.Log.isLoggable("CrashlyticsInternal", 3) == 0)) {
            v2 = this.i.values().iterator();
            while (v2.hasNext() != 0) {
                v2.next().a(v1);
            }
        } else {
            v2 = new StringBuilder();
            v3 = this.i.values().iterator();
            while (v3.hasNext() != 0) {
                v0 = v3.next();
                v4 = System.nanoTime();
                v0.a(v1);
                v2.append("sdkPerfStart.").append(v0.getClass().getName()).append(61).append((System.nanoTime() - v4)).append(10);
            }
            android.util.Log.d("CrashlyticsInternal", v2.toString());
        }
        return;
    }
    public final android.app.Application d()
    {
        return this.e;
    }
    public final android.app.Activity e()
    {
        if(this.f == 0) {
            v0 = 0;
        } else {
            v0 = this.f.get();
        }
        return v0;
    }
    public final boolean f()
    {
        return this.c;
    }
    public final int g()
    {
        return this.h;
    }
    public final String getVersion()
    {
        return "1.1.11.10";
    }
    public final java.io.File h()
    {
        return this.d;
    }
    public final String i()
    {
        return this.g;
    }
     k(com.crashlytics.android.PinningInfoProvider p1)
    {
        this.a = p1;
        return;
    }
    public final java.io.InputStream a()
    {
        return this.a.getKeyStoreStream();
    }
    public final String b()
    {
        return this.a.getKeyStorePassword();
    }
    public final String[] c()
    {
        return this.a.getPins();
    }
     l(com.crashlytics.android.Crashlytics p1)
    {
        this.a = p1;
        return;
    }
    public final synthetic Object a(com.crashlytics.android.internal.aX p3)
    {
        v0 = 0;
        if(!p3.d.a) {
            v0 = Boolean.valueOf(0);
        } else {
            if(com.crashlytics.android.Crashlytics.k() == 0) {
                v0 = 1;
            }
            v0 = Boolean.valueOf(v0);
        }
        return v0;
    }
     m(com.crashlytics.android.Crashlytics p1)
    {
        this.a = p1;
        return;
    }
    public final synthetic Object a(com.crashlytics.android.internal.aX p4)
    {
        v0 = 1;
        v1 = com.crashlytics.android.internal.v.a().e();
        if((v1 != 0) && ((v1.isFinishing() == 0) && (this.a.j() != 0))) {
            v0 = com.crashlytics.android.Crashlytics.a(this.a, v1, p4.c);
        }
        return Boolean.valueOf(v0);
    }
     n(com.crashlytics.android.Crashlytics p1)
    {
        return;
    }
    public final synthetic Object a(com.crashlytics.android.internal.aX p5)
    {
        return new com.crashlytics.android.W(com.crashlytics.android.Crashlytics.i(), p5.a.c, com.crashlytics.android.Crashlytics.s());
    }
     o(com.crashlytics.android.Crashlytics p1)
    {
        return;
    }
    public final synthetic bridge Object a(com.crashlytics.android.internal.aX p2)
    {
        return p2.b;
    }
     t(com.crashlytics.android.Crashlytics p1, android.content.Context p2, float p3, java.util.concurrent.CountDownLatch p4)
    {
        this.d = p1;
        this.a = p2;
        this.b = p3;
        this.c = p4;
        return;
    }
    public final void a()
    {
        if(com.crashlytics.android.Crashlytics.a(this.d, this.a, this.b) != 0) {
            com.crashlytics.android.Crashlytics.a(this.d).e();
        }
        this.c.countDown();
        return;
    }
     y(com.crashlytics.android.v p1, byte[] p2, int[] p3)
    {
        this.a = p2;
        this.b = p3;
        return;
    }
    public final void a(java.io.InputStream p4, int p5)
    {
        p4.read(this.a, this.b[0], p5);
        v0 = this.b;
        v0[0] = (v0[0] + p5);
        p4.close();
        return;
    }
    public FlightCheckInActivity()
    {
        return;
    }
    protected final void defineResources()
    {
        this.setResources(1.74128989142e+38, 1.72800105947e+38, "file:///android_asset/beforeFlightMOCK_hr.html", "file:///android_asset/beforeFlightMOCK_en.html");
        return;
    }
     FlightStatusActivity$1$1(net.croz.android.croair.FlightStatusActivity$1 p1, android.widget.EditText p2)
    {
        this.this$1 = p1;
        this.val$flightNumberInput = p2;
        return;
    }
    public void onError()
    {
        new net.croz.android.croair.utils.ConnectionErrorDialog(net.croz.android.croair.FlightStatusActivity$1.access$0(this.this$1)).show();
        return;
    }
    public void run(java.util.Collection p6)
    {
        net.croz.android.croair.FlightStatusActivity.access$1(net.croz.android.croair.FlightStatusActivity$1.access$0(this.this$1), p6);
        if(net.croz.android.croair.FlightStatusActivity.access$2(net.croz.android.croair.FlightStatusActivity$1.access$0(this.this$1)).isEmpty() == 0) {
            net.croz.android.croair.FlightStatusActivity.access$3(net.croz.android.croair.FlightStatusActivity$1.access$0(this.this$1)).setDisplayedChild(1);
            net.croz.android.croair.FlightStatusActivity.access$4(net.croz.android.croair.FlightStatusActivity$1.access$0(this.this$1), new StringBuilder("OU").append(this.val$flightNumberInput.getText().toString()).toString());
            net.croz.android.croair.FlightStatusActivity.access$5(net.croz.android.croair.FlightStatusActivity$1.access$0(this.this$1));
            net.croz.android.croair.FlightStatusActivity.access$6(net.croz.android.croair.FlightStatusActivity$1.access$0(this.this$1), this.val$flightNumberInput.getText().toString(), 0);
        } else {
            v0 = new android.app.AlertDialog$Builder(net.croz.android.croair.FlightStatusActivity$1.access$0(this.this$1));
            v0.setMessage(net.croz.android.croair.FlightStatusActivity$1.access$0(this.this$1).getResources().getString(1.76787972477e+38)).setCancelable(0).setPositiveButton(net.croz.android.croair.FlightStatusActivity$1.access$0(this.this$1).getResources().getString(1.76787952194e+38), new net.croz.android.croair.FlightStatusActivity$1$1$1(this, this.val$flightNumberInput));
            v0.create().show();
        }
        return;
    }
     FlightStatusActivity$7(net.croz.android.croair.FlightStatusActivity p1, String p2)
    {
        this.this$0 = p1;
        this.val$p_flightNumber = p2;
        return;
    }
    public void onError()
    {
        new net.croz.android.croair.utils.ConnectionErrorDialog(this.this$0).show();
        return;
    }
    public void run(java.util.Collection p4)
    {
        net.croz.android.croair.FlightStatusActivity.access$1(this.this$0, p4);
        net.croz.android.croair.FlightStatusActivity.access$4(this.this$0, new StringBuilder("OU").append(this.val$p_flightNumber).toString());
        return;
    }
    public LuggageActivity()
    {
        return;
    }
    protected final void defineResources()
    {
        this.setResources(1.74129070272e+38, 1.72800105947e+38, "file:///android_asset/luggageMock_hr.html", "file:///android_asset/luggageMock_en.html");
        return;
    }
     ScheduleActivity$6(net.croz.android.croair.ScheduleActivity p1, String p2, String p3)
    {
        this.this$0 = p1;
        this.val$originName = p2;
        this.val$destinationName = p3;
        return;
    }
    public void onError()
    {
        new net.croz.android.croair.utils.ConnectionErrorDialog(this.this$0).show();
        return;
    }
    public void run(java.util.Collection p5)
    {
        net.croz.android.croair.ScheduleActivity.access$3(this.this$0, p5);
        if(net.croz.android.croair.ScheduleActivity.access$4(this.this$0).isEmpty() == 0) {
            net.croz.android.croair.ScheduleActivity.access$5(this.this$0, net.croz.android.croair.utils.StringUtils.capitalizeFirstLettersInEachWord(this.val$originName), net.croz.android.croair.utils.StringUtils.capitalizeFirstLettersInEachWord(this.val$destinationName));
        } else {
            v0 = new android.app.AlertDialog$Builder(this.this$0);
            v0.setMessage(this.this$0.getResources().getString(1.76787972477e+38)).setCancelable(0).setPositiveButton(this.this$0.getResources().getString(1.76787952194e+38), new net.croz.android.croair.ScheduleActivity$6$1(this));
            v0.create().show();
        }
        return;
    }
    public VCard()
    {
        return;
    }
    public VCard(org.kobjects.pim.VCard p1)
    {
        this(p1);
        return;
    }
    public int getArraySize(String p2)
    {
        if(p2.equals("n") == 0) {
            if(p2.equals("adr") == 0) {
                v0 = 15;
            } else {
                v0 = 6;
            }
        } else {
            v0 = 5;
        }
        return v0;
    }
    public String getType()
    {
        return "vcard";
    }
    public SoapFault12()
    {
        this.version = 120;
        return;
    }
    public SoapFault12(int p1)
    {
        this.version = p1;
        return;
    }
    private void parseSelf(org.xmlpull.v1.XmlPullParser p6)
    {
        p6.require(2, "http://www.w3.org/2003/05/soap-envelope", "Fault");
        while (p6.nextTag() == 2) {
            v0 = p6.getName();
            p6.nextTag();
            if(v0.equals("Code") == 0) {
                if(v0.equals("Reason") == 0) {
                    if(v0.equals("Node") == 0) {
                        if(v0.equals("Role") == 0) {
                            if(v0.equals("Detail") == 0) {
                                throw new RuntimeException(new StringBuffer().append("unexpected tag:").append(v0).toString());
                            } else {
                                this.Detail = new org.kxml2.kdom.Node();
                                this.Detail.parse(p6);
                            }
                        } else {
                            this.Role = new org.kxml2.kdom.Node();
                            this.Role.parse(p6);
                        }
                    } else {
                        this.Node = new org.kxml2.kdom.Node();
                        this.Node.parse(p6);
                    }
                } else {
                    this.Reason = new org.kxml2.kdom.Node();
                    this.Reason.parse(p6);
                }
            } else {
                this.Code = new org.kxml2.kdom.Node();
                this.Code.parse(p6);
            }
            p6.require(3, "http://www.w3.org/2003/05/soap-envelope", v0);
        }
        p6.require(3, "http://www.w3.org/2003/05/soap-envelope", "Fault");
        p6.nextTag();
        return;
    }
    public String getMessage()
    {
        return this.Reason.getElement("http://www.w3.org/2003/05/soap-envelope", "Text").getText(0);
    }
    public void parse(org.xmlpull.v1.XmlPullParser p5)
    {
        this.parseSelf(p5);
        this.faultcode = this.Code.getElement("http://www.w3.org/2003/05/soap-envelope", "Value").getText(0);
        this.faultstring = this.Reason.getElement("http://www.w3.org/2003/05/soap-envelope", "Text").getText(0);
        this.detail = this.Detail;
        this.faultactor = 0;
        return;
    }
    public String toString()
    {
        return new StringBuffer().append("Code: ").append(this.Code.getElement("http://www.w3.org/2003/05/soap-envelope", "Value").getText(0)).append(", Reason: ").append(this.Reason.getElement("http://www.w3.org/2003/05/soap-envelope", "Text").getText(0)).toString();
    }
    public void write(org.xmlpull.v1.XmlSerializer p3)
    {
        p3.startTag("http://www.w3.org/2003/05/soap-envelope", "Fault");
        p3.startTag("http://www.w3.org/2003/05/soap-envelope", "Code");
        this.Code.write(p3);
        p3.endTag("http://www.w3.org/2003/05/soap-envelope", "Code");
        p3.startTag("http://www.w3.org/2003/05/soap-envelope", "Reason");
        this.Reason.write(p3);
        p3.endTag("http://www.w3.org/2003/05/soap-envelope", "Reason");
        if(this.Node != 0) {
            p3.startTag("http://www.w3.org/2003/05/soap-envelope", "Node");
            this.Node.write(p3);
            p3.endTag("http://www.w3.org/2003/05/soap-envelope", "Node");
        }
        if(this.Role != 0) {
            p3.startTag("http://www.w3.org/2003/05/soap-envelope", "Role");
            this.Role.write(p3);
            p3.endTag("http://www.w3.org/2003/05/soap-envelope", "Role");
        }
        if(this.Detail != 0) {
            p3.startTag("http://www.w3.org/2003/05/soap-envelope", "Detail");
            this.Detail.write(p3);
            p3.endTag("http://www.w3.org/2003/05/soap-envelope", "Detail");
        }
        p3.endTag("http://www.w3.org/2003/05/soap-envelope", "Fault");
        return;
    }
    public AttributeInfo()
    {
        return;
    }
     DM()
    {
        return;
    }
    public Object readInstance(org.xmlpull.v1.XmlPullParser p5, String p6, String p7, org.ksoap2.serialization.PropertyInfo p8)
    {
        v0 = p5.nextText();
        switch(p7.charAt(0)) {
            case 98:
                v0 = new Boolean(org.ksoap2.SoapEnvelope.stringToBoolean(v0));
                break;
            case 105:
                v0 = new Integer(Integer.parseInt(v0));
                break;
            case 108:
                v0 = new Long(Long.parseLong(v0));
                break;
            case 115:
                break;
            default:
                throw new RuntimeException();
        }
        return v0;
    }
    public void register(org.ksoap2.serialization.SoapSerializationEnvelope p4)
    {
        p4.addMapping(p4.xsd, "int", org.ksoap2.serialization.PropertyInfo.INTEGER_CLASS, this);
        p4.addMapping(p4.xsd, "long", org.ksoap2.serialization.PropertyInfo.LONG_CLASS, this);
        p4.addMapping(p4.xsd, "string", org.ksoap2.serialization.PropertyInfo.STRING_CLASS, this);
        p4.addMapping(p4.xsd, "boolean", org.ksoap2.serialization.PropertyInfo.BOOLEAN_CLASS, this);
        return;
    }
    public void writeInstance(org.xmlpull.v1.XmlSerializer p2, Object p3)
    {
        p2.text(p3.toString());
        return;
    }
    static MarshalBase64()
    {
        v0 = new byte[0];
        org.ksoap2.serialization.MarshalBase64.BYTE_ARRAY_CLASS = v0.getClass();
        return;
    }
    public MarshalBase64()
    {
        return;
    }
    public Object readInstance(org.xmlpull.v1.XmlPullParser p2, String p3, String p4, org.ksoap2.serialization.PropertyInfo p5)
    {
        return org.kobjects.base64.Base64.decode(p2.nextText());
    }
    public void register(org.ksoap2.serialization.SoapSerializationEnvelope p4)
    {
        p4.addMapping(p4.xsd, "base64Binary", org.ksoap2.serialization.MarshalBase64.BYTE_ARRAY_CLASS, this);
        p4.addMapping("http://schemas.xmlsoap.org/soap/encoding/", "base64", org.ksoap2.serialization.MarshalBase64.BYTE_ARRAY_CLASS, this);
        return;
    }
    public void writeInstance(org.xmlpull.v1.XmlSerializer p2, Object p3)
    {
        p2.text(org.kobjects.base64.Base64.encode(p3));
        return;
    }
    static MarshalDate()
    {
        org.ksoap2.serialization.MarshalDate.DATE_CLASS = new java.util.Date().getClass();
        return;
    }
    public MarshalDate()
    {
        return;
    }
    public Object readInstance(org.xmlpull.v1.XmlPullParser p3, String p4, String p5, org.ksoap2.serialization.PropertyInfo p6)
    {
        return org.kobjects.isodate.IsoDate.stringToDate(p3.nextText(), 3);
    }
    public void register(org.ksoap2.serialization.SoapSerializationEnvelope p4)
    {
        p4.addMapping(p4.xsd, "dateTime", org.ksoap2.serialization.MarshalDate.DATE_CLASS, this);
        return;
    }
    public void writeInstance(org.xmlpull.v1.XmlSerializer p2, Object p3)
    {
        p2.text(org.kobjects.isodate.IsoDate.dateToString(p3, 3));
        return;
    }
    public MarshalFloat()
    {
        return;
    }
    static Class class$(String p3)
    {
        return Class.forName(p3);
    }
    public Object readInstance(org.xmlpull.v1.XmlPullParser p5, String p6, String p7, org.ksoap2.serialization.PropertyInfo p8)
    {
        v1 = p5.nextText();
        if(p7.equals("float") == 0) {
            if(p7.equals("double") == 0) {
                if(p7.equals("decimal") == 0) {
                    throw new RuntimeException("float, double, or decimal expected");
                } else {
                    v0 = new java.math.BigDecimal(v1);
                }
            } else {
                v0 = new Double(v1);
            }
        } else {
            v0 = new Float(v1);
        }
        return v0;
    }
    public void register(org.ksoap2.serialization.SoapSerializationEnvelope p4)
    {
        v1 = p4.xsd;
        if(org.ksoap2.serialization.MarshalFloat.class$java$lang$Float != 0) {
            v0 = org.ksoap2.serialization.MarshalFloat.class$java$lang$Float;
        } else {
            v0 = org.ksoap2.serialization.MarshalFloat.class$("java.lang.Float");
            org.ksoap2.serialization.MarshalFloat.class$java$lang$Float = v0;
        }
        p4.addMapping(v1, "float", v0, this);
        v1 = p4.xsd;
        if(org.ksoap2.serialization.MarshalFloat.class$java$lang$Double != 0) {
            v0 = org.ksoap2.serialization.MarshalFloat.class$java$lang$Double;
        } else {
            v0 = org.ksoap2.serialization.MarshalFloat.class$("java.lang.Double");
            org.ksoap2.serialization.MarshalFloat.class$java$lang$Double = v0;
        }
        p4.addMapping(v1, "double", v0, this);
        v1 = p4.xsd;
        if(org.ksoap2.serialization.MarshalFloat.class$java$math$BigDecimal != 0) {
            v0 = org.ksoap2.serialization.MarshalFloat.class$java$math$BigDecimal;
        } else {
            v0 = org.ksoap2.serialization.MarshalFloat.class$("java.math.BigDecimal");
            org.ksoap2.serialization.MarshalFloat.class$java$math$BigDecimal = v0;
        }
        p4.addMapping(v1, "decimal", v0, this);
        return;
    }
    public void writeInstance(org.xmlpull.v1.XmlSerializer p2, Object p3)
    {
        p2.text(p3.toString());
        return;
    }
    static MarshalHashtable()
    {
        org.ksoap2.serialization.MarshalHashtable.HASHTABLE_CLASS = new java.util.Hashtable().getClass();
        return;
    }
    public MarshalHashtable()
    {
        return;
    }
    public Object readInstance(org.xmlpull.v1.XmlPullParser p12, String p13, String p14, org.ksoap2.serialization.PropertyInfo p15)
    {
        v8 = new java.util.Hashtable();
        v7 = p12.getName();
        while (p12.nextTag() != 3) {
            v2 = new org.ksoap2.serialization.MarshalHashtable$ItemSoapObject(this, v8);
            p12.require(2, 0, "item");
            p12.nextTag();
            v9 = this.envelope.read(p12, v2, 0, 0, 0, org.ksoap2.serialization.PropertyInfo.OBJECT_TYPE);
            p12.nextTag();
            if(v9 != 0) {
                v2.setProperty(0, v9);
            }
            v10 = this.envelope.read(p12, v2, 1, 0, 0, org.ksoap2.serialization.PropertyInfo.OBJECT_TYPE);
            p12.nextTag();
            if(v10 != 0) {
                v2.setProperty(1, v10);
            }
            p12.require(3, 0, "item");
        }
        p12.require(3, 0, v7);
        return v8;
    }
    public void register(org.ksoap2.serialization.SoapSerializationEnvelope p4)
    {
        this.envelope = p4;
        p4.addMapping("http://xml.apache.org/xml-soap", "Map", org.ksoap2.serialization.MarshalHashtable.HASHTABLE_CLASS, this);
        return;
    }
    public void writeInstance(org.xmlpull.v1.XmlSerializer p7, Object p8)
    {
        v5 = 0;
        v0 = p8;
        v1 = new org.ksoap2.serialization.SoapObject(v5, v5);
        v1.addProperty("key", 0);
        v1.addProperty("value", 0);
        v3 = v0.keys();
        while (v3.hasMoreElements() != 0) {
            p7.startTag("", "item");
            v2 = v3.nextElement();
            v1.setProperty(0, v2);
            v1.setProperty(1, v0.get(v2));
            this.envelope.writeObjectBody(p7, v1);
            p7.endTag("", "item");
        }
        return;
    }
    public SoapObject(String p2, String p3)
    {
        this.properties = new java.util.Vector();
        this.nestedSoapObjects = new java.util.Vector();
        this.namespace = p2;
        this.name = p3;
        return;
    }
    private Integer propertyIndex(String p3)
    {
        v0 = 0;
        while (v0 < this.properties.size()) {
            if(p3.equals(this.properties.elementAt(v0).getName()) == 0) {
                v0 = (v0 + 1);
            } else {
                v1 = new Integer(v0);
            }
            return v1;
        }
        v1 = 0;
    }
    public org.ksoap2.serialization.SoapObject addProperty(String p3, Object p4)
    {
        v0 = new org.ksoap2.serialization.PropertyInfo();
        v0.name = p3;
        if(p4 != 0) {
            v1 = p4.getClass();
        } else {
            v1 = org.ksoap2.serialization.PropertyInfo.OBJECT_CLASS;
        }
        v0.type = v1;
        v0.value = p4;
        return this.addProperty(v0);
    }
    public org.ksoap2.serialization.SoapObject addProperty(org.ksoap2.serialization.PropertyInfo p2)
    {
        this.properties.addElement(p2);
        return this;
    }
    public org.ksoap2.serialization.SoapObject addProperty(org.ksoap2.serialization.PropertyInfo p1, Object p2)
    {
        p1.setValue(p2);
        this.addProperty(p1);
        return this;
    }
    public org.ksoap2.serialization.SoapObject addPropertyIfValue(String p1, Object p2)
    {
        if(p2 != 0) {
            this.addProperty(p1, p2);
        }
        return this;
    }
    public org.ksoap2.serialization.SoapObject addPropertyIfValue(org.ksoap2.serialization.PropertyInfo p2)
    {
        if(p2.value != 0) {
            this.properties.addElement(p2);
        }
        return this;
    }
    public org.ksoap2.serialization.SoapObject addPropertyIfValue(org.ksoap2.serialization.PropertyInfo p1, Object p2)
    {
        if(p2 != 0) {
            this.addProperty(p1, p2);
        }
        return this;
    }
    public org.ksoap2.serialization.SoapObject addSoapObject(org.ksoap2.serialization.SoapObject p2)
    {
        this.nestedSoapObjects.addElement(p2);
        return this;
    }
    public boolean equals(Object p12)
    {
        v8 = 0;
        if((p12 instanceof org.ksoap2.serialization.SoapObject) != 0) {
            v4 = p12;
            if((this.name.equals(v4.name) != 0) && (this.namespace.equals(v4.namespace) != 0)) {
                v2 = this.properties.size();
                if(v2 == v4.properties.size()) {
                    v1 = this.nestedSoapObjects.size();
                    if(v1 == v4.nestedSoapObjects.size()) {
                        v5 = 0;
                        while (v5 < v2) {
                            v6 = this.properties.elementAt(v5);
                            v7 = v6.getValue();
                            if((v4.hasProperty(v6.getName()) != 0) && (v7.equals(v4.getProperty(v6.getName())) != 0)) {
                                v5 = (v5 + 1);
                            }
                        }
                        v0 = 0;
                        while (v0 < v1) {
                            if(this.getNestedSoap(v0).equals(v4.getNestedSoap(v0)) != 0) {
                                v0 = (v0 + 1);
                            }
                        }
                        v8 = this.attributesAreEqual(v4);
                    }
                }
            }
        }
        return v8;
    }
    public String getName()
    {
        return this.name;
    }
    public String getNamespace()
    {
        return this.namespace;
    }
    public Object getNestedSoap(int p2)
    {
        return this.nestedSoapObjects.elementAt(p2);
    }
    public int getNestedSoapCount()
    {
        return this.nestedSoapObjects.size();
    }
    public Object getProperty(int p2)
    {
        return this.properties.elementAt(p2).getValue();
    }
    public Object getProperty(String p5)
    {
        this.propertyIndex(p5);
        if (this == 0) {
            throw new RuntimeException(new StringBuffer().append("illegal property: ").append(p5).toString());
        } else {
            return this.getProperty(this.intValue());
        }
    }
    public String getPropertyAsString(int p3)
    {
        return this.properties.elementAt(p3).getValue().toString();
    }
    public String getPropertyAsString(String p5)
    {
        this.propertyIndex(p5);
        if (this == 0) {
            throw new RuntimeException(new StringBuffer().append("illegal property: ").append(p5).toString());
        } else {
            return this.getProperty(this.intValue()).toString();
        }
    }
    public int getPropertyCount()
    {
        return this.properties.size();
    }
    public void getPropertyInfo(int p1, java.util.Hashtable p2, org.ksoap2.serialization.PropertyInfo p3)
    {
        this.getPropertyInfo(p1, p3);
        return;
    }
    public void getPropertyInfo(int p3, org.ksoap2.serialization.PropertyInfo p4)
    {
        v0 = this.properties.elementAt(p3);
        p4.name = v0.name;
        p4.namespace = v0.namespace;
        p4.flags = v0.flags;
        p4.type = v0.type;
        p4.elementType = v0.elementType;
        p4.value = v0.value;
        p4.multiRef = v0.multiRef;
        return;
    }
    public Object getPropertySafely(String p3)
    {
        this.propertyIndex(p3);
        if(this == 0) {
            v1 = new org.ksoap2.serialization.NullSoapObject();
        } else {
            v1 = this.getProperty(this.intValue());
        }
        return v1;
    }
    public Object getPropertySafely(String p3, Object p4)
    {
        this.propertyIndex(p3);
        if (this == 0) {
            return this.getProperty(this.intValue());
        } else {
        }
    }
    public String getPropertySafelyAsString(String p3)
    {
        this.propertyIndex(p3);
        if(this == 0) {
            v1 = "";
        } else {
            v1 = this.getProperty(this.intValue()).toString();
        }
        return v1;
    }
    public String getPropertySafelyAsString(String p3, Object p4)
    {
        this.propertyIndex(p3);
        if(this == 0) {
            v1 = p4.toString();
        } else {
            v1 = this.getProperty(this.intValue()).toString();
        }
        return v1;
    }
    public boolean hasProperty(String p2)
    {
        this.propertyIndex(p2);
        if(this == 0) {
            v0 = 0;
        } else {
            v0 = 1;
        }
        return v0;
    }
    public org.ksoap2.serialization.SoapObject newInstance()
    {
        v3 = new org.ksoap2.serialization.SoapObject(this.namespace, this.name);
        v4 = 0;
        while (v4 < this.properties.size()) {
            v3.addProperty(this.properties.elementAt(v4));
            v4 = (v4 + 1);
        }
        v0 = 0;
        while (v0 < this.getAttributeCount()) {
            v2 = new org.ksoap2.serialization.AttributeInfo();
            this.getAttributeInfo(v0, v2);
            v3.addAttribute(v2);
            v0 = (v0 + 1);
        }
        return v3;
    }
    public Object safeGetProperty(String p2)
    {
        return this.getPropertySafely(p2);
    }
    public Object safeGetProperty(String p2, Object p3)
    {
        return this.getPropertySafely(p2, p3);
    }
    public void setProperty(int p2, Object p3)
    {
        this.properties.elementAt(p2).setValue(p3);
        return;
    }
    public String toString()
    {
        v0 = new StringBuffer(new StringBuffer().append("").append(this.name).append("{").toString());
        v2 = 0;
        while (v2 < this.getNestedSoapCount()) {
            v0.append(new StringBuffer().append("\x0a").append(this.nestedSoapObjects.elementAt(v2).toString()).toString());
            v2 = (v2 + 1);
        }
        v1 = 0;
        while (v1 < this.getPropertyCount()) {
            v0.append(new StringBuffer().append("").append(this.properties.elementAt(v1).getName()).append("=").append(this.getProperty(v1)).append("; ").toString());
            v1 = (v1 + 1);
        }
        v0.append("}");
        return v0.toString();
    }
    public SoapPrimitive(String p1, String p2, String p3)
    {
        this.namespace = p1;
        this.name = p2;
        this.value = p3;
        return;
    }
    public boolean equals(Object p7)
    {
        v2 = 1;
        v3 = 0;
        if((p7 instanceof org.ksoap2.serialization.SoapPrimitive) != 0) {
            v0 = p7;
            if(this.name.equals(v0.name) == 0) {
                v1 = 0;
            } else {
                if(this.namespace != 0) {
                    }
                } else {
                    }
                }
                if(this.value != 0) {
                    }
                } else {
                    }
                }
                v1 = 1;
            }
            if((v1 == 0) || (this.attributesAreEqual(v0) == 0)) {
                v2 = 0;
            }
            v3 = v2;
        }
        return v3;
    }
    public String getName()
    {
        return this.name;
    }
    public String getNamespace()
    {
        return this.namespace;
    }
    public int hashCode()
    {
        v1 = this.name.hashCode();
        if(this.namespace != 0) {
            v0 = this.namespace.hashCode();
        } else {
            v0 = 0;
        }
        return (v0 ^ v1);
    }
    public String toString()
    {
        return this.value;
    }
    static SoapSerializationEnvelope()
    {
        org.ksoap2.serialization.SoapSerializationEnvelope.DEFAULT_MARSHAL = new org.ksoap2.serialization.DM();
        return;
    }
    public SoapSerializationEnvelope(int p4)
    {
        this(p4);
        this.properties = new java.util.Hashtable();
        this.idMap = new java.util.Hashtable();
        this.qNameToClass = new java.util.Hashtable();
        this.classToQName = new java.util.Hashtable();
        this.addAdornments = 1;
        this.addMapping(this.enc, "Array", org.ksoap2.serialization.PropertyInfo.VECTOR_CLASS);
        org.ksoap2.serialization.SoapSerializationEnvelope.DEFAULT_MARSHAL.register(this);
        return;
    }
    static Class class$(String p3)
    {
        return Class.forName(p3);
    }
    private int getIndex(String p3, int p4, int p5)
    {
        if((p3 != 0) && ((p3.length() - p4) >= 3)) {
            p5 = Integer.parseInt(p3.substring((p4 + 1), (p3.length() - 1)));
        }
        return p5;
    }
    private void writeElement(org.xmlpull.v1.XmlSerializer p4, Object p5, org.ksoap2.serialization.PropertyInfo p6, Object p7)
    {
        if(p7 == 0) {
            if((p5 instanceof org.ksoap2.serialization.SoapObject) == 0) {
                if((p5 instanceof org.ksoap2.serialization.KvmSerializable) == 0) {
                    if((p5 instanceof java.util.Vector) == 0) {
                        throw new RuntimeException(new StringBuffer().append("Cannot serialize: ").append(p5).toString());
                    } else {
                        this.writeVectorBody(p4, p5, p6.elementType);
                    }
                } else {
                    this.writeObjectBody(p4, p5);
                }
            } else {
                this.writeObjectBody(p4, p5);
            }
        } else {
            p7.writeInstance(p4, p5);
        }
        return;
    }
    public void addMapping(String p2, String p3, Class p4)
    {
        this.addMapping(p2, p3, p4, 0);
        return;
    }
    public void addMapping(String p6, String p7, Class p8, org.ksoap2.serialization.Marshal p9)
    {
        v2 = new org.ksoap2.serialization.SoapPrimitive(p6, p7, 0);
        if(p9 != 0) {
            v0 = p9;
        } else {
            v0 = p8;
        }
        this.qNameToClass.put(v2, v0);
        v1 = p8.getName();
        v2 = new Object[4];
        v2[0] = p6;
        v2[1] = p7;
        v2[2] = 0;
        v2[3] = p9;
        this.classToQName.put(v1, v2);
        return;
    }
    public void addTemplate(org.ksoap2.serialization.SoapObject p6)
    {
        this.qNameToClass.put(new org.ksoap2.serialization.SoapPrimitive(p6.namespace, p6.name, 0), p6);
        return;
    }
    public Object[] getInfo(Object p11, Object p12)
    {
        if(p11 == 0) {
            if(((p12 instanceof org.ksoap2.serialization.SoapObject) == 0) && ((p12 instanceof org.ksoap2.serialization.SoapPrimitive) == 0)) {
                p11 = p12.getClass();
            } else {
                p11 = p12;
            }
        }
        if((p11 instanceof org.ksoap2.serialization.SoapObject) == 0) {
            if((p11 instanceof org.ksoap2.serialization.SoapPrimitive) == 0) {
                if(((p11 instanceof Class) != 0) && (p11 != org.ksoap2.serialization.PropertyInfo.OBJECT_CLASS)) {
                    v2 = this.classToQName.get(p11.getName());
                    if(v2 != 0) {
                        return v2;
                    }
                }
                v2 = new Object[4];
                v2[0] = this.xsd;
                v2[1] = "anyType";
                v2[2] = 0;
                v2[3] = 0;
            } else {
                v1 = p11;
                v2 = new Object[4];
                v2[0] = v1.getNamespace();
                v2[1] = v1.getName();
                v2[2] = 0;
                v2[3] = org.ksoap2.serialization.SoapSerializationEnvelope.DEFAULT_MARSHAL;
            }
        } else {
            v0 = p11;
            v2 = new Object[4];
            v2[0] = v0.getNamespace();
            v2[1] = v0.getName();
            v2[2] = 0;
            v2[3] = 0;
        }
    }
    public Object getResponse()
    {
        if ((this.bodyIn instanceof org.ksoap2.SoapFault) == 0) {
            v1 = this.bodyIn;
            if(v1.getPropertyCount() != 0) {
                if(v1.getPropertyCount() != 1) {
                    v2 = new java.util.Vector();
                    v0 = 0;
                    while (v0 < v1.getPropertyCount()) {
                        v2.add(v1.getProperty(v0));
                        v0 = (v0 + 1);
                    }
                } else {
                    v2 = v1.getProperty(0);
                }
            } else {
                v2 = 0;
            }
            return v2;
        } else {
            throw this.bodyIn;
        }
    }
    public Object getResult()
    {
        v0 = this.bodyIn;
        if(v0.getPropertyCount() != 0) {
            v1 = v0.getProperty(0);
        } else {
            v1 = 0;
        }
        return v1;
    }
    public boolean isAddAdornments()
    {
        return this.addAdornments;
    }
    public void parseBody(org.xmlpull.v1.XmlPullParser p12)
    {
        this.bodyIn = 0;
        p12.nextTag();
        if((p12.getEventType() != 2) || ((p12.getNamespace().equals(this.env) == 0) || (p12.getName().equals("Fault") == 0))) {
            while (p12.getEventType() == 2) {
                v9 = p12.getAttributeValue(this.enc, "root");
                v8 = this.read(p12, 0, 15, p12.getNamespace(), p12.getName(), org.ksoap2.serialization.PropertyInfo.OBJECT_TYPE);
                if(("1".equals(v9) != 0) || (this.bodyIn == 0)) {
                    this.bodyIn = v8;
                }
                p12.nextTag();
            }
        } else {
            if(this.version >= 120) {
                v7 = new org.ksoap2.SoapFault12(this.version);
            } else {
                v7 = new org.ksoap2.SoapFault(this.version);
            }
            v7.parse(p12);
            this.bodyIn = v7;
        }
        return;
    }
    public Object read(org.xmlpull.v1.XmlPullParser p19, Object p20, int p21, String p22, String p23, org.ksoap2.serialization.PropertyInfo p24)
    {
        v6 = p19.getName();
        v9 = p19.getAttributeValue(0, "href");
        if(v9 == 0) {
            v12 = p19.getAttributeValue(this.xsi, "nil");
            v10 = p19.getAttributeValue(0, "id");
            if(v12 == 0) {
                v12 = p19.getAttributeValue(this.xsi, "null");
            }
            if((v12 == 0) || (org.ksoap2.SoapEnvelope.stringToBoolean(v12) == 0)) {
                v15 = p19.getAttributeValue(this.xsi, "type");
                if(v15 == 0) {
                    if((p23 == 0) && (p22 == 0)) {
                        if(p19.getAttributeValue(this.enc, "arrayType") == 0) {
                            v11 = this.getInfo(p24.type, 0);
                            p22 = v11[0];
                            p23 = v11[1];
                        } else {
                            p22 = this.enc;
                            p23 = "Array";
                        }
                    }
                } else {
                    v5 = v15.indexOf(58);
                    p23 = v15.substring((v5 + 1));
                    if(v5 != -1) {
                        v14 = v15.substring(0, v5);
                    } else {
                        v14 = "";
                    }
                    p22 = p19.getNamespace(v14);
                }
                if(v15 == 0) {
                    this.implicitTypes = 1;
                }
                v13 = this.readInstance(p19, p22, p23, p24);
                if(v13 == 0) {
                    v13 = this.readUnknown(p19, p22, p23);
                }
            } else {
                v13 = 0;
                p19.nextTag();
                p19.require(3, 0, v6);
            }
            if(v10 != 0) {
                v8 = this.idMap.get(v10);
                if((v8 instanceof org.ksoap2.serialization.FwdRef) == 0) {
                    if(v8 != 0) {
                        throw new RuntimeException("double ID");
                    }
                } else {
                    v7 = v8;
                    do {
                        if((v7.obj instanceof org.ksoap2.serialization.KvmSerializable) == 0) {
                            v7.obj.setElementAt(v13, v7.index);
                        } else {
                            v7.obj.setProperty(v7.index, v13);
                        }
                        v7 = v7.next;
                    } while(v7 != 0);
                }
                this.idMap.put(v10, v13);
            }
        } else {
            if(p20 != 0) {
                v9 = v9.substring(1);
                v13 = this.idMap.get(v9);
                if((v13 == 0) || ((v13 instanceof org.ksoap2.serialization.FwdRef) != 0)) {
                    v7 = new org.ksoap2.serialization.FwdRef();
                    v7.next = v13;
                    v7.obj = p20;
                    v7.index = p21;
                    this.idMap.put(v9, v7);
                    v13 = 0;
                }
                p19.nextTag();
                p19.require(3, 0, v6);
            } else {
                throw new RuntimeException("href at root level?!?");
            }
        }
        p19.require(3, 0, v6);
        return v13;
    }
    public Object readInstance(org.xmlpull.v1.XmlPullParser p6, String p7, String p8, org.ksoap2.serialization.PropertyInfo p9)
    {
        v1 = this.qNameToClass.get(new org.ksoap2.serialization.SoapPrimitive(p7, p8, 0));
        if(v1 != 0) {
            if((v1 instanceof org.ksoap2.serialization.Marshal) == 0) {
                if((v1 instanceof org.ksoap2.serialization.SoapObject) == 0) {
                    if(org.ksoap2.serialization.SoapSerializationEnvelope.class$org$ksoap2$serialization$SoapObject != 0) {
                        v2 = org.ksoap2.serialization.SoapSerializationEnvelope.class$org$ksoap2$serialization$SoapObject;
                    } else {
                        v2 = org.ksoap2.serialization.SoapSerializationEnvelope.class$("org.ksoap2.serialization.SoapObject");
                        org.ksoap2.serialization.SoapSerializationEnvelope.class$org$ksoap2$serialization$SoapObject = v2;
                    }
                    if(v1 != v2) {
                        v1 = v1.newInstance();
                    } else {
                        v1 = new org.ksoap2.serialization.SoapObject(p7, p8);
                    }
                } else {
                    v1 = v1.newInstance();
                }
                if((v1 instanceof org.ksoap2.serialization.SoapObject) == 0) {
                    if((v1 instanceof org.ksoap2.serialization.KvmSerializable) == 0) {
                        if((v1 instanceof java.util.Vector) == 0) {
                            throw new RuntimeException(new StringBuffer().append("no deserializer for ").append(v1.getClass()).toString());
                        } else {
                            this.readVector(p6, v1, p9.elementType);
                        }
                    } else {
                        this.readSerializable(p6, v1);
                    }
                } else {
                    this.readSerializable(p6, v1);
                }
            } else {
                v1 = v1.readInstance(p6, p7, p8, p9);
            }
        } else {
            v1 = 0;
        }
        return v1;
    }
    protected void readSerializable(org.xmlpull.v1.XmlPullParser p19, org.ksoap2.serialization.KvmSerializable p20)
    {
        v4 = 15;
        v17 = p20.getPropertyCount();
        v7 = new org.ksoap2.serialization.PropertyInfo();
        while (p19.nextTag() != 3) {
            v13 = p19.getName();
            v15 = v17;
            if((this.implicitTypes) && ((p20 instanceof org.ksoap2.serialization.SoapObject) != 0)) {
                p20.addProperty(p19.getName(), this.read(p19, p20, p20.getPropertyCount(), p20.getNamespace(), v13, org.ksoap2.serialization.PropertyInfo.OBJECT_TYPE));
            }
            do {
                v16 = v15;
                v15 = (v16 - 1);
                if(v16 != 0) {
                    v4 = (v4 + 1);
                    if(v4 >= v17) {
                        v4 = 0;
                    }
                    p20.getPropertyInfo(v4, this.properties, v7);
                } else {
                    throw new RuntimeException(new StringBuffer().append("Unknown Property: ").append(v13).toString());
                }
            } while(((v7.namespace != 0) || (v13.equals(v7.name) == 0)) && (((v7.name != 0) || (v4 != 0)) && ((v13.equals(v7.name) == 0) || (p19.getNamespace().equals(v7.namespace) == 0))));
            p20.setProperty(v4, this.read(p19, p20, v4, 0, 0, v7));
        }
        p19.require(3, 0, 0);
        return;
    }
    protected void readSerializable(org.xmlpull.v1.XmlPullParser p5, org.ksoap2.serialization.SoapObject p6)
    {
        v1 = 0;
        while (v1 < p5.getAttributeCount()) {
            p6.addAttribute(p5.getAttributeName(v1), p5.getAttributeValue(v1));
            v1 = (v1 + 1);
        }
        this.readSerializable(p5, p6);
        return;
    }
    protected Object readUnknown(org.xmlpull.v1.XmlPullParser p22, String p23, String p24)
    {
        v15 = p22.getName();
        v16 = p22.getNamespace();
        v13 = new java.util.Vector();
        v11 = 0;
        while (v11 < p22.getAttributeCount()) {
            v12 = new org.ksoap2.serialization.AttributeInfo();
            v12.setName(p22.getAttributeName(v11));
            v12.setValue(p22.getAttributeValue(v11));
            v12.setNamespace(p22.getAttributeNamespace(v11));
            v12.setType(p22.getAttributeType(v11));
            v13.addElement(v12);
            v11 = (v11 + 1);
        }
        p22.next();
        v17 = 0;
        v19 = 0;
        if(p22.getEventType() != 4) {
            if(p22.getEventType() == 3) {
                v6 = new org.ksoap2.serialization.SoapObject(p23, p24);
                v14 = 0;
                while (v14 < v13.size()) {
                    v6.addAttribute(v13.elementAt(v14));
                    v14 = (v14 + 1);
                }
                v17 = v6;
            }
        } else {
            v19 = p22.getText();
            v18 = new org.ksoap2.serialization.SoapPrimitive;
            v18(p23, p24, v19);
            v17 = v18;
            v14 = 0;
            while (v14 < v13.size()) {
                v18.addAttribute(v13.elementAt(v14));
                v14 = (v14 + 1);
            }
            p22.next();
        }
        if(p22.getEventType() == 2) {
            if((v19 == 0) || (v19.trim().length() == 0)) {
                v6 = new org.ksoap2.serialization.SoapObject(p23, p24);
                v14 = 0;
                while (v14 < v13.size()) {
                    v6.addAttribute(v13.elementAt(v14));
                    v14 = (v14 + 1);
                }
                while (p22.getEventType() != 3) {
                    v6.addProperty(v20, this.read(p22, v6, v6.getPropertyCount(), 0, 0, org.ksoap2.serialization.PropertyInfo.OBJECT_TYPE));
                    p22.nextTag();
                }
                v17 = v6;
            } else {
                throw new RuntimeException("Malformed input: Mixed content");
            }
        }
        p22.require(3, v16, v15);
        return v17;
    }
    protected void readVector(org.xmlpull.v1.XmlPullParser p14, java.util.Vector p15, org.ksoap2.serialization.PropertyInfo p16)
    {
        v4 = 0;
        v5 = 0;
        v11 = p15.size();
        v9 = 1;
        v12 = p14.getAttributeValue(this.enc, "arrayType");
        if(v12 != 0) {
            v7 = v12.indexOf(58);
            v8 = v12.indexOf("[", v7);
            v5 = v12.substring((v7 + 1), v8);
            if(v7 != 15) {
                v10 = v12.substring(0, v7);
            } else {
                v10 = "";
            }
            v4 = p14.getNamespace(v10);
            this.getIndex(v12, v8, 15);
            v11 = this;
            if(this != 15) {
                p15.setSize(this);
                v9 = 0;
            }
        }
        if (p16 != 0) {
            p14.nextTag();
            this.getIndex(p14.getAttributeValue(this.enc, "offset"), 0, 0);
            v3 = this;
            while (p14.getEventType() != 3) {
                this.getIndex(p14.getAttributeValue(this.enc, "position"), 0, v3);
                if((v9 != 0) && (this >= v11)) {
                    v11 = (this + 1);
                    p15.setSize(v11);
                }
                p15.setElementAt(this.read(p14, p15, this, v4, v5, org.ksoap2.serialization.PropertyInfo.OBJECT_TYPE), this);
                v3 = (this + 1);
                p14.nextTag();
            }
            p14.require(3, 0, 0);
            return;
        } else {
        }
    }
    public void setAddAdornments(boolean p1)
    {
        this.addAdornments = p1;
        return;
    }
    public void setBodyOutEmpty(boolean p2)
    {
        if(p2) {
            this.bodyOut = 0;
        }
        return;
    }
    public void writeBody(org.xmlpull.v1.XmlSerializer p8)
    {
        if(this.bodyOut != 0) {
            this.multiRef = new java.util.Vector();
            this.multiRef.addElement(this.bodyOut);
            v0 = this.getInfo(0, this.bodyOut);
            if(!this.dotNet) {
                v2 = v0[0];
            } else {
                v2 = "";
            }
            p8.startTag(v2, v0[1]);
            if(this.dotNet) {
                p8.attribute(0, "xmlns", v0[0]);
            }
            if(this.addAdornments) {
                if(v0[2] != 0) {
                    v1 = v0[2];
                } else {
                    v1 = "o0";
                }
                p8.attribute(0, "id", v1);
                p8.attribute(this.enc, "root", "1");
            }
            this.writeElement(p8, this.bodyOut, 0, v0[3]);
            if(!this.dotNet) {
                v2 = v0[0];
            } else {
                v2 = "";
            }
            p8.endTag(v2, v0[1]);
        }
        return;
    }
    public void writeObjectBody(org.xmlpull.v1.XmlSerializer p6, org.ksoap2.serialization.KvmSerializable p7)
    {
        v2 = new org.ksoap2.serialization.PropertyInfo();
        v0 = p7.getPropertyCount();
        v1 = 0;
        while (v1 < v0) {
            p7.getPropertyInfo(v1, this.properties, v2);
            if((v2.flags & 1) == 0) {
                p6.startTag(v2.namespace, v2.name);
                this.writeProperty(p6, p7.getProperty(v1), v2);
                p6.endTag(v2.namespace, v2.name);
            }
            v1 = (v1 + 1);
        }
        return;
    }
    public void writeObjectBody(org.xmlpull.v1.XmlSerializer p9, org.ksoap2.serialization.SoapObject p10)
    {
        v4 = p10;
        v1 = v4.getAttributeCount();
        v2 = 0;
        while (v2 < v1) {
            v0 = new org.ksoap2.serialization.AttributeInfo();
            v4.getAttributeInfo(v2, v0);
            p9.attribute(v0.getNamespace(), v0.getName(), v0.getValue().toString());
            v2 = (v2 + 1);
        }
        v1 = v4.getNestedSoapCount();
        v2 = 0;
        while (v2 < v1) {
            v3 = v4.getNestedSoap(v2);
            p9.startTag(v3.getNamespace(), v3.getName());
            this.writeObjectBody(p9, v3);
            p9.endTag(v3.getNamespace(), v3.getName());
            v2 = (v2 + 1);
        }
        this.writeObjectBody(p9, p10);
        return;
    }
    protected void writeProperty(org.xmlpull.v1.XmlSerializer p10, Object p11, org.ksoap2.serialization.PropertyInfo p12)
    {
        if(p11 != 0) {
            v2 = this.getInfo(0, p11);
            if((p12.multiRef) && (v2[2] == 0)) {
                if((this.implicitTypes) || (p11.getClass() != p12.type)) {
                    p10.attribute(this.xsi, "type", new StringBuffer().append(p10.getPrefix(v2[0], 1)).append(":").append(v2[1]).toString());
                }
                this.writeElement(p10, p11, p12, v2[3]);
            } else {
                v0 = this.multiRef.indexOf(p11);
                if(v0 == 15) {
                    v0 = this.multiRef.size();
                    this.multiRef.addElement(p11);
                }
                if(v2[2] != 0) {
                    v3 = new StringBuffer().append("#").append(v2[2]).toString();
                } else {
                    v3 = new StringBuffer().append("#o").append(v0).toString();
                }
                p10.attribute(0, "href", v3);
            }
        } else {
            if(this.version < 120) {
                v3 = "null";
            } else {
                v3 = "nil";
            }
            p10.attribute(this.xsi, v3, "true");
        }
        return;
    }
    protected void writeVectorBody(org.xmlpull.v1.XmlSerializer p12, java.util.Vector p13, org.ksoap2.serialization.PropertyInfo p14)
    {
        v4 = "item";
        v3 = 0;
        if(p14 != 0) {
            if(((p14 instanceof org.ksoap2.serialization.PropertyInfo) != 0) && (p14.name != 0)) {
                v4 = p14.name;
                v3 = p14.namespace;
            }
        } else {
            p14 = org.ksoap2.serialization.PropertyInfo.OBJECT_TYPE;
        }
        v1 = p13.size();
        v0 = this.getInfo(p14.type, 0);
        if(this.implicitTypes) {
            p12.attribute(this.enc, "arrayType", new StringBuffer().append(p12.getPrefix(v0[0], 0)).append(":").append(v0[1]).append("[").append(v1).append("]").toString());
        }
        v5 = 0;
        v2 = 0;
        while (v2 < v1) {
            if(p13.elementAt(v2) != 0) {
                p12.startTag(v3, v4);
                if(v5 != 0) {
                    p12.attribute(this.enc, "position", new StringBuffer().append("[").append(v2).append("]").toString());
                    v5 = 0;
                }
                this.writeProperty(p12, p13.elementAt(v2), p14);
                p12.endTag(v3, v4);
            } else {
                v5 = 1;
            }
            v2 = (v2 + 1);
        }
        return;
    }
    public HttpTransportSE(String p2)
    {
        this(0, p2);
        return;
    }
    public HttpTransportSE(String p1, int p2)
    {
        this(p1, p2);
        return;
    }
    public HttpTransportSE(java.net.Proxy p1, String p2)
    {
        this(p1, p2);
        return;
    }
    public HttpTransportSE(java.net.Proxy p1, String p2, int p3)
    {
        this(p1, p2, p3);
        return;
    }
    public java.util.List call(String p16, org.ksoap2.SoapEnvelope p17, java.util.List p18)
    {
        if(p16 == 0) {
            p16 = """";
        }
        v9 = this.createRequestData(p17);
        if(!this.debug) {
            v11 = 0;
        } else {
            v11 = new String(v9);
        }
        this.requestDump = v11;
        this.responseDump = 0;
        this.connection = this.getServiceConnection();
        this.connection.setRequestProperty("User-Agent", "ksoap2-android/2.6.0+");
        if(p17.version != 120) {
            this.connection.setRequestProperty("SOAPAction", p16);
        }
        if(p17.version != 120) {
            this.connection.setRequestProperty("Content-Type", "text/xml;charset=utf-8");
        } else {
            this.connection.setRequestProperty("Content-Type", "application/soap+xml;charset=utf-8");
        }
        this.connection.setRequestProperty("Connection", "close");
        this.connection.setRequestProperty("Content-Length", new StringBuffer().append("").append(v9.length).toString());
        if(p18 != 0) {
            v5 = 0;
            while (v5 < p18.size()) {
                v4 = p18.get(v5);
                this.connection.setRequestProperty(v4.getKey(), v4.getValue());
                v5 = (v5 + 1);
            }
        }
        this.connection.setRequestMethod("POST");
        this.connection.connect();
        v7 = this.connection.openOutputStream();
        v7.write(v9, 0, v9.length);
        v7.flush();
        v7.close();
        this.connection.connect();
        v6 = this.connection.openInputStream();
        v10 = this.connection.getResponseProperties();
        if(this.debug) {
            v1 = new java.io.ByteArrayOutputStream();
            v2 = new byte[256];
            while(true) {
                v8 = v6.read(v2, 0, 256);
                if(v8 == 15) {
                    break;
                }
                v1.write(v2, 0, v8);
            }
            v1.flush();
            v2 = v1.toByteArray();
            this.responseDump = new String(v2);
            v6.close();
            v6 = new java.io.ByteArrayInputStream(v2);
        }
        this.parseResponse(p17, v6);
        return v10;
    }
    public void call(String p2, org.ksoap2.SoapEnvelope p3)
    {
        this.call(p2, p3, 0);
        return;
    }
    public org.ksoap2.transport.ServiceConnection getConnection()
    {
        return this.connection;
    }
    public String getHost()
    {
        return new java.net.URL(this.url).getHost();
    }
    public String getPath()
    {
        return new java.net.URL(this.url).getPath();
    }
    public int getPort()
    {
        return new java.net.URL(this.url).getPort();
    }
    protected org.ksoap2.transport.ServiceConnection getServiceConnection()
    {
        return new org.ksoap2.transport.ServiceConnectionSE(this.proxy, this.url, this.timeout);
    }
    public HttpsServiceConnectionSE(String p3, int p4, String p5, int p6)
    {
        this.connection = new java.net.URL("https", p3, p4, p5).openConnection();
        this.updateConnectionParameters(p6);
        return;
    }
    private void updateConnectionParameters(int p4)
    {
        this.connection.setConnectTimeout(p4);
        this.connection.setReadTimeout(p4);
        this.connection.setUseCaches(0);
        this.connection.setDoOutput(1);
        this.connection.setDoInput(1);
        return;
    }
    public void connect()
    {
        this.connection.connect();
        return;
    }
    public void disconnect()
    {
        this.connection.disconnect();
        return;
    }
    public java.io.InputStream getErrorStream()
    {
        return this.connection.getErrorStream();
    }
    public String getHost()
    {
        return this.connection.getURL().getHost();
    }
    public String getPath()
    {
        return this.connection.getURL().getPath();
    }
    public int getPort()
    {
        return this.connection.getURL().getPort();
    }
    public java.util.List getResponseProperties()
    {
        v4 = this.connection.getHeaderFields();
        v3 = v4.keySet();
        v5 = new java.util.LinkedList();
        v0 = v3.iterator();
        while (v0.hasNext() != 0) {
            v2 = v0.next();
            v6 = v4.get(v2);
            v1 = 0;
            while (v1 < v6.size()) {
                v5.add(new org.ksoap2.HeaderProperty(v2, v6.get(v1)));
                v1 = (v1 + 1);
            }
        }
        return v5;
    }
    public java.io.InputStream openInputStream()
    {
        return this.connection.getInputStream();
    }
    public java.io.OutputStream openOutputStream()
    {
        return this.connection.getOutputStream();
    }
    public void setRequestMethod(String p2)
    {
        this.connection.setRequestMethod(p2);
        return;
    }
    public void setRequestProperty(String p2, String p3)
    {
        this.connection.setRequestProperty(p2, p3);
        return;
    }
    public ServiceConnectionSE(String p3)
    {
        this(0, p3, 20000);
        return;
    }
    public ServiceConnectionSE(String p2, int p3)
    {
        this(0, p2, p3);
        return;
    }
    public ServiceConnectionSE(java.net.Proxy p2, String p3)
    {
        this(p2, p3, 20000);
        return;
    }
    public ServiceConnectionSE(java.net.Proxy p4, String p5, int p6)
    {
        if(p4 != 0) {
            v0 = new java.net.URL(p5).openConnection(p4);
        } else {
            v0 = new java.net.URL(p5).openConnection();
        }
        this.connection = v0;
        this.connection.setUseCaches(0);
        this.connection.setDoOutput(1);
        this.connection.setDoInput(1);
        this.connection.setConnectTimeout(p6);
        this.connection.setReadTimeout(p6);
        return;
    }
    public void connect()
    {
        this.connection.connect();
        return;
    }
    public void disconnect()
    {
        this.connection.disconnect();
        return;
    }
    public java.io.InputStream getErrorStream()
    {
        return this.connection.getErrorStream();
    }
    public String getHost()
    {
        return this.connection.getURL().getHost();
    }
    public String getPath()
    {
        return this.connection.getURL().getPath();
    }
    public int getPort()
    {
        return this.connection.getURL().getPort();
    }
    public java.util.List getResponseProperties()
    {
        v4 = this.connection.getHeaderFields();
        v3 = v4.keySet();
        v5 = new java.util.LinkedList();
        v0 = v3.iterator();
        while (v0.hasNext() != 0) {
            v2 = v0.next();
            v6 = v4.get(v2);
            v1 = 0;
            while (v1 < v6.size()) {
                v5.add(new org.ksoap2.HeaderProperty(v2, v6.get(v1)));
                v1 = (v1 + 1);
            }
        }
        return v5;
    }
    public java.io.InputStream openInputStream()
    {
        return this.connection.getInputStream();
    }
    public java.io.OutputStream openOutputStream()
    {
        return this.connection.getOutputStream();
    }
    public void setRequestMethod(String p2)
    {
        this.connection.setRequestMethod(p2);
        return;
    }
    public void setRequestProperty(String p2, String p3)
    {
        this.connection.setRequestProperty(p2, p3);
        return;
    }
    public KXmlParser()
    {
        v0 = 128;
        v1 = new String[16];
        this.elementStack = v1;
        v1 = new String[8];
        this.nspStack = v1;
        v1 = new int[4];
        this.nspCounts = v1;
        v1 = new char[128];
        this.txtBuf = v1;
        v1 = new String[16];
        this.attributes = v1;
        v1 = new int[2];
        this.peek = v1;
        if(Runtime.getRuntime().freeMemory() >= 1048576.0) {
            v0 = 8192;
        }
        v0 = new char[v0];
        this.srcBuf = v0;
        return;
    }
    private final boolean adjustNsp()
    {
        v0 = 0;
        v5 = 0;
        while (v5 < (this.attributeCount << 2)) {
            v1 = this.attributes[(v5 + 2)];
            v4 = v1.indexOf(58);
            if(v4 == 15) {
                if(v1.equals("xmlns") != 0) {
                    v7 = v1;
                    v1 = 0;
                    if(v7.equals("xmlns") != 0) {
                        v8 = this.nspCounts;
                        v9 = this.depth;
                        v10 = v8[v9];
                        v8[v9] = (v10 + 1);
                        v6 = (v10 << 1);
                        this.ensureCapacity(this.nspStack, (v6 + 2));
                        this.nspStack = this;
                        this.nspStack[v6] = v1;
                        this.nspStack[(v6 + 1)] = this.attributes[(v5 + 3)];
                        if((v1 != 0) && (this.attributes[(v5 + 3)].equals("") != 0)) {
                            this.error("illegal empty namespace");
                        }
                        v9 = (v5 + 4);
                        v11 = (this.attributeCount - 1);
                        this.attributeCount = v11;
                        System.arraycopy(this.attributes, v9, this.attributes, v5, ((v11 << 2) - v5));
                        v5 = (v5 - 4);
                    } else {
                        v0 = 1;
                    }
                }
            } else {
                v7 = v1.substring(0, v4);
                v1 = v1.substring((v4 + 1));
            }
            v5 = (v5 + 4);
        }
        if(v0 != 0) {
            v5 = ((this.attributeCount << 2) - 4);
            while (v5 >= 0) {
                v1 = this.attributes[(v5 + 2)];
                v4 = v1.indexOf(58);
                if((v4 != 0) || (this.relaxed)) {
                    if(v4 != 15) {
                        v3 = v1.substring(0, v4);
                        v1 = v1.substring((v4 + 1));
                        v2 = this.getNamespace(v3);
                        if((v2 != 0) || (this.relaxed)) {
                            this.attributes[v5] = v2;
                            this.attributes[(v5 + 1)] = v3;
                            this.attributes[(v5 + 2)] = v1;
                        } else {
                            throw new RuntimeException(new StringBuilder().append("Undefined Prefix: ").append(v3).append(" in ").append(this).toString());
                        }
                    }
                    v5 = (v5 - 4);
                } else {
                    throw new RuntimeException(new StringBuilder().append("illegal attribute name: ").append(v1).append(" at ").append(this).toString());
                }
            }
        }
        v4 = this.name.indexOf(58);
        if(v4 == 0) {
            this.error(new StringBuilder().append("illegal tag name: ").append(this.name).toString());
        }
        if(v4 != 15) {
            this.prefix = this.name.substring(0, v4);
            this.name = this.name.substring((v4 + 1));
        }
        this.namespace = this.getNamespace(this.prefix);
        if(this.namespace == 0) {
            if(this.prefix != 0) {
                this.error(new StringBuilder().append("undefined prefix: ").append(this.prefix).toString());
            }
            this.namespace = "";
        }
        return v0;
    }
    private final String[] ensureCapacity(String[] p4, int p5)
    {
        if(p4.length < p5) {
            v0 = new String[(p5 + 16)];
            System.arraycopy(p4, 0, v0, 0, p4.length);
            p4 = v0;
        }
        return p4;
    }
    private final void error(String p3)
    {
        if(!this.relaxed) {
            this.exception(p3);
        } else {
            if(this.error == 0) {
                this.error = new StringBuilder().append("ERR: ").append(p3).toString();
            }
        }
        return;
    }
    private final void exception(String p5)
    {
        if(p5.length() >= 100) {
            p5 = new StringBuilder().append(p5.substring(0, 100)).append("\x0a").toString();
        }
        throw new org.xmlpull.v1.XmlPullParserException(p5, this, 0);
    }
    private final String get(int p4)
    {
        return new String(this.txtBuf, p4, (this.txtPos - p4));
    }
    private final boolean isProp(String p2, boolean p3, String p4)
    {
        if(p2.startsWith("http://xmlpull.org/v1/doc/") != 0) {
            if(!p3) {
                v0 = p2.substring(40).equals(p4);
            } else {
                v0 = p2.substring(42).equals(p4);
            }
        } else {
            v0 = 0;
        }
        return v0;
    }
    private final void nextImpl()
    {
        v1 = 0;
        if(this.reader == 0) {
            this.exception("No Input specified");
        }
        if(this.type == 3) {
            this.depth = (this.depth - 1);
        }
        do {
            this.attributeCount = 15;
            if(!this.degenerated) {
                if(this.error == 0) {
                    this.prefix = 0;
                    this.name = 0;
                    this.namespace = 0;
                    this.peekType();
                    this.type = this;
                    switch(this.type) {
                        case 1:
                            break;
                        case 2:
                            this.parseStartTag(0);
                            break;
                        case 3:
                            this.parseEndTag();
                            break;
                        case 4:
                            if(this.token) {
                                v1 = 1;
                            }
                            this.pushText(60, v1);
                            if((this.depth == 0) && (this.isWhitespace)) {
                                this.type = 7;
                            }
                            break;
                        case 5:
                        default:
                            this.parseLegacy(this.token);
                            this.type = this;
                            break;
                        case 6:
                            this.pushEntity();
                            break;
                    }
                } else {
                    v0 = 0;
                    while (v0 < this.error.length()) {
                        this.push(this.error.charAt(v0));
                        v0 = (v0 + 1);
                    }
                    this.error = 0;
                    this.type = 9;
                }
            } else {
                this.degenerated = 0;
                this.type = 3;
            }
        } while(this.type == 998);
        return;
    }
    private final void parseDoctype(boolean p5)
    {
        v1 = 1;
        v2 = 0;
        while(true) {
            this.read();
            switch(this) {
                case -1:
                    this.error("Unexpected EOF");
                    break;
                case 39:
                    if(v2 != 0) {
                        v2 = 0;
                    } else {
                        v2 = 1;
                    }
                    break;
                case 60:
                    if(v2 != 0) {
                    } else {
                        v1 = (v1 + 1);
                    }
                    break;
                case 62:
                    if(v2 != 0) {
                    } else {
                        v1 = (v1 - 1);
                        if(v1 == 0) {
                            break;
                        }
                    }
                    break;
            }
            if(p5) {
                this.push(this);
            }
        }
        return;
    }
    private final void parseEndTag()
    {
        this.read();
        this.read();
        this.readName();
        this.name = this;
        this.skip();
        this.read(62);
        v0 = ((this.depth - 1) << 2);
        if(this.depth != 0) {
            if(this.relaxed) {
                if(this.name.equals(this.elementStack[(v0 + 3)]) == 0) {
                    this.error(new StringBuilder().append("expected: /").append(this.elementStack[(v0 + 3)]).append(" read: ").append(this.name).toString());
                }
                this.namespace = this.elementStack[v0];
                this.prefix = this.elementStack[(v0 + 1)];
                this.name = this.elementStack[(v0 + 2)];
            }
        } else {
            this.error("element stack empty");
            this.type = 9;
        }
        return;
    }
    private final int parseLegacy(boolean p12)
    {
        v4 = "";
        v3 = 0;
        this.read();
        this.read();
        if(this != 63) {
            if(this != 33) {
                this.error(new StringBuilder().append("illegal: <").append(this).toString());
                v5 = 9;
            } else {
                this.peek(0);
                if(this != 45) {
                    this.peek(0);
                    if(this != 91) {
                        v5 = 10;
                        v4 = "DOCTYPE";
                        v7 = 15;
                        v1 = 0;
                        while (v1 < v4.length()) {
                            this.read(v4.charAt(v1));
                            v1 = (v1 + 1);
                        }
                        if(v5 == 10) {
                            this.parseDoctype(1);
                            return v5;
                        }
                        while(true) {
                            this.read();
                            if(this != 15) {
                                if(1 != 0) {
                                    this.push(this);
                                }
                                if((v7 == 63) || (this == v7)) {
                                    this.peek(0);
                                    if(this == v7) {
                                        this.peek(1);
                                        if(this == 62) {
                                            break;
                                        }
                                    }
                                }
                                v3 = this;
                            } else {
                                this.error("Unexpected EOF");
                                v5 = 9;
                            }
                        }
                        if((v7 == 45) && ((v3 == 45) && (this.relaxed))) {
                            this.error("illegal comment delimiter: --->");
                        }
                        this.read();
                        this.read();
                        } else {
                            this.txtPos = (this.txtPos - 1);
                        }
                    } else {
                        v5 = 5;
                        v4 = "[CDATA[";
                        v7 = 93;
                    }
                } else {
                    v5 = 9;
                    v4 = "--";
                    v7 = 45;
                }
            }
        } else {
            this.peek(0);
            if(this == 120) {
                this.peek(1);
                if(this != 109) {
                    this.peek(1);
                    if(this != 77) {
                        v7 = 63;
                        v5 = 8;
                    }
                }
                if(p12) {
                    this.peek(0);
                    this.push(this);
                    this.peek(1);
                    this.push(this);
                }
                this.read();
                this.read();
                this.peek(0);
                if(this != 108) {
                    this.peek(0);
                    }
                }
                this.peek(1);
                if(this <= 32) {
                    if((this.line != 1) || (this.column > 4)) {
                        this.error("PI must not start with xml");
                    }
                    this.parseStartTag(1);
                    if((this.attributeCount < 1) || ("version".equals(this.attributes[2]) == 0)) {
                        this.error("version expected");
                    }
                    this.version = this.attributes[3];
                    v2 = 1;
                    if((1 < this.attributeCount) && ("encoding".equals(this.attributes[6]) != 0)) {
                        this.encoding = this.attributes[7];
                        v2 = (1 + 1);
                    }
                    if((v2 < this.attributeCount) && ("standalone".equals(this.attributes[((v2 * 4) + 2)]) != 0)) {
                        v6 = this.attributes[((v2 * 4) + 3)];
                        if("yes".equals(v6) == 0) {
                            if("no".equals(v6) == 0) {
                                this.error(new StringBuilder().append("illegal standalone value: ").append(v6).toString());
                            } else {
                                this.standalone = new Boolean(0);
                            }
                        } else {
                            this.standalone = new Boolean(1);
                        }
                        v2 = (v2 + 1);
                    }
                    if(v2 != this.attributeCount) {
                        this.error("illegal xmldecl");
                    }
                    this.isWhitespace = 1;
                    this.txtPos = 0;
                    v5 = 998;
                }
            } else {
                this.peek(0);
                }
            }
        }
    }
    private final void parseStartTag(boolean p15)
    {
        if(p15) {
            this.read();
        }
        this.readName();
        this.name = this;
        this.attributeCount = 0;
        do {
            this.skip();
            this.peek(0);
            if(!p15) {
                if(this != 47) {
                    if((this != 62) || (p15)) {
                        if(this != 15) {
                            this.readName();
                            if(this.length() != 0) {
                                v8 = this.attributeCount;
                                this.attributeCount = (v8 + 1);
                                v4 = (v8 << 2);
                                this.ensureCapacity(this.attributes, (v4 + 4));
                                this.attributes = this;
                                v5 = (v4 + 1);
                                this.attributes[v4] = "";
                                v4 = (v5 + 1);
                                this.attributes[v5] = 0;
                                v5 = (v4 + 1);
                                this.attributes[v4] = this;
                                this.skip();
                                this.peek(0);
                                if(this == 61) {
                                    this.read(61);
                                    this.skip();
                                    this.peek(0);
                                    v3 = this;
                                    if((this == 39) || (this == 34)) {
                                        this.read();
                                    } else {
                                        if(this.relaxed) {
                                            this.error("attr value delimiter missing!");
                                        }
                                        v3 = 32;
                                    }
                                    v6 = this.txtPos;
                                    this.pushText(v3, 1);
                                    this.get(v6);
                                    this.attributes[v5] = this;
                                    this.txtPos = v6;
                                } else {
                                    if(this.relaxed) {
                                        this.error(new StringBuilder().append("Attr.value missing f. ").append(this).toString());
                                    }
                                    this.attributes[v5] = this;
                                }
                            } else {
                                this.error("attr name expected");
                                v8 = this.depth;
                                this.depth = (v8 + 1);
                                v7 = (v8 << 2);
                                this.ensureCapacity(this.elementStack, (v7 + 4));
                                this.elementStack = this;
                                this.elementStack[(v7 + 3)] = this.name;
                                if(this.depth >= this.nspCounts.length) {
                                    v1 = new int[(this.depth + 4)];
                                    System.arraycopy(this.nspCounts, 0, v1, 0, this.nspCounts.length);
                                    this.nspCounts = v1;
                                }
                                this.nspCounts[this.depth] = this.nspCounts[(this.depth - 1)];
                                if(!this.processNsp) {
                                    this.namespace = "";
                                } else {
                                    this.adjustNsp();
                                }
                                this.elementStack[v7] = this.namespace;
                                this.elementStack[(v7 + 1)] = this.prefix;
                                this.elementStack[(v7 + 2)] = this.name;
                            }
                        } else {
                            this.error("Unexpected EOF");
                        }
                    } else {
                        this.read();
                    }
                } else {
                    this.degenerated = 1;
                    this.read();
                    this.skip();
                    this.read(62);
                }
            } else {
                } else {
                    this.read();
                    this.read(62);
                }
            }
            return;
        } while(v3 == 32);
        this.read();
    }
    private final int peek(int p8)
    {
        while (p8 >= this.peekCount) {
            if(this.srcBuf.length > 1) {
                if(this.srcPos >= this.srcCount) {
                    this.srcCount = this.reader.read(this.srcBuf, 0, this.srcBuf.length);
                    if(this.srcCount > 0) {
                        v0 = this.srcBuf[0];
                    } else {
                        v0 = 15;
                    }
                    this.srcPos = 1;
                } else {
                    v2 = this.srcPos;
                    this.srcPos = (v2 + 1);
                    v0 = this.srcBuf[v2];
                }
            } else {
                v0 = this.reader.read();
            }
            if(v0 != 13) {
                if(v0 != 10) {
                    v2 = this.peekCount;
                    this.peekCount = (v2 + 1);
                    this.peek[v2] = v0;
                } else {
                    if(this.wasCR) {
                        v2 = this.peekCount;
                        this.peekCount = (v2 + 1);
                        this.peek[v2] = 10;
                    }
                }
                this.wasCR = 0;
            } else {
                this.wasCR = 1;
                v2 = this.peekCount;
                this.peekCount = (v2 + 1);
                this.peek[v2] = 10;
            }
        }
        return this.peek[p8];
    }
    private final int peekType()
    {
        v0 = 1;
        this.peek(0);
        switch(this) {
            case -1:
                break;
            case 38:
                v0 = 6;
                break;
            case 60:
                this.peek(1);
                switch(this) {
                    case 33:
                    case 63:
                        v0 = 999;
                        break;
                    case 47:
                        v0 = 3;
                        break;
                    default:
                        v0 = 2;
                }
                break;
            default:
                v0 = 4;
        }
        return v0;
    }
    private final void push(int p5)
    {
        if(p5 > 32) {
            v1 = 0;
        } else {
            v1 = 1;
        }
        this.isWhitespace = (v1 & this.isWhitespace);
        if(this.txtPos == this.txtBuf.length) {
            v0 = new char[(((this.txtPos * 4) / 3) + 4)];
            System.arraycopy(this.txtBuf, 0, v0, 0, this.txtPos);
            this.txtBuf = v0;
        }
        v2 = this.txtPos;
        this.txtPos = (v2 + 1);
        this.txtBuf[v2] = ((char) p5);
        return;
    }
    private final void pushEntity()
    {
        v5 = 1;
        this.read();
        this.push(this);
        v3 = this.txtPos;
        while(true) {
            this.peek(0);
            if(this != 59) {
                if(((this < 128) && ((this < 48) || (this > 57))) && (((this < 97) || (this > 122)) && (((this < 65) || (this > 90)) && ((this != 95) && ((this != 45) && (this != 35)))))) {
                    break;
                }
                this.read();
                this.push(this);
            } else {
                this.read();
                this.get(v3);
                this.txtPos = (v3 - 1);
                if((this.token) && (this.type == 6)) {
                    this.name = this;
                }
                if(this.charAt(0) != 35) {
                    v4 = this.entityMap.get(this);
                    if(v4 != 0) {
                        v5 = 0;
                    }
                    this.unresolved = v5;
                    if(!this.unresolved) {
                        v2 = 0;
                        while (v2 < v4.length()) {
                            this.push(v4.charAt(v2));
                            v2 = (v2 + 1);
                        }
                    } else {
                        if(this.token) {
                            this.error(new StringBuilder().append("unresolved: &").append(this).append(";").toString());
                        }
                    }
                } else {
                    if(this.charAt(1) != 120) {
                        v0 = Integer.parseInt(this.substring(1));
                    } else {
                        v0 = Integer.parseInt(this.substring(2), 16);
                    }
                    this.push(v0);
                }
            }
            return;
        }
        if(this.relaxed) {
            this.error("unterminated entity ref");
        }
        v6 = new StringBuilder().append("broken entitiy: ");
        this.get((v3 - 1));
        System.out.println(v6.append(this).toString());
    }
    private final void pushText(int p9, boolean p10)
    {
        this.peek(0);
        v1 = this;
        v0 = 0;
        while ((v1 != 15) && ((v1 != p9) && ((p9 != 32) || ((v1 > 32) && (v1 != 62))))) {
            if(v1 != 38) {
                if((v1 != 10) || (this.type != 2)) {
                    this.read();
                    this.push(this);
                } else {
                    this.read();
                    this.push(32);
                }
            } else {
                if(!p10) {
                } else {
                    this.pushEntity();
                }
            }
            if((v1 == 62) && ((v0 >= 2) && (p9 != 93))) {
                this.error("Illegal: ]]>");
            }
            if(v1 != 93) {
                v0 = 0;
            } else {
                v0 = (v0 + 1);
            }
            this.peek(0);
            v1 = this;
        }
        return;
    }
    private final int read()
    {
        if(this.peekCount != 0) {
            v0 = this.peek[0];
            this.peek[0] = this.peek[1];
        } else {
            this.peek(0);
            v0 = this;
        }
        this.peekCount = (this.peekCount - 1);
        this.column = (this.column + 1);
        if(v0 == 10) {
            this.line = (this.line + 1);
            this.column = 1;
        }
        return v0;
    }
    private final void read(char p4)
    {
        this.read();
        if(this != p4) {
            this.error(new StringBuilder().append("expected: '").append(p4).append("' actual: '").append(((char) this)).append("'").toString());
        }
        return;
    }
    private final String readName()
    {
        v1 = this.txtPos;
        this.peek(0);
        if(((this < 97) || (this > 122)) && (((this < 65) || (this > 90)) && ((this != 95) && ((this != 58) && ((this < 192) && (this.relaxed)))))) {
            this.error("name expected");
        }
        do {
            this.read();
            this.push(this);
            this.peek(0);
        } while(((this >= 97) && (this <= 122)) || (((this >= 65) && (this <= 90)) || (((this >= 48) && (this <= 57)) || ((this == 95) || ((this == 45) || ((this == 58) || ((this == 46) || (this >= 183))))))));
        this.get(v1);
        this.txtPos = v1;
        return this;
    }
    private final void skip()
    {
        while(true) {
            this.peek(0);
            if((this > 32) || (this == 15)) {
                break;
            }
            this.read();
        }
        return;
    }
    public void defineEntityReplacementText(String p3, String p4)
    {
        if (this.entityMap != 0) {
            this.entityMap.put(p3, p4);
            return;
        } else {
            throw new RuntimeException("entity replacement text must be defined after setInput!");
        }
    }
    public int getAttributeCount()
    {
        return this.attributeCount;
    }
    public String getAttributeName(int p3)
    {
        if (p3 < this.attributeCount) {
            return this.attributes[((p3 << 2) + 2)];
        } else {
            throw new IndexOutOfBoundsException();
        }
    }
    public String getAttributeNamespace(int p3)
    {
        if (p3 < this.attributeCount) {
            return this.attributes[(p3 << 2)];
        } else {
            throw new IndexOutOfBoundsException();
        }
    }
    public String getAttributePrefix(int p3)
    {
        if (p3 < this.attributeCount) {
            return this.attributes[((p3 << 2) + 1)];
        } else {
            throw new IndexOutOfBoundsException();
        }
    }
    public String getAttributeType(int p2)
    {
        return "CDATA";
    }
    public String getAttributeValue(int p3)
    {
        if (p3 < this.attributeCount) {
            return this.attributes[((p3 << 2) + 3)];
        } else {
            throw new IndexOutOfBoundsException();
        }
    }
    public String getAttributeValue(String p4, String p5)
    {
        v0 = ((this.attributeCount << 2) - 4);
        while (v0 >= 0) {
            if((this.attributes[(v0 + 2)].equals(p5) == 0) || ((p4 != 0) && (this.attributes[v0].equals(p4) == 0))) {
                v0 = (v0 - 4);
            } else {
                v1 = this.attributes[(v0 + 3)];
            }
            return v1;
        }
        v1 = 0;
    }
    public int getColumnNumber()
    {
        return this.column;
    }
    public int getDepth()
    {
        return this.depth;
    }
    public int getEventType()
    {
        return this.type;
    }
    public boolean getFeature(String p3)
    {
        v0 = 0;
        if("http://xmlpull.org/v1/doc/features.html#process-namespaces".equals(p3) == 0) {
            this.isProp(p3, 0, "relaxed");
            if(this != 0) {
                v0 = this.relaxed;
            }
        } else {
            v0 = this.processNsp;
        }
        return v0;
    }
    public String getInputEncoding()
    {
        return this.encoding;
    }
    public int getLineNumber()
    {
        return this.line;
    }
    public String getName()
    {
        return this.name;
    }
    public String getNamespace()
    {
        return this.namespace;
    }
    public String getNamespace(String p4)
    {
        if("xml".equals(p4) == 0) {
            if("xmlns".equals(p4) == 0) {
                v0 = ((this.getNamespaceCount(this.depth) << 1) - 2);
                while (v0 >= 0) {
                    if(p4 != 0) {
                        if(p4.equals(this.nspStack[v0]) != 0) {
                            v1 = this.nspStack[(v0 + 1)];
                            return v1;
                        }
                    } else {
                        if(this.nspStack[v0] == 0) {
                            v1 = this.nspStack[(v0 + 1)];
                        }
                    }
                    v0 = (v0 - 2);
                }
                v1 = 0;
            } else {
                v1 = "http://www.w3.org/2000/xmlns/";
            }
        } else {
            v1 = "http://www.w3.org/XML/1998/namespace";
        }
    }
    public int getNamespaceCount(int p2)
    {
        if (p2 <= this.depth) {
            return this.nspCounts[p2];
        } else {
            throw new IndexOutOfBoundsException();
        }
    }
    public String getNamespacePrefix(int p3)
    {
        return this.nspStack[(p3 << 1)];
    }
    public String getNamespaceUri(int p3)
    {
        return this.nspStack[((p3 << 1) + 1)];
    }
    public String getPositionDescription()
    {
        if(this.type >= org.kxml2.io.KXmlParser.TYPES.length) {
            v4 = "unknown";
        } else {
            v4 = org.kxml2.io.KXmlParser.TYPES[this.type];
        }
        v0 = new StringBuffer(v4);
        v0.append(32);
        if((this.type != 2) && (this.type != 3)) {
            if(this.type != 7) {
                if(this.type == 4) {
                    if(!this.isWhitespace) {
                        v3 = this.getText();
                        if(v3.length() > 16) {
                            v3 = new StringBuilder().append(v3.substring(0, 16)).append("...").toString();
                        }
                        v0.append(v3);
                    } else {
                        v0.append("(whitespace)");
                    }
                } else {
                    v0.append(this.getText());
                }
            }
        } else {
            if(this.degenerated) {
                v0.append("(empty) ");
            }
            v0.append(60);
            if(this.type == 3) {
                v0.append(47);
            }
            if(this.prefix != 0) {
                v0.append(new StringBuilder().append("{").append(this.namespace).append("}").append(this.prefix).append(":").toString());
            }
            v0.append(this.name);
            v2 = 0;
            while (v2 < (this.attributeCount << 2)) {
                v0.append(32);
                if(this.attributes[(v2 + 1)] != 0) {
                    v0.append(new StringBuilder().append("{").append(this.attributes[v2]).append("}").append(this.attributes[(v2 + 1)]).append(":").toString());
                }
                v0.append(new StringBuilder().append(this.attributes[(v2 + 2)]).append("='").append(this.attributes[(v2 + 3)]).append("'").toString());
                v2 = (v2 + 4);
            }
            v0.append(62);
        }
        v0.append(new StringBuilder().append("@").append(this.line).append(":").append(this.column).toString());
        if(this.location == 0) {
            if(this.reader != 0) {
                v0.append(" in ");
                v0.append(this.reader.toString());
            }
        } else {
            v0.append(" in ");
            v0.append(this.location);
        }
        return v0.toString();
    }
    public String getPrefix()
    {
        return this.prefix;
    }
    public Object getProperty(String p3)
    {
        this.isProp(p3, 1, "xmldecl-version");
        if(this == 0) {
            this.isProp(p3, 1, "xmldecl-standalone");
            if(this == 0) {
                this.isProp(p3, 1, "location");
                if(this == 0) {
                    v0 = 0;
                } else {
                    if(this.location == 0) {
                        v0 = this.reader.toString();
                    } else {
                        v0 = this.location;
                    }
                }
            } else {
                v0 = this.standalone;
            }
        } else {
            v0 = this.version;
        }
        return v0;
    }
    public String getText()
    {
        if((this.type >= 4) && ((this.type != 6) || (!this.unresolved))) {
            this.get(0);
            v0 = this;
        } else {
            v0 = 0;
        }
        return v0;
    }
    public char[] getTextCharacters(int[] p6)
    {
        v2 = 0;
        if(this.type < 4) {
            p6[0] = 15;
            p6[1] = 15;
            v0 = 0;
        } else {
            if(this.type != 6) {
                p6[v2] = v2;
                p6[1] = this.txtPos;
                v0 = this.txtBuf;
            } else {
                p6[v2] = v2;
                p6[1] = this.name.length();
                v0 = this.name.toCharArray();
            }
        }
        return v0;
    }
    public boolean isAttributeDefault(int p2)
    {
        return 0;
    }
    public boolean isEmptyElementTag()
    {
        if(this.type != 2) {
            this.exception("Wrong event type");
        }
        return this.degenerated;
    }
    public boolean isWhitespace()
    {
        if((this.type != 4) && ((this.type != 7) && (this.type != 5))) {
            this.exception("Wrong event type");
        }
        return this.isWhitespace;
    }
    public int next()
    {
        this.txtPos = 0;
        this.isWhitespace = 1;
        v0 = 9999;
        this.token = 0;
        do {
            this.nextImpl();
            if(this.type < v0) {
                v0 = this.type;
            }
            if(v0 <= 6) {
                if(v0 >= 4) {
                    this.peekType();
                }
            }
        } while(this >= 4);
        this.type = v0;
        if(this.type > 4) {
            this.type = 4;
        }
        return this.type;
    }
    public int nextTag()
    {
        this.next();
        if((this.type == 4) && (this.isWhitespace)) {
            this.next();
        }
        if((this.type != 3) && (this.type != 2)) {
            this.exception("unexpected type");
        }
        return this.type;
    }
    public String nextText()
    {
        if(this.type != 2) {
            this.exception("precondition: START_TAG");
        }
        this.next();
        if(this.type != 4) {
            v0 = "";
        } else {
            v0 = this.getText();
            this.next();
        }
        if(this.type != 3) {
            this.exception("END_TAG expected");
        }
        return v0;
    }
    public int nextToken()
    {
        this.isWhitespace = 1;
        this.txtPos = 0;
        this.token = 1;
        this.nextImpl();
        return this.type;
    }
    public void require(int p3, String p4, String p5)
    {
        if(((p3 != this.type) || ((p4 != 0) && (p4.equals(this.getNamespace()) == 0))) || ((p5 != 0) && (p5.equals(this.getName()) == 0))) {
            this.exception(new StringBuilder().append("expected: ").append(org.kxml2.io.KXmlParser.TYPES[p3]).append(" {").append(p4).append("}").append(p5).toString());
        }
        return;
    }
    public void setFeature(String p3, boolean p4)
    {
        if("http://xmlpull.org/v1/doc/features.html#process-namespaces".equals(p3) == 0) {
            this.isProp(p3, 0, "relaxed");
            if(this == 0) {
                this.exception(new StringBuilder().append("unsupported feature: ").append(p3).toString());
            } else {
                this.relaxed = p4;
            }
        } else {
            this.processNsp = p4;
        }
        return;
    }
    public void setInput(java.io.InputStream p18, String p19)
    {
        this.srcPos = 0;
        this.srcCount = 0;
        v5 = p19;
        if (p18 != 0) {
            if(v5 == 0) {
                v2 = 0;
                while (this.srcCount < 4) {
                    v6 = p18.read();
                    if(v6 == 15) {
                        break;
                    }
                    v2 = ((v2 << 8) | v6);
                    v13 = this.srcCount;
                    this.srcCount = (v13 + 1);
                    this.srcBuf[v13] = ((char) v6);
                }
                if(this.srcCount == 4) {
                    switch(v2) {
                        case -131072:
                            v5 = "UTF-32LE";
                            this.srcCount = 0;
                            break;
                        case 60:
                            v5 = "UTF-32BE";
                            this.srcBuf[0] = 60;
                            this.srcCount = 1;
                            break;
                        case 65279:
                            v5 = "UTF-32BE";
                            this.srcCount = 0;
                            break;
                        case 3932223:
                            v5 = "UTF-16BE";
                            this.srcBuf[0] = 60;
                            this.srcBuf[1] = 63;
                            this.srcCount = 2;
                            break;
                        case 1006632960:
                            v5 = "UTF-32LE";
                            this.srcBuf[0] = 60;
                            this.srcCount = 1;
                            break;
                        case 1006649088:
                            v5 = "UTF-16LE";
                            this.srcBuf[0] = 60;
                            this.srcBuf[1] = 63;
                            this.srcCount = 2;
                            break;
                        case 1010792557:
                            do {
                                v6 = p18.read();
                                if(v6 == 15) {
                                } else {
                                    v13 = this.srcCount;
                                    this.srcCount = (v13 + 1);
                                    this.srcBuf[v13] = ((char) v6);
                                }
                            } while(v6 != 62);
                            v10 = new String(this.srcBuf, 0, this.srcCount);
                            v7 = v10.indexOf("encoding");
                            if(v7 == 15) {
                            } else {
                                v8 = v7;
                                while ((v10.charAt(v8) != 34) && (v10.charAt(v8) != 39)) {
                                    v8 = (v8 + 1);
                                }
                                v7 = (v8 + 1);
                                v5 = v10.substring(v7, v10.indexOf(v10.charAt(v8), v7));
                            }
                            break;
                    }
                    if((nan & v2) != -1.69476569463e+38) {
                        if((nan & v2) != nan) {
                            if((v2 & -256) == -1.16209203336e+29) {
                                v5 = "UTF-8";
                                this.srcBuf[0] = this.srcBuf[3];
                                this.srcCount = 1;
                            }
                        } else {
                            v5 = "UTF-16LE";
                            this.srcBuf[0] = ((char) ((this.srcBuf[3] << 8) | this.srcBuf[2]));
                            this.srcCount = 1;
                        }
                    } else {
                        v5 = "UTF-16BE";
                        this.srcBuf[0] = ((char) ((this.srcBuf[2] << 8) | this.srcBuf[3]));
                        this.srcCount = 1;
                    }
                }
            }
            if(v5 == 0) {
                v5 = "UTF-8";
            }
            this.setInput(new java.io.InputStreamReader(p18, v5));
            this.encoding = p19;
            this.srcCount = this.srcCount;
            return;
        } else {
            throw new IllegalArgumentException();
        }
    }
    public void setInput(java.io.Reader p4)
    {
        this.reader = p4;
        this.line = 1;
        this.column = 0;
        this.type = 0;
        this.name = 0;
        this.namespace = 0;
        this.degenerated = 0;
        this.attributeCount = 15;
        this.encoding = 0;
        this.version = 0;
        this.standalone = 0;
        if(p4 != 0) {
            this.srcPos = 0;
            this.srcCount = 0;
            this.peekCount = 0;
            this.depth = 0;
            this.entityMap = new java.util.Hashtable();
            this.entityMap.put("amp", "&");
            this.entityMap.put("apos", "'");
            this.entityMap.put("gt", ">");
            this.entityMap.put("lt", "<");
            this.entityMap.put("quot", """);
        }
        return;
    }
    public void setProperty(String p4, Object p5)
    {
        this.isProp(p4, 1, "location");
        if (this == 0) {
            throw new org.xmlpull.v1.XmlPullParserException(new StringBuilder().append("unsupported property: ").append(p4).toString());
        } else {
            this.location = p5;
            return;
        }
    }
    public void skipSubTree()
    {
        v2 = 0;
        this.require(2, v2, v2);
        v1 = 1;
        while (v1 > 0) {
            v0 = this.next();
            if(v0 != 3) {
                if(v0 == 2) {
                    v1 = (v1 + 1);
                }
            } else {
                v1 = (v1 - 1);
            }
        }
        return;
    }
    public KXmlSerializer()
    {
        v0 = new String[12];
        this.elementStack = v0;
        v0 = new int[4];
        this.nspCounts = v0;
        v0 = new String[8];
        this.nspStack = v0;
        v0 = new boolean[4];
        this.indent = v0;
        return;
    }
    private final void check(boolean p9)
    {
        if(this.pending) {
            this.depth = (this.depth + 1);
            this.pending = 0;
            if(this.indent.length <= this.depth) {
                v0 = new boolean[(this.depth + 4)];
                System.arraycopy(this.indent, 0, v0, 0, this.depth);
                this.indent = v0;
            }
            this.indent[this.depth] = this.indent[(this.depth - 1)];
            v1 = this.nspCounts[(this.depth - 1)];
            while (v1 < this.nspCounts[this.depth]) {
                this.writer.write(32);
                this.writer.write("xmlns");
                if("".equals(this.nspStack[(v1 * 2)]) != 0) {
                    if(("".equals(this.getNamespace()) != 0) && ("".equals(this.nspStack[((v1 * 2) + 1)]) == 0)) {
                        throw new IllegalStateException("Cannot set default namespace for elements in no namespace");
                    }
                } else {
                    this.writer.write(58);
                    this.writer.write(this.nspStack[(v1 * 2)]);
                }
                this.writer.write("="");
                this.writeEscaped(this.nspStack[((v1 * 2) + 1)], 34);
                this.writer.write(34);
                v1 = (v1 + 1);
            }
            if(this.nspCounts.length <= (this.depth + 1)) {
                v0 = new int[(this.depth + 8)];
                System.arraycopy(this.nspCounts, 0, v0, 0, (this.depth + 1));
                this.nspCounts = v0;
            }
            this.nspCounts[(this.depth + 1)] = this.nspCounts[this.depth];
            if(!p9) {
                v2 = ">";
            } else {
                v2 = " />";
            }
            this.writer.write(v2);
        }
        return;
    }
    private final String getPrefix(String p9, boolean p10, boolean p11)
    {
        v1 = ((this.nspCounts[(this.depth + 1)] * 2) - 2);
        while (v1 >= 0) {
            if((this.nspStack[(v1 + 1)].equals(p9) != 0) && ((p10) || (this.nspStack[v1].equals("") == 0))) {
                v0 = this.nspStack[v1];
                v2 = (v1 + 2);
                while (v2 < (this.nspCounts[(this.depth + 1)] * 2)) {
                    if(this.nspStack[v2].equals(v0) == 0) {
                        v2 = (v2 + 1);
                    } else {
                        v0 = 0;
                    }
                }
                if(v0 != 0) {
                    return v0;
                }
            }
            v1 = (v1 - 2);
        }
        if(p11) {
            if("".equals(p9) == 0) {
                do {
                    v5 = new StringBuilder().append("n");
                    v6 = this.auto;
                    this.auto = (v6 + 1);
                    v4 = v5.append(v6).toString();
                    v1 = ((this.nspCounts[(this.depth + 1)] * 2) - 2);
                    if(v1 >= 0) {
                        if(v4.equals(this.nspStack[v1]) == 0) {
                            v1 = (v1 - 2);
                            while (v1 < 0) {
                            }
                        } else {
                            v4 = 0;
                        }
                    }
                } while(v4 == 0);
            } else {
                v4 = "";
            }
            this.pending = 0;
            this.setPrefix(v4, p9);
            this.pending = this.pending;
            v0 = v4;
        } else {
            v0 = 0;
        }
    }
    private final void writeEscaped(String p6, int p7)
    {
        v1 = 0;
        while (v1 < p6.length()) {
            v0 = p6.charAt(v1);
            switch(v0) {
                case 9:
                case 10:
                case 13:
                    if(p7 != 15) {
                        this.writer.write(new StringBuilder().append("&#").append(v0).append(59).toString());
                    } else {
                        this.writer.write(v0);
                    }
                    break;
                case 34:
                case 39:
                    if(v0 != p7) {
                        if((v0 < 32) || ((v0 == 64) || ((v0 >= 127) && (!this.unicode)))) {
                            this.writer.write(new StringBuilder().append("&#").append(v0).append(";").toString());
                        } else {
                            this.writer.write(v0);
                        }
                    } else {
                        if(v0 != 34) {
                            v2 = "&apos;";
                        } else {
                            v2 = "&quot;";
                        }
                        this.writer.write(v2);
                    }
                    break;
                case 38:
                    this.writer.write("&amp;");
                    break;
                case 60:
                    this.writer.write("&lt;");
                    break;
                case 62:
                    this.writer.write("&gt;");
                    break;
                default:
                    if (v0 < 32) {
                    } else {
                        if ((v0 == 64) || ((v0 < 127) && (!this.unicode))) {
                        } else {
                        }
                    }
            }
            v1 = (v1 + 1);
        }
        return;
    }
    public org.xmlpull.v1.XmlSerializer attribute(String p5, String p6, String p7)
    {
        v1 = 34;
        if (this.pending) {
            if(p5 == 0) {
                p5 = "";
            }
            if("".equals(p5) == 0) {
                this.getPrefix(p5, 0, 1);
                v0 = this;
            } else {
                v0 = "";
            }
            this.writer.write(32);
            if("".equals(v0) == 0) {
                this.writer.write(v0);
                this.writer.write(58);
            }
            this.writer.write(p6);
            this.writer.write(61);
            if(p7.indexOf(34) != 15) {
                v1 = 39;
            }
            this.writer.write(v1);
            this.writeEscaped(p7, v1);
            this.writer.write(v1);
            return this;
        } else {
            throw new IllegalStateException("illegal position for attribute");
        }
    }
    public void cdsect(String p3)
    {
        this.check(0);
        this.writer.write("<![CDATA[");
        this.writer.write(p3);
        this.writer.write("]]>");
        return;
    }
    public void comment(String p3)
    {
        this.check(0);
        this.writer.write("<!--");
        this.writer.write(p3);
        this.writer.write("-->");
        return;
    }
    public void docdecl(String p3)
    {
        this.writer.write("<!DOCTYPE");
        this.writer.write(p3);
        this.writer.write(">");
        return;
    }
    public void endDocument()
    {
        while (this.depth > 0) {
            this.endTag(this.elementStack[((this.depth * 3) - 3)], this.elementStack[((this.depth * 3) - 1)]);
        }
        this.flush();
        return;
    }
    public org.xmlpull.v1.XmlSerializer endTag(String p7, String p8)
    {
        if(this.pending) {
            this.depth = (this.depth - 1);
        }
        if (((p7 != 0) || (this.elementStack[(this.depth * 3)] == 0)) && (((p7 == 0) || (p7.equals(this.elementStack[(this.depth * 3)]) != 0)) && (this.elementStack[((this.depth * 3) + 2)].equals(p8) != 0))) {
            if(!this.pending) {
                if(this.indent[(this.depth + 1)] != 0) {
                    this.writer.write("\x0d\x0a");
                    v0 = 0;
                    while (v0 < this.depth) {
                        this.writer.write("  ");
                        v0 = (v0 + 1);
                    }
                }
                this.writer.write("</");
                v1 = this.elementStack[((this.depth * 3) + 1)];
                if("".equals(v1) == 0) {
                    this.writer.write(v1);
                    this.writer.write(58);
                }
                this.writer.write(p8);
                this.writer.write(62);
            } else {
                this.check(1);
                this.depth = (this.depth - 1);
            }
            this.nspCounts[(this.depth + 1)] = this.nspCounts[this.depth];
            return this;
        } else {
            throw new IllegalArgumentException(new StringBuilder().append("</{").append(p7).append("}").append(p8).append("> does not match start").toString());
        }
    }
    public void entityRef(String p3)
    {
        this.check(0);
        this.writer.write(38);
        this.writer.write(p3);
        this.writer.write(59);
        return;
    }
    public void flush()
    {
        this.check(0);
        this.writer.flush();
        return;
    }
    public int getDepth()
    {
        if(!this.pending) {
            v0 = this.depth;
        } else {
            v0 = (this.depth + 1);
        }
        return v0;
    }
    public boolean getFeature(String p3)
    {
        if("http://xmlpull.org/v1/doc/features.html#indent-output".equals(p3) == 0) {
            v0 = 0;
        } else {
            v0 = this.indent[this.depth];
        }
        return v0;
    }
    public String getName()
    {
        if(this.getDepth() != 0) {
            v0 = this.elementStack[((this.getDepth() * 3) - 1)];
        } else {
            v0 = 0;
        }
        return v0;
    }
    public String getNamespace()
    {
        if(this.getDepth() != 0) {
            v0 = this.elementStack[((this.getDepth() * 3) - 3)];
        } else {
            v0 = 0;
        }
        return v0;
    }
    public String getPrefix(String p4, boolean p5)
    {
        this.getPrefix(p4, 0, p5);
        return this;
    }
    public Object getProperty(String p3)
    {
        throw new RuntimeException("Unsupported property");
    }
    public void ignorableWhitespace(String p1)
    {
        this.text(p1);
        return;
    }
    public void processingInstruction(String p3)
    {
        this.check(0);
        this.writer.write("<?");
        this.writer.write(p3);
        this.writer.write("?>");
        return;
    }
    public void setFeature(String p3, boolean p4)
    {
        if ("http://xmlpull.org/v1/doc/features.html#indent-output".equals(p3) == 0) {
            throw new RuntimeException("Unsupported Feature");
        } else {
            this.indent[this.depth] = p4;
            return;
        }
    }
    public void setOutput(java.io.OutputStream p3, String p4)
    {
        if (p3 != 0) {
            if(p4 != 0) {
                v0 = new java.io.OutputStreamWriter(p3, p4);
            } else {
                v0 = new java.io.OutputStreamWriter(p3);
            }
            this.setOutput(v0);
            this.encoding = p4;
            if((p4 != 0) && (p4.toLowerCase().startsWith("utf") != 0)) {
                this.unicode = 1;
            }
            return;
        } else {
            throw new IllegalArgumentException();
        }
    }
    public void setOutput(java.io.Writer p6)
    {
        this.writer = p6;
        this.nspCounts[0] = 2;
        this.nspCounts[1] = 2;
        this.nspStack[0] = "";
        this.nspStack[1] = "";
        this.nspStack[2] = "xml";
        this.nspStack[3] = "http://www.w3.org/XML/1998/namespace";
        this.pending = 0;
        this.auto = 0;
        this.depth = 0;
        this.unicode = 0;
        return;
    }
    public void setPrefix(String p10, String p11)
    {
        this.check(0);
        if (p10 != 0) {
            if (p11 != 0) {
                this.getPrefix("", 1, 0);
                if("".equals(this) == 0) {
                    v4 = this.nspCounts;
                    v5 = (this.depth + 1);
                    v6 = v4[v5];
                    v4[v5] = (v6 + 1);
                    v2 = (v6 << 1);
                    if(this.nspStack.length < (v2 + 1)) {
                        v1 = new String[(this.nspStack.length + 16)];
                        System.arraycopy(this.nspStack, 0, v1, 0, v2);
                        this.nspStack = v1;
                    }
                    v3 = (v2 + 1);
                    this.nspStack[v2] = "";
                    this.nspStack[v3] = "";
                }
                return;
            } else {
            }
        } else {
        }
    }
    public void setProperty(String p4, Object p5)
    {
        throw new RuntimeException(new StringBuilder().append("Unsupported Property:").append(p5).toString());
    }
    public void startDocument(String p3, Boolean p4)
    {
        this.writer.write("<?xml version='1.0' ");
        if(p3 != 0) {
            this.encoding = p3;
            if(p3.toLowerCase().startsWith("utf") != 0) {
                this.unicode = 1;
            }
        }
        if(this.encoding != 0) {
            this.writer.write("encoding='");
            this.writer.write(this.encoding);
            this.writer.write("' ");
        }
        if(p4 != 0) {
            this.writer.write("standalone='");
            if(p4.booleanValue() == 0) {
                v0 = "no";
            } else {
                v0 = "yes";
            }
            this.writer.write(v0);
            this.writer.write("' ");
        }
        this.writer.write("?>");
        return;
    }
    public org.xmlpull.v1.XmlSerializer startTag(String p10, String p11)
    {
        v8 = 1;
        this.check(0);
        if(this.indent[this.depth] != 0) {
            this.writer.write("\x0d\x0a");
            v3 = 0;
            while (v3 < this.depth) {
                this.writer.write("  ");
                v3 = (v3 + 1);
            }
        }
        v0 = (this.depth * 3);
        if(this.elementStack.length < (v0 + 3)) {
            v2 = new String[(this.elementStack.length + 12)];
            System.arraycopy(this.elementStack, 0, v2, 0, v0);
            this.elementStack = v2;
        }
        if(p10 != 0) {
            this.getPrefix(p10, v8, v8);
            v4 = this;
        } else {
            v4 = "";
        }
        if("".equals(p10) != 0) {
            v3 = this.nspCounts[this.depth];
            while (v3 < this.nspCounts[(this.depth + 1)]) {
                if(("".equals(this.nspStack[(v3 * 2)]) == 0) || ("".equals(this.nspStack[((v3 * 2) + 1)]) != 0)) {
                    v3 = (v3 + 1);
                } else {
                    throw new IllegalStateException("Cannot set default namespace for elements in no namespace");
                }
            }
        }
        v1 = (v0 + 1);
        this.elementStack[v0] = p10;
        v0 = (v1 + 1);
        this.elementStack[v1] = v4;
        this.elementStack[v0] = p11;
        this.writer.write(60);
        if("".equals(v4) == 0) {
            this.writer.write(v4);
            this.writer.write(58);
        }
        this.writer.write(p11);
        this.pending = 1;
        return this;
    }
    public org.xmlpull.v1.XmlSerializer text(String p4)
    {
        this.check(0);
        this.indent[this.depth] = 0;
        this.writeEscaped(p4, 15);
        return this;
    }
    public org.xmlpull.v1.XmlSerializer text(char[] p2, int p3, int p4)
    {
        this.text(new String(p2, p3, p4));
        return this;
    }
    public Document()
    {
        this.rootIndex = 15;
        return;
    }
    public void addChild(int p2, int p3, Object p4)
    {
        if(p3 != 2) {
            if(this.rootIndex >= p2) {
                this.rootIndex = (this.rootIndex + 1);
            }
        } else {
            this.rootIndex = p2;
        }
        super.addChild(p2, p3, p4);
        return;
    }
    public String getEncoding()
    {
        return this.encoding;
    }
    public String getName()
    {
        return "#document";
    }
    public org.kxml2.kdom.Element getRootElement()
    {
        if (this.rootIndex != 15) {
            return this.getChild(this.rootIndex);
        } else {
            throw new RuntimeException("Document has no root element!");
        }
    }
    public Boolean getStandalone()
    {
        return this.standalone;
    }
    public void parse(org.xmlpull.v1.XmlPullParser p3)
    {
        v1 = 0;
        p3.require(0, v1, v1);
        p3.nextToken();
        this.encoding = p3.getInputEncoding();
        this.standalone = p3.getProperty("http://xmlpull.org/v1/doc/properties.html#xmldecl-standalone");
        super.parse(p3);
        if (p3.getEventType() == 1) {
            return;
        } else {
            throw new RuntimeException("Document end expected!");
        }
    }
    public void removeChild(int p2)
    {
        if(p2 != this.rootIndex) {
            if(p2 < this.rootIndex) {
                this.rootIndex = (this.rootIndex - 1);
            }
        } else {
            this.rootIndex = 15;
        }
        super.removeChild(p2);
        return;
    }
    public void setEncoding(String p1)
    {
        this.encoding = p1;
        return;
    }
    public void setStandalone(Boolean p1)
    {
        this.standalone = p1;
        return;
    }
    public void write(org.xmlpull.v1.XmlSerializer p3)
    {
        p3.startDocument(this.encoding, this.standalone);
        this.writeChildren(p3);
        p3.endDocument();
        return;
    }
    public Element()
    {
        return;
    }
    public void clear()
    {
        this.attributes = 0;
        this.children = 0;
        return;
    }
    public org.kxml2.kdom.Element createElement(String p2, String p3)
    {
        if(this.parent != 0) {
            v0 = this.parent.createElement(p2, p3);
        } else {
            v0 = super.createElement(p2, p3);
        }
        return v0;
    }
    public int getAttributeCount()
    {
        if(this.attributes != 0) {
            v0 = this.attributes.size();
        } else {
            v0 = 0;
        }
        return v0;
    }
    public String getAttributeName(int p3)
    {
        return this.attributes.elementAt(p3)[1];
    }
    public String getAttributeNamespace(int p3)
    {
        return this.attributes.elementAt(p3)[0];
    }
    public String getAttributeValue(int p3)
    {
        return this.attributes.elementAt(p3)[2];
    }
    public String getAttributeValue(String p3, String p4)
    {
        v0 = 0;
        while (v0 < this.getAttributeCount()) {
            if((p4.equals(this.getAttributeName(v0)) == 0) || ((p3 != 0) && (p3.equals(this.getAttributeNamespace(v0)) == 0))) {
                v0 = (v0 + 1);
            } else {
                v1 = this.getAttributeValue(v0);
            }
            return v1;
        }
        v1 = 0;
    }
    public String getName()
    {
        return this.name;
    }
    public String getNamespace()
    {
        return this.namespace;
    }
    public int getNamespaceCount()
    {
        if(this.prefixes != 0) {
            v0 = this.prefixes.size();
        } else {
            v0 = 0;
        }
        return v0;
    }
    public String getNamespacePrefix(int p3)
    {
        return this.prefixes.elementAt(p3)[0];
    }
    public String getNamespaceUri(int p3)
    {
        return this.prefixes.elementAt(p3)[1];
    }
    public String getNamespaceUri(String p4)
    {
        v0 = this.getNamespaceCount();
        v1 = 0;
        while (v1 < v0) {
            if((p4 != this.getNamespacePrefix(v1)) && ((p4 == 0) || (p4.equals(this.getNamespacePrefix(v1)) == 0))) {
                v1 = (v1 + 1);
            } else {
                v2 = this.getNamespaceUri(v1);
            }
            return v2;
        }
        if((this.parent instanceof org.kxml2.kdom.Element) == 0) {
            v2 = 0;
        } else {
            v2 = this.parent.getNamespaceUri(p4);
        }
    }
    public org.kxml2.kdom.Node getParent()
    {
        return this.parent;
    }
    public org.kxml2.kdom.Node getRoot()
    {
        v0 = this;
        while (v0.parent != 0) {
            if((v0.parent instanceof org.kxml2.kdom.Element) != 0) {
                v0 = v0.parent;
            } else {
                v0 = v0.parent;
            }
        }
        return v0;
    }
    public void init()
    {
        return;
    }
    public void parse(org.xmlpull.v1.XmlPullParser p5)
    {
        v0 = p5.getNamespaceCount((p5.getDepth() - 1));
        while (v0 < p5.getNamespaceCount(p5.getDepth())) {
            this.setPrefix(p5.getNamespacePrefix(v0), p5.getNamespaceUri(v0));
            v0 = (v0 + 1);
        }
        v0 = 0;
        while (v0 < p5.getAttributeCount()) {
            this.setAttribute(p5.getAttributeNamespace(v0), p5.getAttributeName(v0), p5.getAttributeValue(v0));
            v0 = (v0 + 1);
        }
        this.init();
        if(p5.isEmptyElementTag() == 0) {
            p5.nextToken();
            super.parse(p5);
            if(this.getChildCount() == 0) {
                this.addChild(7, "");
            }
        } else {
            p5.nextToken();
        }
        p5.require(3, this.getNamespace(), this.getName());
        p5.nextToken();
        return;
    }
    public void setAttribute(String p8, String p9, String p10)
    {
        if(this.attributes == 0) {
            this.attributes = new java.util.Vector();
        }
        if(p8 == 0) {
            p8 = "";
        }
        v1 = (this.attributes.size() - 1);
        while (v1 >= 0) {
            v0 = this.attributes.elementAt(v1);
            if((v0[0].equals(p8) == 0) || (v0[1].equals(p9) == 0)) {
                v1 = (v1 - 1);
            } else {
                if(p10 != 0) {
                    v0[2] = p10;
                } else {
                    this.attributes.removeElementAt(v1);
                }
            }
            return;
        }
        v3 = new String[3];
        v3[0] = p8;
        v3[1] = p9;
        v3[2] = p10;
        this.attributes.addElement(v3);
    }
    public void setName(String p1)
    {
        this.name = p1;
        return;
    }
    public void setNamespace(String p3)
    {
        if (p3 != 0) {
            this.namespace = p3;
            return;
        } else {
            throw new NullPointerException("Use "" for empty namespace");
        }
    }
    protected void setParent(org.kxml2.kdom.Node p1)
    {
        this.parent = p1;
        return;
    }
    public void setPrefix(String p4, String p5)
    {
        if(this.prefixes == 0) {
            this.prefixes = new java.util.Vector();
        }
        v1 = new String[2];
        v1[0] = p4;
        v1[1] = p5;
        this.prefixes.addElement(v1);
        return;
    }
    public void write(org.xmlpull.v1.XmlSerializer p6)
    {
        if(this.prefixes != 0) {
            v0 = 0;
            while (v0 < this.prefixes.size()) {
                p6.setPrefix(this.getNamespacePrefix(v0), this.getNamespaceUri(v0));
                v0 = (v0 + 1);
            }
        }
        p6.startTag(this.getNamespace(), this.getName());
        v1 = this.getAttributeCount();
        v0 = 0;
        while (v0 < v1) {
            p6.attribute(this.getAttributeNamespace(v0), this.getAttributeName(v0), this.getAttributeValue(v0));
            v0 = (v0 + 1);
        }
        this.writeChildren(p6);
        p6.endTag(this.getNamespace(), this.getName());
        return;
    }
    public WbxmlParser()
    {
        this.TAG_TABLE = 0;
        this.ATTR_START_TABLE = 1;
        this.ATTR_VALUE_TABLE = 2;
        this.cacheStringTable = 0;
        v0 = new String[16];
        this.elementStack = v0;
        v0 = new String[8];
        this.nspStack = v0;
        v0 = new int[4];
        this.nspCounts = v0;
        v0 = new String[16];
        this.attributes = v0;
        this.nextId = 14;
        this.tables = new java.util.Vector();
        return;
    }
    private final boolean adjustNsp()
    {
        v0 = 0;
        v5 = 0;
        while (v5 < (this.attributeCount << 2)) {
            v1 = this.attributes[(v5 + 2)];
            v4 = v1.indexOf(58);
            if(v4 == 15) {
                if(v1.equals("xmlns") != 0) {
                    v7 = v1;
                    v1 = 0;
                    if(v7.equals("xmlns") != 0) {
                        v8 = this.nspCounts;
                        v9 = this.depth;
                        v10 = v8[v9];
                        v8[v9] = (v10 + 1);
                        v6 = (v10 << 1);
                        this.ensureCapacity(this.nspStack, (v6 + 2));
                        this.nspStack = this;
                        this.nspStack[v6] = v1;
                        this.nspStack[(v6 + 1)] = this.attributes[(v5 + 3)];
                        if((v1 != 0) && (this.attributes[(v5 + 3)].equals("") != 0)) {
                            this.exception("illegal empty namespace");
                        }
                        v9 = (v5 + 4);
                        v11 = (this.attributeCount - 1);
                        this.attributeCount = v11;
                        System.arraycopy(this.attributes, v9, this.attributes, v5, ((v11 << 2) - v5));
                        v5 = (v5 - 4);
                    } else {
                        v0 = 1;
                    }
                }
            } else {
                v7 = v1.substring(0, v4);
                v1 = v1.substring((v4 + 1));
            }
            v5 = (v5 + 4);
        }
        if(v0 != 0) {
            v5 = ((this.attributeCount << 2) - 4);
            while (v5 >= 0) {
                v1 = this.attributes[(v5 + 2)];
                v4 = v1.indexOf(58);
                if(v4 != 0) {
                    if(v4 != 15) {
                        v3 = v1.substring(0, v4);
                        v1 = v1.substring((v4 + 1));
                        v2 = this.getNamespace(v3);
                        if(v2 != 0) {
                            this.attributes[v5] = v2;
                            this.attributes[(v5 + 1)] = v3;
                            this.attributes[(v5 + 2)] = v1;
                            v6 = ((this.attributeCount << 2) - 4);
                            while (v6 > v5) {
                                if((v1.equals(this.attributes[(v6 + 2)]) != 0) && (v2.equals(this.attributes[v6]) != 0)) {
                                    this.exception(new StringBuilder().append("Duplicate Attribute: {").append(v2).append("}").append(v1).toString());
                                }
                                v6 = (v6 - 4);
                            }
                        } else {
                            throw new RuntimeException(new StringBuilder().append("Undefined Prefix: ").append(v3).append(" in ").append(this).toString());
                        }
                    }
                    v5 = (v5 - 4);
                } else {
                    throw new RuntimeException(new StringBuilder().append("illegal attribute name: ").append(v1).append(" at ").append(this).toString());
                }
            }
        }
        v4 = this.name.indexOf(58);
        if(v4 != 0) {
            if(v4 != 15) {
                this.prefix = this.name.substring(0, v4);
                this.name = this.name.substring((v4 + 1));
            }
        } else {
            this.exception(new StringBuilder().append("illegal tag name: ").append(this.name).toString());
        }
        this.namespace = this.getNamespace(this.prefix);
        if(this.namespace == 0) {
            if(this.prefix != 0) {
                this.exception(new StringBuilder().append("undefined prefix: ").append(this.prefix).toString());
            }
            this.namespace = "";
        }
        return v0;
    }
    private final String[] ensureCapacity(String[] p4, int p5)
    {
        if(p4.length < p5) {
            v0 = new String[(p5 + 16)];
            System.arraycopy(p4, 0, v0, 0, p4.length);
            p4 = v0;
        }
        return p4;
    }
    private final void exception(String p3)
    {
        throw new org.xmlpull.v1.XmlPullParserException(p3, this, 0);
    }
    private final void nextImpl()
    {
        if(this.type == 3) {
            this.depth = (this.depth - 1);
        }
        if(!this.degenerated) {
            this.text = 0;
            this.prefix = 0;
            this.name = 0;
            this.peekId();
            v1 = this;
            while (v1 == 0) {
                this.nextId = 14;
                this.selectPage(this.readByte(), 1);
                this.peekId();
                v1 = this;
            }
            this.nextId = 14;
            switch(v1) {
                case -1:
                    this.type = 1;
                    break;
                case 1:
                    v2 = ((this.depth - 1) << 2);
                    this.type = 3;
                    this.namespace = this.elementStack[v2];
                    this.prefix = this.elementStack[(v2 + 1)];
                    this.name = this.elementStack[(v2 + 2)];
                    break;
                case 2:
                    this.type = 6;
                    v0 = ((char) this.readInt());
                    this.text = new StringBuilder().append("").append(v0).toString();
                    this.name = new StringBuilder().append("#").append(v0).toString();
                    break;
                case 3:
                    this.type = 4;
                    this.text = this.readStrI();
                    break;
                case 64:
                case 65:
                case 66:
                case 128:
                case 129:
                case 130:
                case 192:
                case 193:
                case 194:
                case 195:
                    this.type = 64;
                    this.wapCode = v1;
                    this.wapExtensionData = this.parseWapExtension(v1);
                    break;
                case 67:
                    throw new RuntimeException("PI curr. not supp.");
                    break;
                case 131:
                    this.type = 4;
                    this.text = this.readStrT();
                    break;
                default:
                    this.parseElement(v1);
            }
        } else {
            this.type = 3;
            this.degenerated = 0;
        }
        return;
    }
    private int peekId()
    {
        if(this.nextId == 14) {
            this.nextId = this.in.read();
        }
        return this.nextId;
    }
    private void selectPage(int p4, boolean p5)
    {
        if((this.tables.size() != 0) || (p4 != 0)) {
            if((p4 * 3) > this.tables.size()) {
                this.exception(new StringBuilder().append("Code Page ").append(p4).append(" undefined!").toString());
            }
            if(!p5) {
                this.attrStartTable = this.tables.elementAt(((p4 * 3) + this.ATTR_START_TABLE));
                this.attrValueTable = this.tables.elementAt(((p4 * 3) + this.ATTR_VALUE_TABLE));
            } else {
                this.tagTable = this.tables.elementAt(((p4 * 3) + this.TAG_TABLE));
            }
        }
        return;
    }
    private final void setTable(int p3, int p4, String[] p5)
    {
        if(this.stringTable != 0) {
            throw new RuntimeException("setXxxTable must be called before setInput!");
        }
        while (this.tables.size() < ((p3 * 3) + 3)) {
            this.tables.addElement(0);
        }
        this.tables.setElementAt(p5, ((p3 * 3) + p4));
        return;
    }
    public void defineEntityReplacementText(String p1, String p2)
    {
        return;
    }
    public int getAttributeCount()
    {
        return this.attributeCount;
    }
    public String getAttributeName(int p3)
    {
        if (p3 < this.attributeCount) {
            return this.attributes[((p3 << 2) + 2)];
        } else {
            throw new IndexOutOfBoundsException();
        }
    }
    public String getAttributeNamespace(int p3)
    {
        if (p3 < this.attributeCount) {
            return this.attributes[(p3 << 2)];
        } else {
            throw new IndexOutOfBoundsException();
        }
    }
    public String getAttributePrefix(int p3)
    {
        if (p3 < this.attributeCount) {
            return this.attributes[((p3 << 2) + 1)];
        } else {
            throw new IndexOutOfBoundsException();
        }
    }
    public String getAttributeType(int p2)
    {
        return "CDATA";
    }
    public String getAttributeValue(int p3)
    {
        if (p3 < this.attributeCount) {
            return this.attributes[((p3 << 2) + 3)];
        } else {
            throw new IndexOutOfBoundsException();
        }
    }
    public String getAttributeValue(String p4, String p5)
    {
        v0 = ((this.attributeCount << 2) - 4);
        while (v0 >= 0) {
            if((this.attributes[(v0 + 2)].equals(p5) == 0) || ((p4 != 0) && (this.attributes[v0].equals(p4) == 0))) {
                v0 = (v0 - 4);
            } else {
                v1 = this.attributes[(v0 + 3)];
            }
            return v1;
        }
        v1 = 0;
    }
    public int getColumnNumber()
    {
        return 15;
    }
    public int getDepth()
    {
        return this.depth;
    }
    public int getEventType()
    {
        return this.type;
    }
    public boolean getFeature(String p2)
    {
        if("http://xmlpull.org/v1/doc/features.html#process-namespaces".equals(p2) == 0) {
            v0 = 0;
        } else {
            v0 = this.processNsp;
        }
        return v0;
    }
    public String getInputEncoding()
    {
        return this.encoding;
    }
    public int getLineNumber()
    {
        return 15;
    }
    public String getName()
    {
        return this.name;
    }
    public String getNamespace()
    {
        return this.namespace;
    }
    public String getNamespace(String p4)
    {
        if("xml".equals(p4) == 0) {
            if("xmlns".equals(p4) == 0) {
                v0 = ((this.getNamespaceCount(this.depth) << 1) - 2);
                while (v0 >= 0) {
                    if(p4 != 0) {
                        if(p4.equals(this.nspStack[v0]) != 0) {
                            v1 = this.nspStack[(v0 + 1)];
                            return v1;
                        }
                    } else {
                        if(this.nspStack[v0] == 0) {
                            v1 = this.nspStack[(v0 + 1)];
                        }
                    }
                    v0 = (v0 - 2);
                }
                v1 = 0;
            } else {
                v1 = "http://www.w3.org/2000/xmlns/";
            }
        } else {
            v1 = "http://www.w3.org/XML/1998/namespace";
        }
    }
    public int getNamespaceCount(int p2)
    {
        if (p2 <= this.depth) {
            return this.nspCounts[p2];
        } else {
            throw new IndexOutOfBoundsException();
        }
    }
    public String getNamespacePrefix(int p3)
    {
        return this.nspStack[(p3 << 1)];
    }
    public String getNamespaceUri(int p3)
    {
        return this.nspStack[((p3 << 1) + 1)];
    }
    public String getPositionDescription()
    {
        if(this.type >= org.kxml2.wap.WbxmlParser.TYPES.length) {
            v4 = "unknown";
        } else {
            v4 = org.kxml2.wap.WbxmlParser.TYPES[this.type];
        }
        v0 = new StringBuffer(v4);
        v0.append(32);
        if((this.type != 2) && (this.type != 3)) {
            if(this.type != 7) {
                if(this.type == 4) {
                    if(!this.isWhitespace) {
                        v3 = this.getText();
                        if(v3.length() > 16) {
                            v3 = new StringBuilder().append(v3.substring(0, 16)).append("...").toString();
                        }
                        v0.append(v3);
                    } else {
                        v0.append("(whitespace)");
                    }
                } else {
                    v0.append(this.getText());
                }
            }
        } else {
            if(this.degenerated) {
                v0.append("(empty) ");
            }
            v0.append(60);
            if(this.type == 3) {
                v0.append(47);
            }
            if(this.prefix != 0) {
                v0.append(new StringBuilder().append("{").append(this.namespace).append("}").append(this.prefix).append(":").toString());
            }
            v0.append(this.name);
            v2 = 0;
            while (v2 < (this.attributeCount << 2)) {
                v0.append(32);
                if(this.attributes[(v2 + 1)] != 0) {
                    v0.append(new StringBuilder().append("{").append(this.attributes[v2]).append("}").append(this.attributes[(v2 + 1)]).append(":").toString());
                }
                v0.append(new StringBuilder().append(this.attributes[(v2 + 2)]).append("='").append(this.attributes[(v2 + 3)]).append("'").toString());
                v2 = (v2 + 4);
            }
            v0.append(62);
        }
        return v0.toString();
    }
    public String getPrefix()
    {
        return this.prefix;
    }
    public Object getProperty(String p2)
    {
        return 0;
    }
    public String getText()
    {
        return this.text;
    }
    public char[] getTextCharacters(int[] p7)
    {
        v3 = 0;
        if(this.type < 4) {
            p7[0] = 15;
            p7[1] = 15;
            v0 = 0;
        } else {
            p7[v3] = v3;
            p7[1] = this.text.length();
            v0 = new char[this.text.length()];
            this.text.getChars(v3, this.text.length(), v0, v3);
        }
        return v0;
    }
    public int getWapCode()
    {
        return this.wapCode;
    }
    public Object getWapExtensionData()
    {
        return this.wapExtensionData;
    }
    public boolean isAttributeDefault(int p2)
    {
        return 0;
    }
    public boolean isEmptyElementTag()
    {
        if(this.type != 2) {
            this.exception("Wrong event type");
        }
        return this.degenerated;
    }
    public boolean isWhitespace()
    {
        if((this.type != 4) && ((this.type != 7) && (this.type != 5))) {
            this.exception("Wrong event type");
        }
        return this.isWhitespace;
    }
    public int next()
    {
        this.isWhitespace = 1;
        v0 = 9999;
        while(true) {
            v1 = this.text;
            this.nextImpl();
            if(this.type < v0) {
                v0 = this.type;
            }
            if(v0 <= 5) {
                if(v0 >= 4) {
                    if(v1 != 0) {
                        if(this.text != 0) {
                            v1 = new StringBuilder().append(v1).append(this.text).toString();
                        }
                        this.text = v1;
                    }
                    this.peekId();
                    switch(this) {
                        default:
                    }
                }
            }
        }
        this.type = v0;
        if(this.type > 4) {
            this.type = 4;
        }
        return this.type;
    }
    public int nextTag()
    {
        this.next();
        if((this.type == 4) && (this.isWhitespace)) {
            this.next();
        }
        if((this.type != 3) && (this.type != 2)) {
            this.exception("unexpected type");
        }
        return this.type;
    }
    public String nextText()
    {
        if(this.type != 2) {
            this.exception("precondition: START_TAG");
        }
        this.next();
        if(this.type != 4) {
            v0 = "";
        } else {
            v0 = this.getText();
            this.next();
        }
        if(this.type != 3) {
            this.exception("END_TAG expected");
        }
        return v0;
    }
    public int nextToken()
    {
        this.isWhitespace = 1;
        this.nextImpl();
        return this.type;
    }
     void parseElement(int p9)
    {
        this.type = 2;
        this.name = this.resolveId(this.tagTable, (p9 & 63));
        this.attributeCount = 0;
        if((p9 & 128) != 0) {
            this.readAttr();
        }
        if((p9 & 64) != 0) {
            v4 = 0;
        } else {
            v4 = 1;
        }
        this.degenerated = v4;
        v4 = this.depth;
        this.depth = (v4 + 1);
        v3 = (v4 << 2);
        this.ensureCapacity(this.elementStack, (v3 + 4));
        this.elementStack = this;
        this.elementStack[(v3 + 3)] = this.name;
        if(this.depth >= this.nspCounts.length) {
            v0 = new int[(this.depth + 4)];
            System.arraycopy(this.nspCounts, 0, v0, 0, this.nspCounts.length);
            this.nspCounts = v0;
        }
        this.nspCounts[this.depth] = this.nspCounts[(this.depth - 1)];
        v1 = (this.attributeCount - 1);
        while (v1 > 0) {
            v2 = 0;
            while (v2 < v1) {
                if(this.getAttributeName(v1).equals(this.getAttributeName(v2)) != 0) {
                    this.exception(new StringBuilder().append("Duplicate Attribute: ").append(this.getAttributeName(v1)).toString());
                }
                v2 = (v2 + 1);
            }
            v1 = (v1 - 1);
        }
        if(!this.processNsp) {
            this.namespace = "";
        } else {
            this.adjustNsp();
        }
        this.elementStack[v3] = this.namespace;
        this.elementStack[(v3 + 1)] = this.prefix;
        this.elementStack[(v3 + 2)] = this.name;
        return;
    }
    public Object parseWapExtension(int p5)
    {
        v0 = 0;
        switch(p5) {
            case 64:
            case 65:
            case 66:
                v0 = this.readStrI();
                break;
            case 128:
            case 129:
            case 130:
                v0 = new Integer(this.readInt());
                break;
            case 192:
            case 193:
            case 194:
                break;
            case 192:
            case 193:
            case 194:
                break;
            case 192:
            case 193:
            case 194:
                break;
            case 195:
                v1 = this.readInt();
                v0 = new byte[v1];
                while (v1 > 0) {
                    v1 = (v1 - this.in.read(v0, (v0.length - v1), v1));
                }
                break;
            default:
                this.exception(new StringBuilder().append("illegal id: ").append(p5).toString());
        }
        return v0;
    }
    public void readAttr()
    {
        v3 = this.readByte();
        v2 = 0;
        while (v3 != 1) {
            while (v3 == 0) {
                this.selectPage(this.readByte(), 0);
                v3 = this.readByte();
            }
            v4 = this.resolveId(this.attrStartTable, v3);
            v0 = v4.indexOf(61);
            if(v0 != 15) {
                v5 = new StringBuffer(v4.substring((v0 + 1)));
                v4 = v4.substring(0, v0);
            } else {
                v5 = new StringBuffer();
            }
            v3 = this.readByte();
            while (((v3 > 128) || ((v3 == 0) || ((v3 == 2) || ((v3 == 3) || ((v3 == 131) || ((v3 >= 64) && (v3 <= 66))))))) || ((v3 >= 128) && (v3 <= 130))) {
                switch(v3) {
                    case 0:
                        this.selectPage(this.readByte(), 0);
                        break;
                    case 2:
                        v5.append(((char) this.readInt()));
                        break;
                    case 3:
                        v5.append(this.readStrI());
                        break;
                    case 64:
                    case 65:
                    case 66:
                    case 128:
                    case 129:
                    case 130:
                    case 192:
                    case 193:
                    case 194:
                    case 195:
                        v5.append(this.resolveWapExtension(v3, this.parseWapExtension(v3)));
                        break;
                    case 131:
                        v5.append(this.readStrT());
                        break;
                    default:
                        v5.append(this.resolveId(this.attrValueTable, v3));
                }
                v3 = this.readByte();
            }
            this.ensureCapacity(this.attributes, (v2 + 4));
            this.attributes = this;
            v1 = (v2 + 1);
            this.attributes[v2] = "";
            v2 = (v1 + 1);
            this.attributes[v1] = 0;
            v1 = (v2 + 1);
            this.attributes[v2] = v4;
            v2 = (v1 + 1);
            this.attributes[v1] = v5.toString();
            this.attributeCount = (this.attributeCount + 1);
        }
        return;
    }
     int readByte()
    {
        v0 = this.in.read();
        if (v0 != 15) {
            return v0;
        } else {
            throw new java.io.IOException("Unexpected EOF");
        }
    }
     int readInt()
    {
        v1 = 0;
        do {
            v0 = this.readByte();
            v1 = ((v1 << 7) | (v0 & 127));
        } while((v0 & 128) != 0);
        return v1;
    }
     String readStrI()
    {
        v0 = new java.io.ByteArrayOutputStream();
        v3 = 1;
        while(true) {
            v1 = this.in.read();
            if(v1 != 0) {
                if(v1 == 15) {
                    break;
                }
                if(v1 > 32) {
                    v3 = 0;
                }
                v0.write(v1);
            } else {
                this.isWhitespace = v3;
                v2 = new String(v0.toByteArray(), this.encoding);
                v0.close();
                return v2;
            }
        }
        throw new java.io.IOException("Unexpected EOF");
    }
     String readStrT()
    {
        v2 = this.readInt();
        if(this.cacheStringTable == 0) {
            this.cacheStringTable = new java.util.Hashtable();
        }
        v1 = this.cacheStringTable.get(new Integer(v2));
        if(v1 == 0) {
            v0 = v2;
            while ((v0 < this.stringTable.length) && (this.stringTable[v0] != 0)) {
                v0 = (v0 + 1);
            }
            v1 = new String(this.stringTable, v2, (v0 - v2), this.encoding);
            this.cacheStringTable.put(new Integer(v2), v1);
        }
        return v1;
    }
    public void require(int p4, String p5, String p6)
    {
        if(((p4 != this.type) || ((p5 != 0) && (p5.equals(this.getNamespace()) == 0))) || ((p6 != 0) && (p6.equals(this.getName()) == 0))) {
            v1 = new StringBuilder().append("expected: ");
            if(p4 != 64) {
                v0 = new StringBuilder().append(org.kxml2.wap.WbxmlParser.TYPES[p4]).append(" {").append(p5).append("}").append(p6).toString();
            } else {
                v0 = "WAP Ext.";
            }
            this.exception(v1.append(v0).toString());
        }
        return;
    }
     String resolveId(String[] p5, int p6)
    {
        v0 = ((p6 & 127) - 5);
        if(v0 != 15) {
            if((v0 >= 0) && ((p5 != 0) && ((v0 < p5.length) && (p5[v0] != 0)))) {
                this.wapCode = (v0 + 5);
                v1 = p5[v0];
            } else {
                throw new java.io.IOException(new StringBuilder().append("id ").append(p6).append(" undef.").toString());
            }
        } else {
            this.wapCode = 15;
            v1 = this.readStrT();
        }
        return v1;
    }
    protected String resolveWapExtension(int p6, Object p7)
    {
        if((p7 instanceof byte[]) == 0) {
            v3 = new StringBuilder().append("$(").append(p7).append(")").toString();
        } else {
            v2 = new StringBuffer();
            v0 = p7;
            v1 = 0;
            while (v1 < v0.length) {
                v2.append("0123456789abcdef".charAt(((v0[v1] >> 4) & 15)));
                v2.append("0123456789abcdef".charAt((v0[v1] & 15)));
                v1 = (v1 + 1);
            }
            v3 = v2.toString();
        }
        return v3;
    }
    public void setAttrStartTable(int p2, String[] p3)
    {
        this.setTable(p2, this.ATTR_START_TABLE, p3);
        return;
    }
    public void setAttrValueTable(int p2, String[] p3)
    {
        this.setTable(p2, this.ATTR_VALUE_TABLE, p3);
        return;
    }
    public void setFeature(String p3, boolean p4)
    {
        if("http://xmlpull.org/v1/doc/features.html#process-namespaces".equals(p3) == 0) {
            this.exception(new StringBuilder().append("unsupported feature: ").append(p3).toString());
        } else {
            this.processNsp = p4;
        }
        return;
    }
    public void setInput(java.io.InputStream p9, String p10)
    {
        this.in = p9;
        this.version = this.readByte();
        this.publicIdentifierId = this.readInt();
        if(this.publicIdentifierId == 0) {
            this.readInt();
        }
        v0 = this.readInt();
        if(p10 != 0) {
            this.encoding = p10;
        } else {
            switch(v0) {
                case 4:
                    this.encoding = "ISO-8859-1";
                    break;
                case 106:
                    this.encoding = "UTF-8";
                    break;
                default:
                    throw new java.io.UnsupportedEncodingException(new StringBuilder().append("").append(v0).toString());
            }
        }
        v4 = this.readInt();
        v5 = new byte[v4];
        this.stringTable = v5;
        v3 = 0;
        while (v3 < v4) {
            v1 = p9.read(this.stringTable, v3, (v4 - v3));
            if(v1 <= 0) {
                break;
            }
            v3 = (v3 + v1);
        }
        this.selectPage(0, 1);
        this.selectPage(0, 0);
        return;
    }
    public void setInput(java.io.Reader p2)
    {
        this.exception("InputStream required");
        return;
    }
    public void setProperty(String p4, Object p5)
    {
        throw new org.xmlpull.v1.XmlPullParserException(new StringBuilder().append("unsupported property: ").append(p4).toString());
    }
    public void setTagTable(int p2, String[] p3)
    {
        this.setTable(p2, this.TAG_TABLE, p3);
        return;
    }
    public WbxmlSerializer()
    {
        this.stringTable = new java.util.Hashtable();
        this.buf = new java.io.ByteArrayOutputStream();
        this.stringTableBuf = new java.io.ByteArrayOutputStream();
        this.attributes = new java.util.Vector();
        this.attrStartTable = new java.util.Hashtable();
        this.attrValueTable = new java.util.Hashtable();
        this.tagTable = new java.util.Hashtable();
        this.headerSent = 0;
        return;
    }
    static void writeInt(java.io.OutputStream p4, int p5)
    {
        v0 = new byte[5];
        v1 = 0;
        while(true) {
            v2 = (v1 + 1);
            v0[v1] = ((byte) (p5 & 127));
            p5 = (p5 >> 7);
            if(p5 == 0) {
                break;
            }
            v1 = v2;
        }
        v1 = v2;
        while (v1 > 1) {
            v1 = (v1 - 1);
            p4.write((v0[v1] | 128));
        }
        p4.write(v0[0]);
        return;
    }
    private void writeStr(String p11)
    {
        v2 = 0;
        v0 = 0;
        v1 = p11.length();
        if(!this.headerSent) {
            while (v2 < v1) {
                while ((v2 < v1) && (p11.charAt(v2) < 65)) {
                    v2 = (v2 + 1);
                }
                v3 = v2;
                while ((v3 < v1) && (p11.charAt(v3) >= 65)) {
                    v3 = (v3 + 1);
                }
                if((v3 - v2) > 10) {
                    if((v2 <= v0) || ((p11.charAt((v2 - 1)) != 32) || (this.stringTable.get(p11.substring(v2, v3)) != 0))) {
                        if((v2 > v0) && (p11.charAt((v2 - 1)) == 32)) {
                            v2 = (v2 - 1);
                        }
                        if(v2 > v0) {
                            this.buf.write(131);
                            this.writeStrT(p11.substring(v0, v2), 0);
                        }
                        this.buf.write(131);
                        this.writeStrT(p11.substring(v2, v3), 1);
                    } else {
                        this.buf.write(131);
                        this.writeStrT(p11.substring(v0, v3), 0);
                    }
                    v0 = v3;
                }
                v2 = v3;
            }
            if(v0 < v1) {
                this.buf.write(131);
                this.writeStrT(p11.substring(v0, v1), 0);
            }
        } else {
            this.writeStrI(this.buf, p11);
        }
        return;
    }
    private final void writeStrT(String p4, boolean p5)
    {
        v0 = this.stringTable.get(p4);
        if(v0 != 0) {
            v1 = v0.intValue();
        } else {
            v1 = this.addToStringTable(p4, p5);
        }
        org.kxml2.wap.WbxmlSerializer.writeInt(this.buf, v1);
        return;
    }
    public int addToStringTable(String p10, boolean p11)
    {
        if (!this.headerSent) {
            v0 = this.stringTableBuf.size();
            v2 = v0;
            if((p10.charAt(0) >= 48) && (p11)) {
                p10 = new StringBuilder().append(32).append(p10).toString();
                v2 = (v2 + 1);
            }
            this.stringTable.put(p10, new Integer(v0));
            if(p10.charAt(0) == 32) {
                this.stringTable.put(p10.substring(1), new Integer((v0 + 1)));
            }
            v1 = p10.lastIndexOf(32);
            if(v1 > 1) {
                this.stringTable.put(p10.substring(v1), new Integer((v0 + v1)));
                this.stringTable.put(p10.substring((v1 + 1)), new Integer(((v0 + v1) + 1)));
            }
            this.writeStrI(this.stringTableBuf, p10);
            this.stringTableBuf.flush();
            return v2;
        } else {
            throw new java.io.IOException("stringtable sent");
        }
    }
    public org.xmlpull.v1.XmlSerializer attribute(String p2, String p3, String p4)
    {
        this.attributes.addElement(p3);
        this.attributes.addElement(p4);
        return this;
    }
    public void cdsect(String p1)
    {
        this.text(p1);
        return;
    }
    public void checkPending(boolean p9)
    {
        if(this.pending != 0) {
            v2 = this.attributes.size();
            v1 = this.tagTable.get(this.pending);
            if(v1 != 0) {
                if(v1[0] != this.tagPage) {
                    this.tagPage = v1[0];
                    this.buf.write(0);
                    this.buf.write(this.tagPage);
                }
                if(v2 != 0) {
                    if(!p9) {
                        v3 = (v1[1] | 192);
                    } else {
                        v3 = (v1[1] | 128);
                    }
                } else {
                    if(!p9) {
                        v3 = (v1[1] | 64);
                    } else {
                        v3 = v1[1];
                    }
                }
                this.buf.write(v3);
            } else {
                if(v2 != 0) {
                    if(!p9) {
                        v3 = 196;
                    } else {
                        v3 = 132;
                    }
                } else {
                    if(!p9) {
                        v3 = 68;
                    } else {
                        v3 = 4;
                    }
                }
                this.buf.write(v3);
                this.writeStrT(this.pending, 0);
            }
            v0 = 0;
            while (v0 < v2) {
                v1 = this.attrStartTable.get(this.attributes.elementAt(v0));
                if(v1 != 0) {
                    if(v1[0] != this.attrPage) {
                        this.attrPage = v1[0];
                        this.buf.write(0);
                        this.buf.write(this.attrPage);
                    }
                    this.buf.write(v1[1]);
                } else {
                    this.buf.write(4);
                    this.writeStrT(this.attributes.elementAt(v0), 0);
                }
                v0 = (v0 + 1);
                v1 = this.attrValueTable.get(this.attributes.elementAt(v0));
                if(v1 != 0) {
                    if(v1[0] != this.attrPage) {
                        this.attrPage = v1[0];
                        this.buf.write(0);
                        this.buf.write(this.attrPage);
                    }
                    this.buf.write(v1[1]);
                } else {
                    this.writeStr(this.attributes.elementAt(v0));
                }
                v0 = (v0 + 1);
            }
            if(v2 > 0) {
                this.buf.write(1);
            }
            this.pending = 0;
            this.attributes.removeAllElements();
        }
        return;
    }
    public void comment(String p1)
    {
        return;
    }
    public void docdecl(String p3)
    {
        throw new RuntimeException("Cannot write docdecl for WBXML");
    }
    public void endDocument()
    {
        this.flush();
        return;
    }
    public org.xmlpull.v1.XmlSerializer endTag(String p3, String p4)
    {
        if(this.pending == 0) {
            this.buf.write(1);
        } else {
            this.checkPending(1);
        }
        this.depth = (this.depth - 1);
        return this;
    }
    public void entityRef(String p3)
    {
        throw new RuntimeException("EntityReference not supported for WBXML");
    }
    public void flush()
    {
        this.checkPending(0);
        if(this.headerSent) {
            org.kxml2.wap.WbxmlSerializer.writeInt(this.out, this.stringTableBuf.size());
            this.out.write(this.stringTableBuf.toByteArray());
            this.headerSent = 1;
        }
        this.out.write(this.buf.toByteArray());
        this.buf.reset();
        return;
    }
    public int getDepth()
    {
        return this.depth;
    }
    public boolean getFeature(String p2)
    {
        return 0;
    }
    public String getName()
    {
        return this.pending;
    }
    public String getNamespace()
    {
        return 0;
    }
    public String getPrefix(String p3, boolean p4)
    {
        throw new RuntimeException("NYI");
    }
    public Object getProperty(String p2)
    {
        return 0;
    }
    public void ignorableWhitespace(String p1)
    {
        return;
    }
    public void processingInstruction(String p3)
    {
        throw new RuntimeException("PI NYI");
    }
    public void setAttrStartTable(int p5, String[] p6)
    {
        v0 = 0;
        while (v0 < p6.length) {
            if(p6[v0] != 0) {
                v1 = new int[2];
                v1[0] = p5;
                v1[1] = (v0 + 5);
                this.attrStartTable.put(p6[v0], v1);
            }
            v0 = (v0 + 1);
        }
        return;
    }
    public void setAttrValueTable(int p5, String[] p6)
    {
        v0 = 0;
        while (v0 < p6.length) {
            if(p6[v0] != 0) {
                v1 = new int[2];
                v1[0] = p5;
                v1[1] = (v0 + 133);
                this.attrValueTable.put(p6[v0], v1);
            }
            v0 = (v0 + 1);
        }
        return;
    }
    public void setFeature(String p4, boolean p5)
    {
        throw new IllegalArgumentException(new StringBuilder().append("unknown feature ").append(p4).toString());
    }
    public void setOutput(java.io.OutputStream p2, String p3)
    {
        if(p3 == 0) {
            p3 = "UTF-8";
        }
        this.encoding = p3;
        this.out = p2;
        this.buf = new java.io.ByteArrayOutputStream();
        this.stringTableBuf = new java.io.ByteArrayOutputStream();
        this.headerSent = 0;
        return;
    }
    public void setOutput(java.io.Writer p3)
    {
        throw new RuntimeException("Wbxml requires an OutputStream!");
    }
    public void setPrefix(String p3, String p4)
    {
        throw new RuntimeException("NYI");
    }
    public void setProperty(String p4, Object p5)
    {
        throw new IllegalArgumentException(new StringBuilder().append("unknown property ").append(p4).toString());
    }
    public void setTagTable(int p5, String[] p6)
    {
        v0 = 0;
        while (v0 < p6.length) {
            if(p6[v0] != 0) {
                v1 = new int[2];
                v1[0] = p5;
                v1[1] = (v0 + 5);
                this.tagTable.put(p6[v0], v1);
            }
            v0 = (v0 + 1);
        }
        return;
    }
    public void startDocument(String p3, Boolean p4)
    {
        this.out.write(3);
        this.out.write(1);
        if(p3 != 0) {
            this.encoding = p3;
        }
        if(this.encoding.toUpperCase().equals("UTF-8") == 0) {
            if(this.encoding.toUpperCase().equals("ISO-8859-1") == 0) {
                throw new java.io.UnsupportedEncodingException(p3);
            } else {
                this.out.write(4);
            }
        } else {
            this.out.write(106);
        }
        return;
    }
    public org.xmlpull.v1.XmlSerializer startTag(String p3, String p4)
    {
        if ((p3 == 0) || ("".equals(p3) != 0)) {
            this.checkPending(0);
            this.pending = p4;
            this.depth = (this.depth + 1);
            return this;
        } else {
            throw new RuntimeException("NSP NYI");
        }
    }
    public org.xmlpull.v1.XmlSerializer text(String p2)
    {
        this.checkPending(0);
        this.writeStr(p2);
        return this;
    }
    public org.xmlpull.v1.XmlSerializer text(char[] p2, int p3, int p4)
    {
        this.checkPending(0);
        this.writeStr(new String(p2, p3, p4));
        return this;
    }
     void writeStrI(java.io.OutputStream p3, String p4)
    {
        p3.write(p4.getBytes(this.encoding));
        p3.write(0);
        return;
    }
    public void writeWapExtension(int p4, Object p5)
    {
        this.checkPending(0);
        this.buf.write(p4);
        switch(p4) {
            case 64:
            case 65:
            case 66:
                this.writeStrI(this.buf, p5);
                break;
            case 128:
            case 129:
            case 130:
                this.writeStrT(p5, 0);
                break;
            case 192:
            case 193:
            case 194:
                break;
            case 192:
            case 193:
            case 194:
                break;
            case 192:
            case 193:
            case 194:
                break;
            case 195:
                v0 = p5;
                org.kxml2.wap.WbxmlSerializer.writeInt(this.buf, v0.length);
                this.buf.write(v0);
                break;
            default:
                throw new IllegalArgumentException();
        }
        return;
    }
    static Crashlytics()
    {
        com.crashlytics.android.Crashlytics.r = 0;
        com.crashlytics.android.Crashlytics.s = 0;
        return;
    }
    public Crashlytics()
    {
        this.e = 0;
        this.f = 0;
        this.g = 0;
        this.h = 0;
        this.b = new java.util.concurrent.ConcurrentHashMap();
        this.a = System.currentTimeMillis();
        return;
    }
    static synthetic int a(com.crashlytics.android.Crashlytics p1, float p2, int p3)
    {
        return ((int) (((float) p3) * p2));
    }
    private com.crashlytics.android.b a(com.crashlytics.android.Y p12)
    {
        v0 = new String[1];
        v0[0] = this.i;
        return new com.crashlytics.android.b(com.crashlytics.android.Crashlytics.p, com.crashlytics.android.Crashlytics.k, com.crashlytics.android.Crashlytics.o, com.crashlytics.android.Crashlytics.n, com.crashlytics.android.internal.ab.a(v0), com.crashlytics.android.Crashlytics.m, com.crashlytics.android.internal.ai.a(com.crashlytics.android.Crashlytics.l).a(), com.crashlytics.android.Crashlytics.q, "0", p12);
    }
    static synthetic com.crashlytics.android.v a(com.crashlytics.android.Crashlytics p1)
    {
        return p1.d;
    }
    private static void a(int p5, String p6, String p7)
    {
        v0 = com.crashlytics.android.Crashlytics.getInstance();
        if((v0 != 0) && (v0.d != 0)) {
            v0.d.a((System.currentTimeMillis() - v0.a), new StringBuilder().append(com.crashlytics.android.internal.ab.b(p5)).append("/").append(p6).append(" ").append(p7).toString());
        } else {
            com.crashlytics.android.internal.v.a().b().a(p6, "Crashlytics must be initialized by calling Crashlytics.start(Context) prior to logging messages.", 0);
        }
        return;
    }
    static void a(String p2)
    {
        v0 = com.crashlytics.android.internal.v.a().a(com.crashlytics.android.internal.D);
        if(v0 != 0) {
            v0.a(new com.crashlytics.android.internal.ag(p2));
        }
        return;
    }
    private synchronized void a(String p7, android.content.Context p8, float p9)
    {
        synchronized(this) {
            if(com.crashlytics.android.Crashlytics.j == 0) {
                com.crashlytics.android.Crashlytics.p = p7;
                com.crashlytics.android.Crashlytics.j = new android.content.ContextWrapper(p8.getApplicationContext());
                com.crashlytics.android.Crashlytics.t = new com.crashlytics.android.internal.av(com.crashlytics.android.internal.v.a().b());
                com.crashlytics.android.internal.v.a().b().b("Crashlytics", new StringBuilder("Initializing Crashlytics ").append(com.crashlytics.android.Crashlytics.getCrashlyticsVersion()).toString());
                com.crashlytics.android.Crashlytics.k = com.crashlytics.android.Crashlytics.j.getPackageName();
                v0 = com.crashlytics.android.Crashlytics.j.getPackageManager();
                com.crashlytics.android.Crashlytics.l = v0.getInstallerPackageName(com.crashlytics.android.Crashlytics.k);
                com.crashlytics.android.internal.v.a().b().a("Crashlytics", new StringBuilder("Installer package name is: ").append(com.crashlytics.android.Crashlytics.l).toString());
                v0 = v0.getPackageInfo(com.crashlytics.android.Crashlytics.k, 0);
                com.crashlytics.android.Crashlytics.n = Integer.toString(v0.versionCode);
                if(v0.versionName != 0) {
                    v0 = v0.versionName;
                } else {
                    v0 = "0.0";
                }
                com.crashlytics.android.Crashlytics.o = v0;
                com.crashlytics.android.Crashlytics.m = p8.getPackageManager().getApplicationLabel(p8.getApplicationInfo()).toString();
                com.crashlytics.android.Crashlytics.q = Integer.toString(p8.getApplicationInfo().targetSdkVersion);
                this.i = com.crashlytics.android.internal.ab.i(p8);
                this.e = new com.crashlytics.android.internal.ao(com.crashlytics.android.Crashlytics.j);
                this.e.h();
                new com.crashlytics.android.c(this.i, com.crashlytics.android.internal.ab.a(com.crashlytics.android.Crashlytics.j, "com.crashlytics.RequireBuildId", 1)).a(p7, com.crashlytics.android.Crashlytics.k);
                com.crashlytics.android.internal.v.a().b().a("Crashlytics", "Installing exception handler...");
                this.d = new com.crashlytics.android.v(Thread.getDefaultUncaughtExceptionHandler(), this.c, this.i);
                v1 = this.d.f();
                this.d.d();
                this.d.c();
                this.d.h();
                Thread.setDefaultUncaughtExceptionHandler(this.d);
                com.crashlytics.android.internal.v.a().b().a("Crashlytics", "Successfully installed exception handler.");
                v0 = new java.util.concurrent.CountDownLatch(1);
                new Thread(new com.crashlytics.android.t(this, p8, p9, v0), "Crashlytics Initializer").start();
                if(v1 != 0) {
                    com.crashlytics.android.internal.v.a().b().a("Crashlytics", "Crashlytics detected incomplete initialization on previous app launch. Will initialize synchronously.");
                    if(v0.await(4000.0, java.util.concurrent.TimeUnit.MILLISECONDS) == 0) {
                        com.crashlytics.android.internal.v.a().b().c("Crashlytics", "Crashlytics initialization was not completed in the allotted time.");
                    }
                }
            } else {
                com.crashlytics.android.internal.v.a().b().a("Crashlytics", "Crashlytics already started, ignoring re-initialization attempt.");
            }
        }
        return;
    }
    static void a(boolean p3)
    {
        com.crashlytics.android.internal.ab.a().edit().putBoolean("always_send_reports_opt_in", 1).commit();
        return;
    }
    private boolean a(android.content.Context p11, float p12)
    {
        v7 = 1;
        v6 = 0;
        v9 = com.crashlytics.android.internal.ab.g(this.getContext());
        com.crashlytics.android.internal.aS.a().a(p11, com.crashlytics.android.Crashlytics.t, com.crashlytics.android.Crashlytics.n, com.crashlytics.android.Crashlytics.o, com.crashlytics.android.Crashlytics.i()).c();
        v2 = com.crashlytics.android.internal.aS.a().b();
        if(v2 == 0) {
            v0 = 0;
            v1 = 0;
        } else {
            v0 = v2.a;
            if("new".equals(v0.a) == 0) {
                if("configured".equals(v0.a) == 0) {
                    if(v0.d) {
                        com.crashlytics.android.internal.v.a().b().a("Crashlytics", "Server says an update is required - forcing a full App update.");
                        this.a(com.crashlytics.android.Y.a(this.getContext(), v9));
                        new com.crashlytics.android.ad(com.crashlytics.android.Crashlytics.i(), v0.b, com.crashlytics.android.Crashlytics.t).a(this);
                    }
                    v0 = 1;
                } else {
                    v0 = com.crashlytics.android.internal.aS.a().d();
                }
            } else {
                this.a(com.crashlytics.android.Y.a(this.getContext(), v9));
                if(new com.crashlytics.android.T(com.crashlytics.android.Crashlytics.i(), v0.b, com.crashlytics.android.Crashlytics.t).a(this) == 0) {
                    com.crashlytics.android.internal.v.a().b().a("Crashlytics", "Failed to create app with Crashlytics service.", 0);
                    v0 = 0;
                } else {
                    v0 = com.crashlytics.android.internal.aS.a().d();
                }
            }
            v1 = v0;
            v0 = v2.d.b;
        }
        if((v1 == 0) || (v0 == 0)) {
            v6 = 1;
        } else {
            v7 = (this.d.b() & 1);
            v0 = this.q();
            if(v0 != 0) {
                new com.crashlytics.android.aa(v0).a(p12);
            }
        }
        if(v6 != 0) {
            com.crashlytics.android.internal.v.a().b().a("Crashlytics", "Crash reporting disabled.");
        }
        return v7;
    }
    static synthetic boolean a(com.crashlytics.android.Crashlytics p6, android.app.Activity p7, com.crashlytics.android.internal.aQ p8)
    {
        v4 = new com.crashlytics.android.X(p7, p8);
        v3 = new com.crashlytics.android.u(p6, 0);
        p7.runOnUiThread(new com.crashlytics.android.p(p6, p7, v3, v4, p8));
        com.crashlytics.android.internal.v.a().b().a("Crashlytics", "Waiting for user opt-in.");
        v3.b();
        return v3.a();
    }
    static synthetic boolean a(com.crashlytics.android.Crashlytics p1, android.content.Context p2, float p3)
    {
        return p1.a(p2, p3);
    }
    static void b(String p2)
    {
        v0 = com.crashlytics.android.internal.v.a().a(com.crashlytics.android.internal.D);
        if(v0 != 0) {
            v0.a(new com.crashlytics.android.internal.af(p2));
        }
        return;
    }
    private static String c(String p2)
    {
        if(p2 != 0) {
            p2 = p2.trim();
            if(p2.length() > 1024) {
                p2 = p2.substring(0, 1024);
            }
        }
        return p2;
    }
    static String d()
    {
        return com.crashlytics.android.Crashlytics.k;
    }
    static String e()
    {
        return com.crashlytics.android.Crashlytics.l;
    }
    static String f()
    {
        return com.crashlytics.android.Crashlytics.o;
    }
    static String g()
    {
        return com.crashlytics.android.Crashlytics.n;
    }
    public static String getCrashlyticsVersion()
    {
        return com.crashlytics.android.Crashlytics.getInstance().getVersion();
    }
    public static synchronized com.crashlytics.android.Crashlytics getInstance()
    {
        synchronized(com.crashlytics.android.Crashlytics) {
            v0 = com.crashlytics.android.internal.v.a().a(com.crashlytics.android.Crashlytics);
            if(v0 == 0) {
                if(com.crashlytics.android.Crashlytics.v == 0) {
                    com.crashlytics.android.Crashlytics.v = new com.crashlytics.android.Crashlytics();
                }
                v0 = com.crashlytics.android.Crashlytics.v;
            }
        }
        return v0;
    }
    public static com.crashlytics.android.PinningInfoProvider getPinningInfoProvider()
    {
        return com.crashlytics.android.Crashlytics.s;
    }
    static String h()
    {
        return com.crashlytics.android.Crashlytics.m;
    }
    static String i()
    {
        return com.crashlytics.android.internal.ab.a(com.crashlytics.android.Crashlytics.j, "com.crashlytics.ApiEndpoint");
    }
    static boolean k()
    {
        return com.crashlytics.android.internal.ab.a().getBoolean("always_send_reports_opt_in", 0);
    }
    public static void log(int p4, String p5, String p6)
    {
        com.crashlytics.android.Crashlytics.a(p4, p5, p6);
        com.crashlytics.android.internal.v.a().b().a(p4, new StringBuilder().append(p5).toString(), new StringBuilder().append(p6).toString(), 1);
        return;
    }
    public static void log(String p2)
    {
        com.crashlytics.android.Crashlytics.a(3, "Crashlytics", p2);
        return;
    }
    public static void logException(Throwable p4)
    {
        v0 = com.crashlytics.android.Crashlytics.getInstance();
        if((v0 != 0) && (v0.d != 0)) {
            if(p4 != 0) {
                v0.d.a(Thread.currentThread(), p4);
            } else {
                com.crashlytics.android.internal.v.a().b().a(5, "Crashlytics", "Crashlytics is ignoring a request to log a null exception.");
            }
        } else {
            com.crashlytics.android.internal.v.a().b().a("Crashlytics", "Crashlytics must be initialized by calling Crashlytics.start(Context) prior to logging exceptions.", 0);
        }
        return;
    }
    static synthetic com.crashlytics.android.internal.av s()
    {
        return com.crashlytics.android.Crashlytics.t;
    }
    public static void setApplicationInstallationIdentifier(String p2)
    {
        com.crashlytics.android.internal.v.a().a(com.crashlytics.android.Crashlytics.c(p2));
        return;
    }
    public static void setBool(String p1, boolean p2)
    {
        com.crashlytics.android.Crashlytics.setString(p1, Boolean.toString(p2));
        return;
    }
    public static void setDouble(String p1, double p2)
    {
        com.crashlytics.android.Crashlytics.setString(p1, Double.toString(p2));
        return;
    }
    public static void setFloat(String p1, float p2)
    {
        com.crashlytics.android.Crashlytics.setString(p1, Float.toString(p2));
        return;
    }
    public static void setInt(String p1, int p2)
    {
        com.crashlytics.android.Crashlytics.setString(p1, Integer.toString(p2));
        return;
    }
    public static void setLong(String p1, long p2)
    {
        com.crashlytics.android.Crashlytics.setString(p1, Long.toString(p2));
        return;
    }
    public static void setPinningInfoProvider(com.crashlytics.android.PinningInfoProvider p2)
    {
        if(com.crashlytics.android.Crashlytics.s != p2) {
            com.crashlytics.android.Crashlytics.s = p2;
            if(com.crashlytics.android.Crashlytics.t != 0) {
                if(p2 != 0) {
                    com.crashlytics.android.Crashlytics.t.a(new com.crashlytics.android.k(p2));
                } else {
                    com.crashlytics.android.Crashlytics.t.a(0);
                }
            }
        }
        return;
    }
    public static void setString(String p4, String p5)
    {
        if(p4 != 0) {
            p4 = com.crashlytics.android.Crashlytics.c(p4);
            if((com.crashlytics.android.Crashlytics.getInstance().b.size() >= 64) && (com.crashlytics.android.Crashlytics.getInstance().b.containsKey(p4) == 0)) {
                com.crashlytics.android.internal.v.a().b().a("Crashlytics", "Exceeded maximum number of custom attributes (64)");
            } else {
                if(p5 != 0) {
                    p5 = com.crashlytics.android.Crashlytics.c(p5);
                } else {
                    p5 = "";
                }
                com.crashlytics.android.Crashlytics.getInstance().b.put(p4, p5);
            }
        } else {
            if((com.crashlytics.android.Crashlytics.j == 0) || (com.crashlytics.android.internal.ab.f(com.crashlytics.android.Crashlytics.j) == 0)) {
                com.crashlytics.android.internal.v.a().b().a("Crashlytics", "Attempting to set custom attribute with null key, ignoring.", 0);
            } else {
                throw new IllegalArgumentException("Custom attribute key cannot be null.");
            }
        }
        return;
    }
    public static void setUserEmail(String p2)
    {
        com.crashlytics.android.Crashlytics.getInstance().g = com.crashlytics.android.Crashlytics.c(p2);
        return;
    }
    public static void setUserIdentifier(String p2)
    {
        com.crashlytics.android.Crashlytics.getInstance().f = com.crashlytics.android.Crashlytics.c(p2);
        return;
    }
    public static void setUserName(String p2)
    {
        com.crashlytics.android.Crashlytics.getInstance().h = com.crashlytics.android.Crashlytics.c(p2);
        return;
    }
    public static void start(android.content.Context p1)
    {
        com.crashlytics.android.Crashlytics.start(p1, 1.0);
        return;
    }
    public static void start(android.content.Context p3, float p4)
    {
        com.crashlytics.android.Crashlytics.u = p4;
        if(com.crashlytics.android.internal.ab.d(p3) == 0) {
            com.crashlytics.android.internal.v.a().a(new com.crashlytics.android.internal.A());
        }
        v0 = new com.crashlytics.android.internal.u[2];
        v0[0] = com.crashlytics.android.Crashlytics.getInstance();
        v0[1] = new com.crashlytics.android.internal.D();
        com.crashlytics.android.internal.v.a(p3, v0);
        return;
    }
    final java.util.Map a()
    {
        return java.util.Collections.unmodifiableMap(this.b);
    }
    final com.crashlytics.android.internal.ao b()
    {
        return this.e;
    }
    protected final void c()
    {
        v0 = super.getContext();
        v1 = com.crashlytics.android.internal.r.a(v0, 0);
        if(v1 != 0) {
            this.a(v1, v0, com.crashlytics.android.Crashlytics.u);
        }
        return;
    }
    public final void crash()
    {
        new com.crashlytics.android.CrashTest().indexOutOfBounds();
        return;
    }
    public final boolean getDebugMode()
    {
        return com.crashlytics.android.internal.v.a().f();
    }
    public final String getVersion()
    {
        return com.crashlytics.android.internal.v.a().getVersion();
    }
    final boolean j()
    {
        return com.crashlytics.android.internal.aS.a();
    }
    final com.crashlytics.android.v l()
    {
        return this.d;
    }
    final String m()
    {
        if(this.e.a() == 0) {
            v0 = 0;
        } else {
            v0 = this.f;
        }
        return v0;
    }
    final String n()
    {
        if(this.e.a() == 0) {
            v0 = 0;
        } else {
            v0 = this.g;
        }
        return v0;
    }
    final String o()
    {
        if(this.e.a() == 0) {
            v0 = 0;
        } else {
            v0 = this.h;
        }
        return v0;
    }
    final boolean p()
    {
        return com.crashlytics.android.internal.aS.a();
    }
    final com.crashlytics.android.V q()
    {
        return com.crashlytics.android.internal.aS.a().a(new com.crashlytics.android.n(this), 0);
    }
    final com.crashlytics.android.internal.aR r()
    {
        return com.crashlytics.android.internal.aS.a().a(new com.crashlytics.android.o(this), 0);
    }
    public final void setDebugMode(boolean p2)
    {
        com.crashlytics.android.internal.v.a().a(p2);
        return;
    }
    public final void setListener(com.crashlytics.android.CrashlyticsListener p1)
    {
        this.c = p1;
        return;
    }
    public final boolean verifyPinning(java.net.URL p6)
    {
        if(com.crashlytics.android.Crashlytics.getPinningInfoProvider() == 0) {
            v0 = 0;
        } else {
            v2 = com.crashlytics.android.Crashlytics.t.a(com.crashlytics.android.internal.ax.a, p6.toString());
            v2.a().setInstanceFollowRedirects(0);
            v2.b();
            v0 = 1;
        }
        return v0;
    }
    public T(String p2, String p3, com.crashlytics.android.internal.av p4)
    {
        this(p2, p3, p4, com.crashlytics.android.internal.ax.b);
        return;
    }
    public ad(String p2, String p3, com.crashlytics.android.internal.av p4)
    {
        this(p2, p3, p4, com.crashlytics.android.internal.ax.c);
        return;
    }
    public D()
    {
        return;
    }
    public static com.crashlytics.android.internal.D a()
    {
        return com.crashlytics.android.internal.v.a().a(com.crashlytics.android.internal.D);
    }
    static synthetic void a(com.crashlytics.android.internal.D p14)
    {
        v13 = p14.getContext();
        v9 = new com.crashlytics.android.internal.K(new com.crashlytics.android.internal.X(), new com.crashlytics.android.internal.ah(), new com.crashlytics.android.internal.aj(com.crashlytics.android.internal.v.a().h(), "session_analytics.tap", "session_analytics_to_send"));
        v3 = p14.d.b();
        v4 = p14.d.g();
        v5 = p14.d.c();
        v6 = p14.d.d();
        v1 = com.crashlytics.android.internal.v.a().d();
        if((v1 == 0) || (android.os.Build$VERSION.SDK_INT < 14)) {
            p14.h = new com.crashlytics.android.internal.O(v13.getPackageName(), v3, v4, v5, v6, p14.b, p14.c, v9, p14.g);
        } else {
            p14.h = new com.crashlytics.android.internal.F(v1, v13.getPackageName(), v3, v4, v5, v6, p14.b, p14.c, v9, p14.g);
        }
        if(p14.e.a().getBoolean("analytics_launched", 0) != 0) {
            v0 = 0;
        } else {
            if((System.currentTimeMillis() - p14.f) >= 3600000.0) {
                v0 = 0;
            } else {
                v0 = 1;
            }
            } else {
                v0 = 1;
            }
        }
        if(v0 != 0) {
            com.crashlytics.android.internal.v.a().b().a("Crashlytics", "First launch");
            if(p14.h != 0) {
                p14.h.b();
                p14.e.a(p14.e.b().putBoolean("analytics_launched", 1));
            }
        }
        v0 = com.crashlytics.android.internal.aS.a();
        v2 = p14.g;
        v3 = p14.b;
        v4 = p14.c;
        p14 = p14.b();
        v0.a(v13, v2, v3, v4, p14).c();
        v0 = com.crashlytics.android.internal.aS.a().b();
        if(v0 != 0) {
            if(v0.d.c) {
                p14.h.a(v0.e, p14.b());
            } else {
                com.crashlytics.android.internal.ab.c("Disabling analytics collection based on settings flag value.");
                p14.h.a();
            }
        }
        return;
    }
    private String b()
    {
        return com.crashlytics.android.internal.ab.a(this.getContext(), "com.crashlytics.ApiEndpoint");
    }
    public final void a(com.crashlytics.android.internal.af p3)
    {
        if(this.h != 0) {
            this.h.a(p3.a());
        }
        return;
    }
    public final void a(com.crashlytics.android.internal.ag p3)
    {
        if(this.h != 0) {
            this.h.b(p3.a());
        }
        return;
    }
    protected final void c()
    {
        this.g = new com.crashlytics.android.internal.av(com.crashlytics.android.internal.v.a().b());
        this.e = new com.crashlytics.android.internal.aJ(com.crashlytics.android.internal.v.a().a(com.crashlytics.android.internal.D));
        v1 = this.getContext();
        v0 = v1.getPackageManager();
        this.d = new com.crashlytics.android.internal.ao(v1);
        this.a = v1.getPackageName();
        v2 = v0.getPackageInfo(this.a, 0);
        this.b = Integer.toString(v2.versionCode);
        if(v2.versionName != 0) {
            v0 = v2.versionName;
        } else {
            v0 = "0.0";
        }
        this.c = v0;
        if(android.os.Build$VERSION.SDK_INT < 9) {
            this.f = v1.getPackageManager().getApplicationInfo(v1.getPackageName(), 0);
        } else {
            this.f = v2.firstInstallTime;
        }
        new Thread(new com.crashlytics.android.internal.E(this), "Crashlytics Initializer").start();
        return;
    }
    public String getVersion()
    {
        return com.crashlytics.android.internal.v.a().getVersion();
    }
    public F(android.app.Application p13, String p14, String p15, String p16, String p17, String p18, String p19, String p20, com.crashlytics.android.internal.K p21, com.crashlytics.android.internal.av p22)
    {
        this(p13, p14, p15, p16, p17, p18, p19, p20, p21, com.crashlytics.android.internal.ah.b("Crashlytics Trace Manager"), p22);
        return;
    }
    private F(android.app.Application p12, String p13, String p14, String p15, String p16, String p17, String p18, String p19, com.crashlytics.android.internal.K p20, java.util.concurrent.ScheduledExecutorService p21, com.crashlytics.android.internal.av p22)
    {
        this(p13, p14, p15, p16, p17, p18, p19, p20, p21, p22);
        this.c = new com.crashlytics.android.internal.G(this);
        this.b = p12;
        com.crashlytics.android.internal.ab.c("Registering activity lifecycle callbacks for session analytics.");
        p12.registerActivityLifecycleCallbacks(this.c);
        return;
    }
    final void a()
    {
        com.crashlytics.android.internal.ab.c("Unregistering activity lifecycle callbacks for session analytics");
        this.b.unregisterActivityLifecycleCallbacks(this.c);
        super.a();
        return;
    }
    public af(String p1)
    {
        this(p1);
        return;
    }
    public ag(String p1)
    {
        this(p1);
        return;
    }
     az(com.crashlytics.android.internal.ay p1, java.io.Closeable p2, boolean p3, java.io.InputStream p4, java.io.OutputStream p5)
    {
        this.c = p1;
        this.a = p4;
        this.b = p5;
        this(p2, p3);
        return;
    }
    public final synthetic Object a()
    {
        v0 = new byte[com.crashlytics.android.internal.ay.a(this.c)];
        while(true) {
            v1 = this.a.read(v0);
            if(v1 != 15) {
                this.b.write(v0, 0, v1);
            }
        }
        return this.c;
    }
     MarshalHashtable$ItemSoapObject(org.ksoap2.serialization.MarshalHashtable p3, java.util.Hashtable p4)
    {
        v1 = 0;
        this(v1, v1);
        this.this$0 = p3;
        this.resolvedIndex = 15;
        this.h = p4;
        this.addProperty("key", 0);
        this.addProperty("value", 0);
        return;
    }
    public void setProperty(int p4, Object p5)
    {
        if(this.resolvedIndex != 15) {
            if(this.resolvedIndex != 0) {
                v0 = this.getProperty(1);
            } else {
                v0 = this.getProperty(0);
            }
            if(p4 != 0) {
                this.h.put(v0, p5);
            } else {
                this.h.put(p5, v0);
            }
        } else {
            super.setProperty(p4, p5);
            this.resolvedIndex = p4;
        }
        return;
    }
    public HttpsTransportSE(String p3, int p4, String p5, int p6)
    {
        this(new StringBuffer().append("https://").append(p3).append(":").append(p4).append(p5).toString());
        this.conn = 0;
        this.host = p3;
        this.port = p4;
        this.file = p5;
        this.timeout = p6;
        return;
    }
    public org.ksoap2.transport.ServiceConnection getConnection()
    {
        return this.conn;
    }
    public String getHost()
    {
        return new java.net.URL(this.url).getHost();
    }
    public String getPath()
    {
        return new java.net.URL(this.url).getPath();
    }
    public int getPort()
    {
        return new java.net.URL(this.url).getPort();
    }
    protected org.ksoap2.transport.ServiceConnection getServiceConnection()
    {
        this.conn = new org.ksoap2.transport.HttpsServiceConnectionSE(this.host, this.port, this.file, this.timeout);
        return this.conn;
    }
     KeepAliveHttpsTransportSE$1(org.ksoap2.transport.KeepAliveHttpsTransportSE p1, String p2, int p3, String p4, int p5)
    {
        this(p2, p3, p4, p5);
        this.this$0 = p1;
        return;
    }
    public void setRequestProperty(String p2, String p3)
    {
        if(("Connection".equalsIgnoreCase(p2) == 0) || ("close".equalsIgnoreCase(p3) == 0)) {
            super.setRequestProperty(p2, p3);
        }
        return;
    }
    public KeepAliveHttpsTransportSE(String p2, int p3, String p4, int p5)
    {
        this(p2, p3, p4, p5);
        this.conn = 0;
        this.host = p2;
        this.port = p3;
        this.file = p4;
        this.timeout = p5;
        return;
    }
    protected org.ksoap2.transport.ServiceConnection getServiceConnection()
    {
        this.conn = new org.ksoap2.transport.KeepAliveHttpsTransportSE$1(this, this.host, this.port, this.file, this.timeout);
        this.conn.setRequestProperty("Connection", "keep-alive");
        return this.conn;
    }
